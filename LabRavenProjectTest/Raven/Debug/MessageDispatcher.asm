; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Teaja\Documents\Artificial-Fun\LabRavenProjectTest\Common\Messaging\MessageDispatcher.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_SmallestDelay DQ 03fd0000000000000r		; 0.25
_Pi	DQ	0400921f9f01b866er		; 3.14159
_pi	DQ	0400921f9f01b866er		; 3.14159
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	??0MessageDispatcher@@AAE@XZ			; MessageDispatcher::MessageDispatcher
PUBLIC	?Instance@MessageDispatcher@@SAPAV1@XZ		; MessageDispatcher::Instance
EXTRN	_atexit:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ?instance@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4V2@A
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\messagedispatcher.cpp
_BSS	SEGMENT
?instance@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4V2@A DB 014H DUP (?) ; `MessageDispatcher::Instance'::`2'::instance
_BSS	ENDS
;	COMDAT ?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA
_BSS	SEGMENT
?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA DD 01H DUP (?) ; `MessageDispatcher::Instance'::`2'::$S1
_BSS	ENDS
xdata$x	SEGMENT
__unwindtable$?Instance@MessageDispatcher@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Instance@MessageDispatcher@@SAPAV1@XZ$0
__ehfuncinfo$?Instance@MessageDispatcher@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Instance@MessageDispatcher@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Instance@MessageDispatcher@@SAPAV1@XZ PROC		; MessageDispatcher::Instance

; 17   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Instance@MessageDispatcher@@SAPAV1@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 18   :   static MessageDispatcher instance; 

	mov	eax, DWORD PTR ?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA
	and	eax, 1
	jne	SHORT $LN1@Instance
	mov	ecx, DWORD PTR ?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA
	or	ecx, 1
	mov	DWORD PTR ?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA, ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?instance@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4V2@A
	call	??0MessageDispatcher@@AAE@XZ		; MessageDispatcher::MessageDispatcher
	push	OFFSET ??__Finstance@?1??Instance@MessageDispatcher@@SAPAV1@XZ@YAXXZ ; `MessageDispatcher::Instance'::`2'::`dynamic atexit destructor for 'instance''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN1@Instance:

; 19   :   
; 20   :   return &instance;

	mov	eax, OFFSET ?instance@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4V2@A

; 21   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Instance@MessageDispatcher@@SAPAV1@XZ$0:
	mov	eax, DWORD PTR ?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ?$S1@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4IA, eax
	ret	0
__ehhandler$?Instance@MessageDispatcher@@SAPAV1@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Instance@MessageDispatcher@@SAPAV1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Instance@MessageDispatcher@@SAPAV1@XZ ENDP		; MessageDispatcher::Instance
PUBLIC	??0?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\messagedispatcher.h
;	COMDAT ??0MessageDispatcher@@AAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MessageDispatcher@@AAE@XZ PROC			; MessageDispatcher::MessageDispatcher, COMDAT
; _this$ = ecx

; 47   :   MessageDispatcher(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MessageDispatcher@@AAE@XZ ENDP			; MessageDispatcher::MessageDispatcher
_TEXT	ENDS
PUBLIC	?Discharge@MessageDispatcher@@AAEXPAVBaseGameEntity@@ABUTelegram@@@Z ; MessageDispatcher::Discharge
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\messagedispatcher.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pReceiver$ = 8						; size = 4
_telegram$ = 12						; size = 4
?Discharge@MessageDispatcher@@AAEXPAVBaseGameEntity@@ABUTelegram@@@Z PROC ; MessageDispatcher::Discharge
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 29   :   if (!pReceiver->HandleMessage(telegram))

	mov	esi, esp
	mov	eax, DWORD PTR _telegram$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pReceiver$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pReceiver$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 30   :   {
; 31   :     //telegram could not be handled
; 32   :     #ifdef SHOW_MESSAGING_INFO
; 33   :     debug_con << "Message not handled" << "";
; 34   :     #endif
; 35   :   }
; 36   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Discharge@MessageDispatcher@@AAEXPAVBaseGameEntity@@ABUTelegram@@@Z ENDP ; MessageDispatcher::Discharge
_TEXT	ENDS
PUBLIC	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
PUBLIC	??$insert@AAUTelegram@@@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@1@AAUTelegram@@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::insert<Telegram &>
PUBLIC	?GetCurrentFrame@FrameCounter@@QAEJXZ		; FrameCounter::GetCurrentFrame
PUBLIC	??0Telegram@@QAE@NHHHPAX@Z			; Telegram::Telegram
PUBLIC	__real@0000000000000000
PUBLIC	?DispatchMsg@MessageDispatcher@@QAEXNHHHPAX@Z	; MessageDispatcher::DispatchMsg
EXTRN	?Instance@FrameCounter@@SAPAV1@XZ:PROC		; FrameCounter::Instance
EXTRN	?GetEntityFromID@EntityManager@@QBEPAVBaseGameEntity@@H@Z:PROC ; EntityManager::GetEntityFromID
EXTRN	?Instance@EntityManager@@SAPAV1@XZ:PROC		; EntityManager::Instance
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
tv142 = -76						; size = 4
$T140706 = -72						; size = 16
_CurrentTime$131676 = -56				; size = 8
_telegram$ = -44					; size = 32
_pReceiver$ = -8					; size = 4
_this$ = -4						; size = 4
_delay$ = 8						; size = 8
_sender$ = 16						; size = 4
_receiver$ = 20						; size = 4
_msg$ = 24						; size = 4
_AdditionalInfo$ = 28					; size = 4
?DispatchMsg@MessageDispatcher@@QAEXNHHHPAX@Z PROC	; MessageDispatcher::DispatchMsg
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 
; 51   :   //get a pointer to the receiver
; 52   :   BaseGameEntity* pReceiver = EntityMgr->GetEntityFromID(receiver);

	mov	eax, DWORD PTR _receiver$[ebp]
	push	eax
	call	?Instance@EntityManager@@SAPAV1@XZ	; EntityManager::Instance
	mov	ecx, eax
	call	?GetEntityFromID@EntityManager@@QBEPAVBaseGameEntity@@H@Z ; EntityManager::GetEntityFromID
	mov	DWORD PTR _pReceiver$[ebp], eax

; 53   : 
; 54   :   //make sure the receiver is valid
; 55   :   if (pReceiver == NULL)

	cmp	DWORD PTR _pReceiver$[ebp], 0
	jne	SHORT $LN3@DispatchMs

; 56   :   {
; 57   :     #ifdef SHOW_MESSAGING_INFO
; 58   :     debug_con << "\nWarning! No Receiver with ID of " << receiver << " found" << "";
; 59   :     #endif
; 60   : 
; 61   :     return;

	jmp	SHORT $LN4@DispatchMs
$LN3@DispatchMs:

; 62   :   }
; 63   :   
; 64   :   //create the telegram
; 65   :   Telegram telegram(0, sender, receiver, msg, AdditionalInfo);

	mov	ecx, DWORD PTR _AdditionalInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR _receiver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _telegram$[ebp]
	call	??0Telegram@@QAE@NHHHPAX@Z		; Telegram::Telegram

; 66   :   
; 67   :   //if there is no delay, route telegram immediately                       
; 68   :   if (delay <= 0.0)                                                        

	fldz
	fcomp	QWORD PTR _delay$[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN2@DispatchMs

; 69   :   {
; 70   :     #ifdef SHOW_MESSAGING_INFO
; 71   :     debug_con << "\nTelegram dispatched at time: " << TickCounter->GetCurrentFrame()
; 72   :          << " by " << sender << " for " << receiver 
; 73   :          << ". Msg is " << msg << "";
; 74   :     #endif
; 75   : 
; 76   :     //send the telegram to the recipient
; 77   :     Discharge(pReceiver, telegram);

	lea	edx, DWORD PTR _telegram$[ebp]
	push	edx
	mov	eax, DWORD PTR _pReceiver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Discharge@MessageDispatcher@@AAEXPAVBaseGameEntity@@ABUTelegram@@@Z ; MessageDispatcher::Discharge

; 78   :   }
; 79   : 
; 80   :   //else calculate the time when the telegram should be dispatched
; 81   :   else

	jmp	SHORT $LN1@DispatchMs
$LN2@DispatchMs:

; 82   :   {
; 83   :     double CurrentTime = TickCounter->GetCurrentFrame(); 

	call	?Instance@FrameCounter@@SAPAV1@XZ	; FrameCounter::Instance
	mov	ecx, eax
	call	?GetCurrentFrame@FrameCounter@@QAEJXZ	; FrameCounter::GetCurrentFrame
	mov	DWORD PTR tv142[ebp], eax
	fild	DWORD PTR tv142[ebp]
	fstp	QWORD PTR _CurrentTime$131676[ebp]

; 84   : 
; 85   :     telegram.DispatchTime = CurrentTime + delay;

	fld	QWORD PTR _CurrentTime$131676[ebp]
	fadd	QWORD PTR _delay$[ebp]
	fstp	QWORD PTR _telegram$[ebp+16]

; 86   : 
; 87   :     //and put it in the queue
; 88   :     PriorityQ.insert(telegram);   

	lea	ecx, DWORD PTR _telegram$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T140706[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@AAUTelegram@@@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@1@AAUTelegram@@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::insert<Telegram &>
	lea	ecx, DWORD PTR $T140706[ebp]
	call	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
$LN1@DispatchMs:
$LN4@DispatchMs:

; 89   : 
; 90   :     #ifdef SHOW_MESSAGING_INFO
; 91   :     debug_con << "\nDelayed telegram from " << sender << " recorded at time " 
; 92   :             << TickCounter->GetCurrentFrame() << " for " << receiver
; 93   :             << ". Msg is " << msg << "";
; 94   :     #endif
; 95   :   }
; 96   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@DispatchMs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN9@DispatchMs:
	DD	1
	DD	$LN8@DispatchMs
$LN8@DispatchMs:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN7@DispatchMs
$LN7@DispatchMs:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
?DispatchMsg@MessageDispatcher@@QAEXNHHHPAX@Z ENDP	; MessageDispatcher::DispatchMsg
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\telegram.h
_TEXT	ENDS
;	COMDAT ??0Telegram@@QAE@NHHHPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_time$ = 8						; size = 8
_sender$ = 16						; size = 4
_receiver$ = 20						; size = 4
_msg$ = 24						; size = 4
_info$ = 28						; size = 4
??0Telegram@@QAE@NHHHPAX@Z PROC				; Telegram::Telegram, COMDAT
; _this$ = ecx

; 55   :   {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sender$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _receiver$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [eax+16]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [ecx+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0Telegram@@QAE@NHHHPAX@Z ENDP				; Telegram::Telegram
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\framecounter.h
_TEXT	ENDS
;	COMDAT ?GetCurrentFrame@FrameCounter@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentFrame@FrameCounter@@QAEJXZ PROC		; FrameCounter::GetCurrentFrame, COMDAT
; _this$ = ecx

; 27   :   long GetCurrentFrame(){return m_lCount;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurrentFrame@FrameCounter@@QAEJXZ ENDP		; FrameCounter::GetCurrentFrame
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::~_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
_TEXT	ENDS
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::~_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::~_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
_TEXT	ENDS
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 135  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 136  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 137  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 138  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 139  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 140  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Iterator_b:
	DD	1
	DD	$LN6@Iterator_b
$LN6@Iterator_b:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$15159 = -8					; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 184  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 186  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me

; 187  : 			{	// adopted, remove self from list
; 188  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$15159[ebp], edx
$LN3@Orphan_me:

; 189  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$15159[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$15159[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me

; 190  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$15159[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$15159[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:

; 191  : 
; 192  : 			if (*_Pnext == 0)

	mov	edx, DWORD PTR __Pnext$15159[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me

; 193  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	push	193					; 000000c1H
	push	OFFSET ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:

; 194  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$15159[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 195  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:

; 196  : 			}
; 197  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 198  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBEABUTelegram@@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator*
PUBLIC	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBUTelegram@@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator->
PUBLIC	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
PUBLIC	?empty@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::empty
PUBLIC	?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ ; MessageDispatcher::DispatchDelayedMessages
xdata$x	SEGMENT
__unwindtable$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ$2
__ehfuncinfo$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\messagedispatcher.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv209 = -132						; size = 4
tv208 = -128						; size = 4
tv206 = -124						; size = 4
tv215 = -120						; size = 4
tv142 = -116						; size = 4
tv200 = -112						; size = 4
tv213 = -108						; size = 4
tv195 = -104						; size = 4
tv211 = -100						; size = 4
tv218 = -96						; size = 4
$T140757 = -92						; size = 4
$T140756 = -88						; size = 12
$T140755 = -76						; size = 4
$T140754 = -72						; size = 12
$T140752 = -60						; size = 12
$T140750 = -48						; size = 12
$T140749 = -33						; size = 1
_pReceiver$131977 = -32					; size = 4
_telegram$131975 = -28					; size = 4
_CurrentTime$ = -24					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ PROC	; MessageDispatcher::DispatchDelayedMessages
; _this$ = ecx

; 104  : { 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 30					; 0000001eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T140757[ebp], 0

; 105  :   //first get current time
; 106  :   double CurrentTime = TickCounter->GetCurrentFrame(); 

	call	?Instance@FrameCounter@@SAPAV1@XZ	; FrameCounter::Instance
	mov	ecx, eax
	call	?GetCurrentFrame@FrameCounter@@QAEJXZ	; FrameCounter::GetCurrentFrame
	mov	DWORD PTR tv218[ebp], eax
	fild	DWORD PTR tv218[ebp]
	fstp	QWORD PTR _CurrentTime$[ebp]
$LN2@DispatchDe:

; 107  : 
; 108  :   //now peek at the queue to see if any telegrams need dispatching.
; 109  :   //remove all telegrams from the front of the queue that have gone
; 110  :   //past their sell by date
; 111  :   while( !PriorityQ.empty() &&
; 112  : 	     (PriorityQ.begin()->DispatchTime < CurrentTime) && 
; 113  :          (PriorityQ.begin()->DispatchTime > 0) )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBE_NXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@DispatchDe
	lea	ecx, DWORD PTR $T140750[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv211[ebp], eax
	mov	edx, DWORD PTR tv211[ebp]
	mov	DWORD PTR tv195[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T140757[ebp]
	or	eax, 1
	mov	DWORD PTR $T140757[ebp], eax
	mov	ecx, DWORD PTR tv195[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBUTelegram@@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator->
	fld	QWORD PTR _CurrentTime$[ebp]
	fcomp	QWORD PTR [eax+16]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@DispatchDe
	lea	ecx, DWORD PTR $T140752[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv213[ebp], eax
	mov	edx, DWORD PTR tv213[ebp]
	mov	DWORD PTR tv200[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T140757[ebp]
	or	eax, 2
	mov	DWORD PTR $T140757[ebp], eax
	mov	ecx, DWORD PTR tv200[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBUTelegram@@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator->
	fldz
	fcomp	QWORD PTR [eax+16]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN5@DispatchDe
	mov	DWORD PTR tv142[ebp], 1
	jmp	SHORT $LN6@DispatchDe
$LN5@DispatchDe:
	mov	DWORD PTR tv142[ebp], 0
$LN6@DispatchDe:
	mov	cl, BYTE PTR tv142[ebp]
	mov	BYTE PTR $T140749[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T140757[ebp]
	and	edx, 2
	je	SHORT $LN11@DispatchDe
	and	DWORD PTR $T140757[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T140752[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN11@DispatchDe:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T140757[ebp]
	and	eax, 1
	je	SHORT $LN12@DispatchDe
	and	DWORD PTR $T140757[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T140750[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN12@DispatchDe:
	movzx	ecx, BYTE PTR $T140749[ebp]
	test	ecx, ecx
	je	$LN1@DispatchDe

; 114  :   {
; 115  :     //read the telegram from the front of the queue
; 116  :     const Telegram& telegram = *PriorityQ.begin();

	lea	edx, DWORD PTR $T140754[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv215[ebp], eax
	mov	eax, DWORD PTR tv215[ebp]
	mov	DWORD PTR tv206[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv206[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBEABUTelegram@@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator*
	mov	DWORD PTR _telegram$131975[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T140754[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ

; 117  : 
; 118  :     //find the recipient
; 119  :     BaseGameEntity* pReceiver = EntityMgr->GetEntityFromID(telegram.Receiver);

	mov	ecx, DWORD PTR _telegram$131975[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?Instance@EntityManager@@SAPAV1@XZ	; EntityManager::Instance
	mov	ecx, eax
	call	?GetEntityFromID@EntityManager@@QBEPAVBaseGameEntity@@H@Z ; EntityManager::GetEntityFromID
	mov	DWORD PTR _pReceiver$131977[ebp], eax

; 120  : 
; 121  :     #ifdef SHOW_MESSAGING_INFO
; 122  :     debug_con << "\nQueued telegram ready for dispatch: Sent to " 
; 123  :          << pReceiver->ID() << ". Msg is "<< telegram.Msg << "";
; 124  :     #endif
; 125  : 
; 126  :     //send the telegram to the recipient
; 127  :     Discharge(pReceiver, telegram);

	mov	eax, DWORD PTR _telegram$131975[ebp]
	push	eax
	mov	ecx, DWORD PTR _pReceiver$131977[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Discharge@MessageDispatcher@@AAEXPAVBaseGameEntity@@ABUTelegram@@@Z ; MessageDispatcher::Discharge

; 128  : 
; 129  : 	//remove it from the queue
; 130  :     PriorityQ.erase(PriorityQ.begin());

	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T140755[ebp], esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv208[ebp], eax
	lea	eax, DWORD PTR $T140756[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
	mov	DWORD PTR tv209[ebp], eax
	lea	ecx, DWORD PTR $T140756[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ

; 131  :   }

	jmp	$LN2@DispatchDe
$LN1@DispatchDe:

; 132  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ$0:
	mov	eax, DWORD PTR $T140757[ebp]
	and	eax, 1
	je	$LN8@DispatchDe
	and	DWORD PTR $T140757[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T140750[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN8@DispatchDe:
	ret	0
__unwindfunclet$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ$1:
	mov	eax, DWORD PTR $T140757[ebp]
	and	eax, 2
	je	$LN10@DispatchDe
	and	DWORD PTR $T140757[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T140752[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN10@DispatchDe:
	ret	0
__unwindfunclet$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T140754[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DispatchDelayedMessages@MessageDispatcher@@QAEXXZ ENDP	; MessageDispatcher::DispatchDelayedMessages
PUBLIC	??0?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@ABV?$allocator@UTelegram@@@1@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
PUBLIC	??0?$allocator@UTelegram@@@std@@QAE@XZ		; std::allocator<Telegram>::allocator<Telegram>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\set
;	COMDAT ??0?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T140773 = -6						; size = 1
$T140772 = -5						; size = 1
_this$ = -4						; size = 4
??0?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ PROC ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >, COMDAT
; _this$ = ecx

; 81   : 		{	// construct empty set from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T140772[ebp]
	call	??0?$allocator@UTelegram@@@std@@QAE@XZ	; std::allocator<Telegram>::allocator<Telegram>
	push	eax
	lea	eax, DWORD PTR $T140773[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@ABV?$allocator@UTelegram@@@1@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >

; 82   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ ENDP ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
PUBLIC	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T140778 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T140778[ebp], 0

; 807  : 		return (iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
	mov	edx, DWORD PTR $T140778[ebp]
	or	edx, 1
	mov	DWORD PTR $T140778[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 808  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBE_NXZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::empty, COMDAT
; _this$ = ecx

; 878  : 		{	// return true only if sequence is empty

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 879  : 		return (size() == 0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::size
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 880  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBE_NXZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::empty
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z ; std::_Dest_val<std::allocator<Telegram>,Telegram>
PUBLIC	??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ; std::addressof<Telegram>
PUBLIC	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
PUBLIC	?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
PUBLIC	?_Max@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Max
PUBLIC	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
PUBLIC	?_Min@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Min
PUBLIC	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
PUBLIC	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
PUBLIC	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
PUBLIC	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Orphan_ptr
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++
PUBLIC	??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ ; `string'
PUBLIC	??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
;	COMDAT ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
CONST	SEGMENT
??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
tv199 = -44						; size = 4
tv187 = -40						; size = 4
$T140790 = -36						; size = 4
__Pnode$ = -32						; size = 4
__Fixnodeparent$ = -28					; size = 4
__Fixnode$ = -24					; size = 4
__Erasednode$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T140790[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN40@erase
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN41@erase
$LN40@erase:

; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");

	push	1198					; 000004aeH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN41@erase:

; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1200 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++

; 1201 : 		_Orphan_ptr(*this, _Erasednode);

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Orphan_ptr

; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))
; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");
; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return
; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase
$LN39@erase:

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1218 : 		else

	jmp	SHORT $LN38@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
$LN38@erase:

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 1227 : 			if (!this->_Isnil(_Fixnode))

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase
$LN33@erase:

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1234 : 			else

	jmp	SHORT $LN32@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN45@erase
$LN44@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv187[ebp], eax
$LN45@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN46@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv199[ebp], edx
	jmp	SHORT $LN47@erase
$LN46@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv199[ebp], eax
$LN47@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase:

; 1247 : 			}
; 1248 : 		else

	jmp	$LN27@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx

; 1257 : 			else

	jmp	$LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1261 : 				if (!this->_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase
$LN23@erase:

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1275 : 			else

	jmp	SHORT $LN22@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	jmp	SHORT $LN18@erase
$LN17@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1297 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN12@erase
$LN13@erase:

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1307 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1308 : 						}
; 1309 : 					else

	jmp	$LN12@erase
$LN11@erase:

; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1316 : 							_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1323 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

	jmp	$LN16@erase
$LN12@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else

	jmp	$LN8@erase
$LN15@erase:

; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1334 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx

; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN8@erase
$LN6@erase:

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1344 : 						_Fixnode = _Fixnodeparent;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1345 : 						}
; 1346 : 					else

	jmp	$LN8@erase
$LN4@erase:

; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1352 : 							_Lrotate(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1359 : 						_Rrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate

; 1360 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase
$LN8@erase:

; 1361 : 						}
; 1362 : 					}

	jmp	$LN17@erase
$LN16@erase:

; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ; std::addressof<Telegram>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z ; std::_Dest_val<std::allocator<Telegram>,Telegram>
	add	esp, 8

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jbe	SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
	mov	ecx, DWORD PTR $T140790[ebp]
	or	ecx, 1
	mov	DWORD PTR $T140790[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1376 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z$1:
	mov	eax, DWORD PTR $T140790[ebp]
	and	eax, 1
	je	$LN50@erase
	and	DWORD PTR $T140790[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN50@erase:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 174  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv66[ebp]

; 176  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BGE@IAAOCPMA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@ ; `string'
EXTRN	__invalid_parameter:PROC
EXTRN	__CrtDbgReportW:PROC
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BGE@IAAOCPMA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BGE@IAAOCPMA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 's', 00H, 'e', 00H, 't', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'T', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T', 00H
	DB	'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, '>', 00H, ',', 00H, '0', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'*', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
CONST	SEGMENT
??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBEABUTelegram@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBEABUTelegram@@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator*, COMDAT
; _this$ = ecx

; 230  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN2@operator
$LN1@operator:

; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");

	push	236					; 000000ecH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 237  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	237					; 000000edH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	push	0
	push	237					; 000000edH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGE@IAAOCPMA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator:

; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4

; 247  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBEABUTelegram@@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator*
_TEXT	ENDS
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABUTelegram@@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator*
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBUTelegram@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBUTelegram@@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator->, COMDAT
; _this$ = ecx

; 53   : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 		return (&**this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABUTelegram@@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator*

; 55   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBUTelegram@@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator->
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
PUBLIC	??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z	; std::allocator<Telegram>::allocator<Telegram>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@ABV?$allocator@UTelegram@@@1@@Z
_TEXT	SEGMENT
$T140810 = -8						; size = 4
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@ABV?$allocator@UTelegram@@@1@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T140810[ebp], esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z ; std::allocator<Telegram>::allocator<Telegram>
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >

; 699  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@ABV?$allocator@UTelegram@@@1@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::size, COMDAT
; _this$ = ecx

; 868  : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 870  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1758 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1759 : 		return (this->_Left(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4

; 1760 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1775 : 		else

	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1780 : 		}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1783 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1784 : 		return (this->_Right(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4

; 1785 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root, COMDAT
; _this$ = ecx

; 1788 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4

; 1790 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1805 : 		else

	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1810 : 		}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 1848 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1849 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1850 : 		const_iterator **_Pnext = (const_iterator **)_Cont._Getpfirst();

	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1851 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 1852 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr

; 1853 : 				if ((*_Pnext)->_Ptr == this->_Myhead
; 1854 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:

; 1855 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1856 : 				else

	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:

; 1857 : 					{	// orphan the iterator
; 1858 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1859 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:

; 1860 : 					}

	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:

; 1861 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 96   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv66[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv66[ebp]

; 98   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 169  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 171  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 179  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 48					; 00000030H

; 608  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 49					; 00000031H

; 613  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 628  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 633  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 638  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max

; 643  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:

; 644  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 645  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Max@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Max
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min

; 650  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:

; 651  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 652  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Min@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Min
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@UTelegram@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UTelegram@@@std@@QAE@XZ PROC		; std::allocator<Telegram>::allocator<Telegram>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UTelegram@@@std@@QAE@XZ ENDP		; std::allocator<Telegram>::allocator<Telegram>
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>

; 214  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator++
PUBLIC	??_C@_1BGG@NMEEJBID@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
;	COMDAT ??_C@_1BGG@NMEEJBID@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BGG@NMEEJBID@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 's', 00H, 'e', 00H, 't', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'T', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T', 00H
	DB	'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, '>', 00H, ',', 00H, '0', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'+', 00H, '+', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN2@operator@2
$LN1@operator@2:

; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");

	push	256					; 00000100H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 257  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	ecx, ecx
	je	SHORT $LN5@operator@2
	xor	edx, edx
	jne	SHORT $LN6@operator@2
$LN5@operator@2:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@2
	int	3
$LN6@operator@2:
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGG@NMEEJBID@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@2:

; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator++

; 266  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 267  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABUTelegram@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABUTelegram@@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator*, COMDAT
; _this$ = ecx

; 48   : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 49   : 		return (_Mytree::_Myval(_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4

; 50   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABUTelegram@@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator*
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 121  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 123  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
PUBLIC	??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocate
PUBLIC	??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
_TEXT	SEGMENT
$T140877 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T140877[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z ; std::allocator<Telegram>::allocator<Telegram>
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 543  : 		this->_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 551  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
__ehhandler$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
PUBLIC	??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::~_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??$?0U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >, COMDAT
; _this$ = ecx

; 498  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 499  : 		typename allocator_type::template rebind<_Container_proxy>::other
; 500  : 			_Alproxy(_Alnod);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>

; 501  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 502  : 		_Dest_val(_Alproxy, this->_Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8

; 503  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 504  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 505  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Tree_nod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Tree_nod:
	DD	1
	DD	$LN6@Tree_nod
$LN6@Tree_nod:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@Tree_nod
$LN4@Tree_nod:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ
__ehhandler$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$15171 = -20					; size = 4
__Lock$15170 = -12					; size = 4
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 206  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 207  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 208  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all

; 209  : 		{	// proxy allocated, drain it
; 210  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15170[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 211  : 
; 212  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$15171[ebp], edx

; 213  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$15171[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$15171[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$15171[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all

; 214  : 			(*_Pnext)->_Myproxy = 0;

	mov	edx, DWORD PTR __Pnext$15171[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 215  : 		_Myproxy->_Myfirstiter = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0

; 216  : 		}

	lea	ecx, DWORD PTR __Lock$15170[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:

; 217  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 218  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z PROC	; std::allocator<Telegram>::allocator<Telegram>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<Telegram>::allocator<Telegram>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 44   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 45   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$15149 = -40					; size = 4
__Parent_proxy$15147 = -32				; size = 4
__Lock$15145 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 143  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt

; 145  : 			{	// no future parent, just disown current parent
; 146  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 147  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 148  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 149  : 		else

	jmp	SHORT $LN4@Adopt
$LN3@Adopt:

; 150  : 			{	// have a parent, do adoption
; 151  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$15147[ebp], ecx

; 152  : 
; 153  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 154  : 			if (_Myproxy != _Parent_proxy)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$15147[ebp]
	je	SHORT $LN4@Adopt

; 155  : 				{	// change parentage
; 156  : 				_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15149[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 157  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 158  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$15147[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 159  : 				_Parent_proxy->_Myfirstiter = this;

	mov	ecx, DWORD PTR __Parent_proxy$15147[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 160  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$15147[ebp]
	mov	DWORD PTR [eax], ecx

; 161  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15149[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:

; 162  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 163  : 			_Myproxy = _Parent_proxy;
; 164  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 165  : 			}
; 166  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$15149[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$135640 = -8					; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@operator@3
	jmp	$LN5@operator@3
$LN6@operator@3:

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator@3

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 64   : 		else

	jmp	SHORT $LN5@operator@3
$LN2@operator@3:

; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$135640[ebp], ecx
	mov	edx, DWORD PTR __Pnode$135640[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@operator@3
	mov	ecx, DWORD PTR __Pnode$135640[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@operator@3

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$135640[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN2@operator@3
$LN1@operator@3:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$135640[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN5@operator@3:

; 71   : 			}
; 72   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 73   : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator++
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ PROC ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::~_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ ENDP ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::~_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 91   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 93   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 111  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 112  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0UTelegram@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@UTelegram@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node><Telegram>
PUBLIC	??0?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@U?$less@UTelegram@@@1@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
_TEXT	SEGMENT
$T140944 = -36						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z PROC ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >, COMDAT
; _this$ = ecx

; 489  : 		{	// construct traits from _Parg, allocators and proxy from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@U?$less@UTelegram@@@1@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$?0UTelegram@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@UTelegram@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node><Telegram>
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 17					; 00000011H
	call	??0?$allocator@UTelegram@@@std@@QAE@ABV01@@Z ; std::allocator<Telegram>::allocator<Telegram>

; 490  : 		typename allocator_type::template rebind<_Container_proxy>::other
; 491  : 			_Alproxy(_Alnod);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>

; 492  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 493  : 		_Cons_val(_Alproxy, this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T140944[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 494  : 		this->_Myproxy->_Mycont = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx

; 495  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Tree_nod@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@Tree_nod@2:
	DD	1
	DD	$LN6@Tree_nod@2
$LN6@Tree_nod@2:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@Tree_nod@2
$LN4@Tree_nod@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@XZ
__ehhandler$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@ABU?$less@UTelegram@@@1@V?$allocator@UTelegram@@@1@@Z ENDP ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 65   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 66   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\set
;	COMDAT ??0?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@U?$less@UTelegram@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@U?$less@UTelegram@@@1@@Z PROC ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with specified comparator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@QAE@U?$less@UTelegram@@@1@@Z ENDP ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 77   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 78   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Linsert
PUBLIC	??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode<Telegram &>
PUBLIC	??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z ; std::forward<Telegram &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$insert@AAUTelegram@@@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@1@AAUTelegram@@@Z
_TEXT	SEGMENT
$T140969 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@AAUTelegram@@@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@1@AAUTelegram@@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::insert<Telegram &>, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T140969[ebp], 0

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

	push	0
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z ; std::forward<Telegram &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode<Telegram &>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Linsert
	mov	edx, DWORD PTR $T140969[ebp]
	or	edx, 1
	mov	DWORD PTR $T140969[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 757  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@AAUTelegram@@@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@1@AAUTelegram@@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::insert<Telegram &>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 102  : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR __Tmp$[ebp], cl

; 103  : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 104  : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 105  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z PROC ; std::addressof<Telegram>, COMDAT

; 110  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 112  : 	}

	pop	ebp
	ret	0
??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ENDP ; std::addressof<Telegram>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@@Z ; std::allocator<Telegram>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z PROC ; std::_Dest_val<std::allocator<Telegram>,Telegram>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@@Z ; std::allocator<Telegram>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z ENDP ; std::_Dest_val<std::allocator<Telegram>,Telegram>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T140988 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T140988[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T140988[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0UTelegram@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@UTelegram@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UTelegram@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@UTelegram@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node><Telegram>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UTelegram@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@UTelegram@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node><Telegram>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T141000 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 76695844	; 04924924H
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 56					; 00000038H
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T141000[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T141000[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator--
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==
PUBLIC	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
PUBLIC	?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Insert
PUBLIC	??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@ABUTelegram@@AAU2@PB_WI@Z ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
PUBLIC	??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@AAUTelegram@@ABU2@PB_WI@Z ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
PUBLIC	?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Key
PUBLIC	?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__ehfuncinfo$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
tv275 = -160						; size = 4
tv188 = -156						; size = 4
tv271 = -152						; size = 4
tv281 = -148						; size = 4
tv269 = -144						; size = 4
tv167 = -140						; size = 4
tv262 = -136						; size = 4
tv280 = -132						; size = 4
tv151 = -128						; size = 4
$T141019 = -124						; size = 4
$T141016 = -117						; size = 1
$T141015 = -116						; size = 12
$T141014 = -101						; size = 1
$T141013 = -100						; size = 12
$T141012 = -85						; size = 1
$T141011 = -84						; size = 12
$T141010 = -69						; size = 1
$T141009 = -68						; size = 12
$T141008 = -53						; size = 1
__Where$137811 = -48					; size = 12
__Addleft$ = -29					; size = 1
__Wherenode$ = -28					; size = 4
__Trynode$ = -24					; size = 4
__Val$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 148				; 00000094H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 37					; 00000025H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T141019[ebp], 0

; 945  : 		const value_type& _Val = this->_Myval(_Node);

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR __Val$[ebp], eax

; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], ecx

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 949  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$[ebp], 1
$LN12@Linsert:

; 950  : 		while (!this->_Isnil(_Trynode))

	mov	ecx, DWORD PTR __Trynode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN11@Linsert

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;

	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 953  : 			if (_Leftish)

	movzx	ecx, BYTE PTR __Leftish$[ebp]
	test	ecx, ecx
	je	SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

	push	956					; 000003bcH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@AAUTelegram@@ABU2@PB_WI@Z ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
	add	esp, 20					; 00000014H
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR __Addleft$[ebp], al

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

	jmp	SHORT $LN9@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

	push	960					; 000003c0H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Trynode$[ebp]
	push	ecx
	call	?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@ABUTelegram@@AAU2@PB_WI@Z ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
	add	esp, 20					; 00000014H
	mov	BYTE PTR __Addleft$[ebp], al
$LN9@Linsert:

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN15@Linsert
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv151[ebp], ecx
	jmp	SHORT $LN16@Linsert
$LN15@Linsert:
	mov	edx, DWORD PTR __Trynode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv151[ebp], eax
$LN16@Linsert:
	mov	ecx, DWORD PTR tv151[ebp]
	mov	DWORD PTR __Trynode$[ebp], ecx

; 963  : 			}

	jmp	$LN12@Linsert
$LN11@Linsert:

; 964  : 
; 965  : 		if (this->_Multi)

	xor	edx, edx
	je	SHORT $LN8@Linsert

; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

	mov	BYTE PTR $T141008[ebp], 1
	lea	eax, DWORD PTR $T141008[ebp]
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T141009[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Insert
	mov	DWORD PTR tv280[ebp], eax
	mov	edx, DWORD PTR tv280[ebp]
	mov	DWORD PTR tv262[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv262[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
	mov	ecx, DWORD PTR $T141019[ebp]
	or	ecx, 1
	mov	DWORD PTR $T141019[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T141009[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN13@Linsert

; 967  : 		else

	jmp	$LN13@Linsert
$LN8@Linsert:

; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 970  : 			if (!_Addleft)

	movzx	ecx, BYTE PTR __Addleft$[ebp]
	test	ecx, ecx
	jne	SHORT $LN6@Linsert
	jmp	$LN5@Linsert
$LN6@Linsert:

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

	lea	edx, DWORD PTR $T141011[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv167[ebp], eax
	mov	eax, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv269[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv269[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==
	mov	BYTE PTR $T141010[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T141011[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T141010[ebp]
	test	edx, edx
	je	SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

	mov	BYTE PTR $T141012[ebp], 1
	lea	eax, DWORD PTR $T141012[ebp]
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T141013[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Insert
	mov	DWORD PTR tv281[ebp], eax
	mov	ecx, DWORD PTR tv281[ebp]
	mov	DWORD PTR tv271[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv271[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
	mov	eax, DWORD PTR $T141019[ebp]
	or	eax, 1
	mov	DWORD PTR $T141019[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T141013[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN13@Linsert

; 974  : 			else

	jmp	SHORT $LN5@Linsert
$LN4@Linsert:

; 975  : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator--
$LN5@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

	push	979					; 000003d3H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@AAUTelegram@@ABU2@PB_WI@Z ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

	mov	BYTE PTR $T141014[ebp], 1
	lea	edx, DWORD PTR $T141014[ebp]
	push	edx
	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Addleft$[ebp]
	push	edx
	lea	eax, DWORD PTR $T141015[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Insert
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv275[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv275[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
	mov	eax, DWORD PTR $T141019[ebp]
	or	eax, 1
	mov	DWORD PTR $T141019[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T141015[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN13@Linsert

; 981  : 			else

	jmp	SHORT $LN1@Linsert
$LN2@Linsert:

; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ; std::addressof<Telegram>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z ; std::_Dest_val<std::allocator<Telegram>,Telegram>
	add	esp, 8

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

	push	1
	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T141016[ebp], 0
	lea	ecx, DWORD PTR $T141016[ebp]
	push	ecx
	lea	edx, DWORD PTR __Where$137811[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>
	mov	eax, DWORD PTR $T141019[ebp]
	or	eax, 1
	mov	DWORD PTR $T141019[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN13@Linsert
$LN1@Linsert:

; 989  : 				}
; 990  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$137811[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN13@Linsert:

; 991  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@Linsert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 160				; 000000a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN27@Linsert:
	DD	1
	DD	$LN26@Linsert
$LN26@Linsert:
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN24@Linsert
$LN24@Linsert:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$0:
	lea	ecx, DWORD PTR $T141009[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$1:
	mov	eax, DWORD PTR $T141019[ebp]
	and	eax, 1
	je	$LN19@Linsert
	and	DWORD PTR $T141019[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
$LN19@Linsert:
	ret	0
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$2:
	lea	ecx, DWORD PTR __Where$137811[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$3:
	lea	ecx, DWORD PTR $T141011[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$4:
	lea	ecx, DWORD PTR $T141013[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z$5:
	lea	ecx, DWORD PTR $T141015[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Linsert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Linsert
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BGG@HMLJHIEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BGG@HMLJHIEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BGG@HMLJHIEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 's', 00H, 'e', 00H, 't', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'T', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T', 00H
	DB	'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, '>', 00H, ',', 00H, '0', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator@4
$LN1@operator@4:

; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");

	push	321					; 00000141H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator@4
	xor	ecx, ecx
	jne	SHORT $LN6@operator@4
$LN5@operator@4:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	322					; 00000142H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@4
	int	3
$LN6@operator@4:
	push	0
	push	322					; 00000142H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGG@HMLJHIEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@4:

; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al

; 331  : 		}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==
_TEXT	ENDS
PUBLIC	??$_Destroy@UTelegram@@@std@@YAXPAUTelegram@@@Z	; std::_Destroy<Telegram>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@@Z PROC ; std::allocator<Telegram>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@UTelegram@@@std@@YAXPAUTelegram@@@Z ; std::_Destroy<Telegram>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@@Z ENDP ; std::allocator<Telegram>::destroy
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T141043 = -24						; size = 4
$T141042 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T141043[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T141043[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T141043[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T141043[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T141042[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T141043[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 57   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 58   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 61   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 62   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::max_size
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
$T141062 = -12						; size = 4
__Pnode$137921 = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T141062[ebp], 0

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+12]
	ja	SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ; std::addressof<Telegram>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 17					; 00000011H
	push	eax
	call	??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z ; std::_Dest_val<std::allocator<Telegram>,Telegram>
	add	esp, 8

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

	push	1
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1642 : 		_Newnode->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1647 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1648 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1653 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert

; 1654 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert:

; 1655 : 			}
; 1656 : 		else

	jmp	SHORT $LN15@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1659 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert

; 1660 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$137921[ebp], edx
$LN10@Insert:

; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$137921[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$137921[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$137921[ebp], ecx

; 1677 : 					}
; 1678 : 				else

	jmp	$LN6@Insert
$LN7@Insert:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$137921[ebp], eax

; 1683 : 						_Lrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate
$LN5@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate
$LN6@Insert:

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

	jmp	$LN4@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$137921[ebp], eax

; 1703 : 					}
; 1704 : 				else

	jmp	$LN4@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$137921[ebp], eax

; 1709 : 						_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rrotate
$LN1@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$137921[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$137921[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lrotate
$LN4@Insert:

; 1716 : 					}
; 1717 : 				}

	jmp	$LN10@Insert
$LN9@Insert:

; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1720 : 		return (iterator(_Newnode, this));

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
	mov	ecx, DWORD PTR $T141062[ebp]
	or	ecx, 1
	mov	DWORD PTR $T141062[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:

; 1721 : 		}

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Insert@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Insert
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	push	eax
	call	?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn
	add	esp, 4

; 618  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Key@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Key
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\set
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z PROC ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn, COMDAT

; 45   : 		{	// extract key from element value

	push	ebp
	mov	ebp, esp

; 46   : 		return (_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 47   : 		}

	pop	ebp
	ret	0
?_Kfn@?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@SAABUTelegram@@ABU3@@Z ENDP ; std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
PUBLIC	??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AA_N@std@@YA$$QA_NAA_N@Z	; std::move<bool &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>

; 228  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator--
PUBLIC	??_C@_1BGG@CPHGCNEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
;	COMDAT ??_C@_1BGG@CPHGCNEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_1BGG@CPHGCNEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 's', 00H, 'e', 00H, 't', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T'
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'T', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T', 00H
	DB	'e', 00H, 'l', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, '>', 00H, ',', 00H, '0', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, '-', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Ptrsav$ = -8						; size = 4
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN2@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@operator@5
$LN2@operator@5:

; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	282					; 0000011aH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 283  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	ecx, ecx
	je	SHORT $LN6@operator@5
	xor	edx, edx
	jne	SHORT $LN7@operator@5
$LN6@operator@5:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	283					; 0000011bH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN7@operator@5
	int	3
$LN7@operator@5:
	push	0
	push	283					; 0000011bH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGG@CPHGCNEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN3@operator@5:

; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Ptrsav$[ebp], edx

; 287  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator--

; 288  : 		if (_Ptrsav == this->_Ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptrsav$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@operator@5

; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	290					; 00000122H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 291  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	edx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	edx, edx
	je	SHORT $LN8@operator@5
	xor	eax, eax
	jne	SHORT $LN9@operator@5
$LN8@operator@5:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN9@operator@5
	int	3
$LN9@operator@5:
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BGG@CPHGCNEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator@5:

; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);
; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 306  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UTelegram@@@std@@QBEIXZ	; std::allocator<Telegram>::max_size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::max_size, COMDAT
; _this$ = ecx

; 873  : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 874  : 		return (this->_Alval.max_size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 17					; 00000011H
	call	?max_size@?$allocator@UTelegram@@@std@@QBEIXZ ; std::allocator<Telegram>::max_size

; 875  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z$0
__ehfuncinfo$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$move@AA_N@std@@YA$$QA_NAA_N@Z	; std::move<bool &>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [edx+12], al

; 146  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@UTelegram@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,Telegram,int,Telegram const *,Telegram const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 116  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 117  : 		*this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 118  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$15138 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 121  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator@6
	jmp	SHORT $LN3@operator@6
$LN4@operator@6:

; 123  : 			;
; 124  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator@6

; 125  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 126  : 		else

	jmp	SHORT $LN3@operator@6
$LN2@operator@6:

; 127  : 			{	// becoming invalid, disown current parent
; 128  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15138[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 129  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 130  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15138[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator@6:

; 131  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 132  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@operator@6:
	DD	1
	DD	$LN10@operator@6
$LN10@operator@6:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@operator@6
$LN8@operator@6:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$15138[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$137999 = -8					; size = 4
_this$ = -4						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator@7

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
	jmp	$LN7@operator@7
$LN8@operator@7:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@operator@7

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Max@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Max
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 89   : 		else

	jmp	SHORT $LN7@operator@7
$LN4@operator@7:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$137999[ebp], edx
	mov	eax, DWORD PTR __Pnode$137999[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator@7
	mov	edx, DWORD PTR __Pnode$137999[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator@7

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$137999[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN4@operator@7
$LN3@operator@7:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@operator@7

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else

	jmp	SHORT $LN7@operator@7
$LN2@operator@7:

; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$137999[ebp]
	mov	DWORD PTR [edx+8], eax
$LN7@operator@7:

; 99   : 			}
; 100  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 101  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >,std::_Iterator_base12>::operator--
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@UTelegram@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@UTelegram@@@std@@QBEIXZ PROC	; std::allocator<Telegram>::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

	mov	DWORD PTR __Count$[ebp], 134217727	; 07ffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]

; 220  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UTelegram@@@std@@QBEIXZ ENDP	; std::allocator<Telegram>::max_size
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z PROC ; std::forward<Telegram &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z ENDP ; std::forward<Telegram &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UTelegram@@@std@@UTelegram@@AAU3@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@AAU2@@Z ; std::_Cons_val<std::allocator<Telegram>,Telegram,Telegram &>
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z$0
__unwindtable$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z$2
__ehfuncinfo$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z
_TEXT	SEGMENT
tv93 = -36						; size = 4
tv92 = -32						; size = 4
tv91 = -28						; size = 4
__Wherenode$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode<Telegram &>, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode
	mov	DWORD PTR __Wherenode$[ebp], eax

; 589  : 
; 590  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z ; std::forward<Telegram &>
	add	esp, 4
	mov	DWORD PTR tv91[ebp], eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	call	??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ; std::addressof<Telegram>
	add	esp, 4
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Cons_val@V?$allocator@UTelegram@@@std@@UTelegram@@AAU3@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@AAU2@@Z ; std::_Cons_val<std::allocator<Telegram>,Telegram,Telegram &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

	push	1
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate

; 595  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 596  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z$1
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z$1:

; 597  : 
; 598  : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode:

; 599  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@AAUTelegram@@@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@AAUTelegram@@@Z ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode<Telegram &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
PUBLIC	??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z ; std::less<Telegram>::operator()
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@AAUTelegram@@ABU2@PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@AAUTelegram@@ABU2@PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>, COMDAT

; 673  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp

; 674  : 	if (!_Pred(_Left, _Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z ; std::less<Telegram>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@Debug_lt_p

; 675  : 		return (false);

	xor	al, al
	jmp	SHORT $LN4@Debug_lt_p
	jmp	SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:

; 676  : 	else if (_Pred(_Right, _Left))

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z ; std::less<Telegram>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Debug_lt_p

; 677  : 		_DEBUG_ERROR2("invalid operator<", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_lt_p:

; 678  : 	return (true);

	mov	al, 1
$LN4@Debug_lt_p:

; 679  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@AAUTelegram@@ABU2@PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@ABUTelegram@@AAU2@PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@ABUTelegram@@AAU2@PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>, COMDAT

; 661  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp

; 662  : 	if (!_Pred(_Left, _Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z ; std::less<Telegram>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@Debug_lt_p@2

; 663  : 		return (false);

	xor	al, al
	jmp	SHORT $LN4@Debug_lt_p@2
	jmp	SHORT $LN2@Debug_lt_p@2
$LN3@Debug_lt_p@2:

; 664  : 	else if (_Pred(_Right, _Left))

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z ; std::less<Telegram>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Debug_lt_p@2

; 665  : 		_DEBUG_ERROR2("invalid operator<", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_lt_p@2:

; 666  : 	return (true);

	mov	al, 1
$LN4@Debug_lt_p@2:

; 667  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_lt_pred@U?$less@UTelegram@@@std@@UTelegram@@U3@@std@@YA_NU?$less@UTelegram@@@0@ABUTelegram@@AAU2@PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<Telegram>,Telegram,Telegram>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>

; 248  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@UTelegram@@@std@@YAXPAUTelegram@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UTelegram@@@std@@YAXPAUTelegram@@@Z PROC	; std::_Destroy<Telegram>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@UTelegram@@@std@@YAXPAUTelegram@@@Z ENDP	; std::_Destroy<Telegram>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

	pop	ebp
	ret	0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
__Wherenode$ = -8					; size = 4
_this$ = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 566  : 		this->_Isnil(_Wherenode) = false;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 567  : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 568  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Buynode@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??M@YA_NABUTelegram@@0@Z			; operator<
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z PROC	; std::less<Telegram>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??M@YA_NABUTelegram@@0@Z		; operator<
	add	esp, 8

; 126  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@UTelegram@@@std@@QBE_NABUTelegram@@0@Z ENDP	; std::less<Telegram>::operator()
_TEXT	ENDS
PUBLIC	??8@YA_NABUTelegram@@0@Z			; operator==
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\telegram.h
;	COMDAT ??M@YA_NABUTelegram@@0@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_t1$ = 8						; size = 4
_t2$ = 12						; size = 4
??M@YA_NABUTelegram@@0@Z PROC				; operator<, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 77   :   if (t1 == t2)

	mov	eax, DWORD PTR _t2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t1$[ebp]
	push	ecx
	call	??8@YA_NABUTelegram@@0@Z		; operator==
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@operator@8

; 78   :   {
; 79   :     return false;

	xor	al, al
	jmp	SHORT $LN1@operator@8

; 80   :   }
; 81   : 
; 82   :   else

	jmp	SHORT $LN1@operator@8
$LN2@operator@8:

; 83   :   {
; 84   :     return  (t1.DispatchTime < t2.DispatchTime);

	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR _t2$[ebp]
	fld	QWORD PTR [ecx+16]
	fcomp	QWORD PTR [eax+16]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@operator@8
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN6@operator@8
$LN5@operator@8:
	mov	DWORD PTR tv72[ebp], 0
$LN6@operator@8:
	mov	al, BYTE PTR tv72[ebp]
$LN1@operator@8:

; 85   :   }
; 86   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??M@YA_NABUTelegram@@0@Z ENDP				; operator<
_TEXT	ENDS
EXTRN	_fabs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8@YA_NABUTelegram@@0@Z
_TEXT	SEGMENT
tv77 = -4						; size = 4
_t1$ = 8						; size = 4
_t2$ = 12						; size = 4
??8@YA_NABUTelegram@@0@Z PROC				; operator==, COMDAT

; 68   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 69   :   return ( fabs(t1.DispatchTime-t2.DispatchTime) < SmallestDelay) &&
; 70   :           (t1.Sender == t2.Sender)        &&
; 71   :           (t1.Receiver == t2.Receiver)    &&
; 72   :           (t1.Msg == t2.Msg);

	mov	eax, DWORD PTR _t1$[ebp]
	mov	ecx, DWORD PTR _t2$[ebp]
	fld	QWORD PTR [eax+16]
	fsub	QWORD PTR [ecx+16]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	fcomp	QWORD PTR _SmallestDelay
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN3@operator@9
	mov	edx, DWORD PTR _t1$[ebp]
	mov	eax, DWORD PTR _t2$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@operator@9
	mov	edx, DWORD PTR _t1$[ebp]
	mov	eax, DWORD PTR _t2$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@operator@9
	mov	edx, DWORD PTR _t1$[ebp]
	mov	eax, DWORD PTR _t2$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@operator@9
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator@9
$LN3@operator@9:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator@9:
	mov	al, BYTE PTR tv77[ebp]

; 73   : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??8@YA_NABUTelegram@@0@Z ENDP				; operator==
_TEXT	ENDS
PUBLIC	??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z ; std::allocator<Telegram>::construct<Telegram &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@UTelegram@@@std@@UTelegram@@AAU3@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@AAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UTelegram@@@std@@UTelegram@@AAU3@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@AAU2@@Z PROC ; std::_Cons_val<std::allocator<Telegram>,Telegram,Telegram &>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z ; std::forward<Telegram &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z ; std::allocator<Telegram>::construct<Telegram &>

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@UTelegram@@@std@@UTelegram@@AAU3@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@AAU2@@Z ENDP ; std::_Cons_val<std::allocator<Telegram>,Telegram,Telegram &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [edx+12], al

; 164  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool>::_Pair_base<std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > > &,bool>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z$0
__ehfuncinfo$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T141183 = -24						; size = 4
$T141182 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z PROC ; std::allocator<Telegram>::construct<Telegram &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T141183[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T141183[ebp], 0
	je	SHORT $LN3@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUTelegram@@@std@@YAAAUTelegram@@AAU1@@Z ; std::forward<Telegram &>
	add	esp, 4
	mov	ecx, 8
	mov	esi, eax
	mov	edi, DWORD PTR $T141183[ebp]
	rep movsd
	mov	edx, DWORD PTR $T141183[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct@2
$LN3@construct@2:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct@2:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T141182[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 209  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T141183[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUTelegram@@@?$allocator@UTelegram@@@std@@QAEXPAUTelegram@@AAU2@@Z ENDP ; std::allocator<Telegram>::construct<Telegram &>
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxInt@@YAXXZ
text$yc	SEGMENT
??__EMaxInt@@YAXXZ PROC					; `dynamic initializer for 'MaxInt'', COMDAT

; 23   : const int     MaxInt    = (std::numeric_limits<int>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR _MaxInt, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxInt@@YAXXZ ENDP					; `dynamic initializer for 'MaxInt''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
text$yc	ENDS
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 712  : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 713  : 		{	// return maximum value
; 714  : 		return (INT_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 715  : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxDouble@@YAXXZ
text$yc	SEGMENT
??__EMaxDouble@@YAXXZ PROC				; `dynamic initializer for 'MaxDouble'', COMDAT

; 24   : const double  MaxDouble = (std::numeric_limits<double>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::max
	fstp	QWORD PTR _MaxDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxDouble@@YAXXZ ENDP				; `dynamic initializer for 'MaxDouble''
text$yc	ENDS
PUBLIC	__real@7fefffffffffffff
;	COMDAT __real@7fefffffffffffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?max@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::max, COMDAT

; 1233 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1234 : 		{	// return maximum value
; 1235 : 		return (DBL_MAX);

	fld	QWORD PTR __real@7fefffffffffffff

; 1236 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinDouble@@YAXXZ
text$yc	SEGMENT
??__EMinDouble@@YAXXZ PROC				; `dynamic initializer for 'MinDouble'', COMDAT

; 25   : const double  MinDouble = (std::numeric_limits<double>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::min
	fstp	QWORD PTR _MinDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinDouble@@YAXXZ ENDP				; `dynamic initializer for 'MinDouble''
text$yc	ENDS
PUBLIC	__real@0010000000000000
;	COMDAT __real@0010000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@0010000000000000 DQ 00010000000000000r	; 2.22507e-308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?min@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::min, COMDAT

; 1228 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1229 : 		{	// return minimum value
; 1230 : 		return (DBL_MIN);

	fld	QWORD PTR __real@0010000000000000

; 1231 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::min
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxFloat@@YAXXZ
text$yc	SEGMENT
??__EMaxFloat@@YAXXZ PROC				; `dynamic initializer for 'MaxFloat'', COMDAT

; 26   : const float   MaxFloat  = (std::numeric_limits<float>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::max
	fstp	DWORD PTR _MaxFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxFloat@@YAXXZ ENDP				; `dynamic initializer for 'MaxFloat''
text$yc	ENDS
PUBLIC	__real@7f7fffff
;	COMDAT __real@7f7fffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?max@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::max, COMDAT

; 1166 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1167 : 		{	// return maximum value
; 1168 : 		return (FLT_MAX);

	fld	DWORD PTR __real@7f7fffff

; 1169 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinFloat@@YAXXZ
text$yc	SEGMENT
??__EMinFloat@@YAXXZ PROC				; `dynamic initializer for 'MinFloat'', COMDAT

; 27   : const float   MinFloat  = (std::numeric_limits<float>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::min
	fstp	DWORD PTR _MinFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinFloat@@YAXXZ ENDP				; `dynamic initializer for 'MinFloat''
text$yc	ENDS
PUBLIC	__real@00800000
;	COMDAT __real@00800000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?min@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::min, COMDAT

; 1161 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1162 : 		{	// return minimum value
; 1163 : 		return (FLT_MIN);

	fld	DWORD PTR __real@00800000

; 1164 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
_TEXT	ENDS
;	COMDAT ??__ETwoPi@@YAXXZ
text$yc	SEGMENT
??__ETwoPi@@YAXXZ PROC					; `dynamic initializer for 'TwoPi'', COMDAT

; 30   : const double   TwoPi     = Pi * 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fadd	ST(0), ST(0)
	fstp	QWORD PTR _TwoPi
	pop	ebp
	ret	0
??__ETwoPi@@YAXXZ ENDP					; `dynamic initializer for 'TwoPi''
text$yc	ENDS
PUBLIC	__real@4000000000000000
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EHalfPi@@YAXXZ
text$yc	SEGMENT
??__EHalfPi@@YAXXZ PROC					; `dynamic initializer for 'HalfPi'', COMDAT

; 31   : const double   HalfPi    = Pi / 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4000000000000000
	fstp	QWORD PTR _HalfPi
	pop	ebp
	ret	0
??__EHalfPi@@YAXXZ ENDP					; `dynamic initializer for 'HalfPi''
text$yc	ENDS
PUBLIC	__real@4010000000000000
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EQuarterPi@@YAXXZ
text$yc	SEGMENT
??__EQuarterPi@@YAXXZ PROC				; `dynamic initializer for 'QuarterPi'', COMDAT

; 32   : const double   QuarterPi = Pi / 4;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4010000000000000
	fstp	QWORD PTR _QuarterPi
	pop	ebp
	ret	0
??__EQuarterPi@@YAXXZ ENDP				; `dynamic initializer for 'QuarterPi''
text$yc	ENDS
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1578 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
text$yc	ENDS
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 71   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 72   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::codecvt<char,char,int>::id'', COMDAT

; 900  : 	__PURE_APPDOMAIN_GLOBAL locale::id codecvt<_Elem, _Byte, _Statype>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::codecvt<char,char,int>::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
text$yc	ENDS
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 228  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
PUBLIC	??1MessageDispatcher@@QAE@XZ			; MessageDispatcher::~MessageDispatcher
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Finstance@?1??Instance@MessageDispatcher@@SAPAV1@XZ@YAXXZ
text$yd	SEGMENT
??__Finstance@?1??Instance@MessageDispatcher@@SAPAV1@XZ@YAXXZ PROC ; `MessageDispatcher::Instance'::`2'::`dynamic atexit destructor for 'instance'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?instance@?1??Instance@MessageDispatcher@@SAPAV2@XZ@4V2@A
	call	??1MessageDispatcher@@QAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Finstance@?1??Instance@MessageDispatcher@@SAPAV1@XZ@YAXXZ ENDP ; `MessageDispatcher::Instance'::`2'::`dynamic atexit destructor for 'instance''
text$yd	ENDS
PUBLIC	??1?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::~set<Telegram,std::less<Telegram>,std::allocator<Telegram> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1MessageDispatcher@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1MessageDispatcher@@QAE@XZ PROC			; MessageDispatcher::~MessageDispatcher, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1MessageDispatcher@@QAE@XZ ENDP			; MessageDispatcher::~MessageDispatcher
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ PROC ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::~set<Telegram,std::less<Telegram>,std::allocator<Telegram> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$set@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@@std@@QAE@XZ ENDP ; std::set<Telegram,std::less<Telegram>,std::allocator<Telegram> >::~set<Telegram,std::less<Telegram>,std::allocator<Telegram> >
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 791  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tidy

; 792  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
__ehhandler$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
PUBLIC	?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
PUBLIC	?end@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::end
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ$0
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv129 = -52						; size = 4
tv132 = -48						; size = 4
tv128 = -44						; size = 4
tv134 = -40						; size = 4
$T141261 = -36						; size = 12
$T141260 = -24						; size = 4
$T141259 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1866 : 		erase(begin(), end());

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T141259[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::end
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv128[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T141260[ebp], esp
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv132[ebp], eax
	lea	eax, DWORD PTR $T141261[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
	mov	DWORD PTR tv129[ebp], eax
	lea	ecx, DWORD PTR $T141261[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ

; 1867 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ$0:
	mov	ecx, DWORD PTR $T141259[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >, COMDAT
; _this$ = ecx

; 554  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate

; 556  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
__ehhandler$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::~_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T141283 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T141283[ebp], 0

; 817  : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
	mov	eax, DWORD PTR $T141283[ebp]
	or	eax, 1
	mov	DWORD PTR $T141283[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 818  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::end
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator!=
PUBLIC	?clear@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$3
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z
_TEXT	SEGMENT
tv189 = -92						; size = 4
tv188 = -88						; size = 4
tv86 = -84						; size = 4
tv176 = -80						; size = 4
tv196 = -76						; size = 4
tv171 = -72						; size = 4
tv194 = -68						; size = 4
$T141296 = -64						; size = 4
$T141293 = -60						; size = 12
$T141292 = -48						; size = 4
$T141289 = -44						; size = 12
$T141288 = -32						; size = 12
$T141287 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T141296[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1380 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T141288[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T141296[ebp]
	or	edx, 1
	mov	DWORD PTR $T141296[ebp], edx
	mov	eax, DWORD PTR tv171[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase@2
	lea	edx, DWORD PTR $T141289[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::end
	mov	DWORD PTR tv196[ebp], eax
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T141296[ebp]
	or	ecx, 2
	mov	DWORD PTR $T141296[ebp], ecx
	mov	edx, DWORD PTR tv176[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase@2
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN8@erase@2
$LN7@erase@2:
	mov	DWORD PTR tv86[ebp], 0
$LN8@erase@2:
	mov	cl, BYTE PTR tv86[ebp]
	mov	BYTE PTR $T141287[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T141296[ebp]
	and	edx, 2
	je	SHORT $LN15@erase@2
	and	DWORD PTR $T141296[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T141289[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN15@erase@2:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T141296[ebp]
	and	eax, 1
	je	SHORT $LN16@erase@2
	and	DWORD PTR $T141296[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T141288[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN16@erase@2:
	movzx	ecx, BYTE PTR $T141287[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase@2

; 1381 : 			{	// erase all
; 1382 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::clear

; 1383 : 			return (begin());

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::begin
	mov	eax, DWORD PTR $T141296[ebp]
	or	eax, 4
	mov	DWORD PTR $T141296[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@erase@2

; 1384 : 			}
; 1385 : 		else

	jmp	SHORT $LN3@erase@2
$LN2@erase@2:

; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@2

; 1388 : 				erase(_First++);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T141292[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++
	mov	DWORD PTR tv188[ebp], eax
	lea	ecx, DWORD PTR $T141293[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
	mov	DWORD PTR tv189[ebp], eax
	lea	ecx, DWORD PTR $T141293[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase@2
$LN1@erase@2:

; 1389 : 			return (iterator(_First._Ptr, this));

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >
	mov	ecx, DWORD PTR $T141296[ebp]
	or	ecx, 4
	mov	DWORD PTR $T141296[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@2
$LN3@erase@2:

; 1390 : 			}
; 1391 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN5@erase@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$2:
	mov	eax, DWORD PTR $T141296[ebp]
	and	eax, 1
	je	$LN12@erase@2
	and	DWORD PTR $T141296[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T141288[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN12@erase@2:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$3:
	mov	eax, DWORD PTR $T141296[ebp]
	and	eax, 2
	je	$LN14@erase@2
	and	DWORD PTR $T141296[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T141289[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN14@erase@2:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z$4:
	mov	eax, DWORD PTR $T141296[ebp]
	and	eax, 4
	je	$LN18@erase@2
	and	DWORD PTR $T141296[ebp], -5		; fffffffbH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN18@erase@2:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@2@V32@0@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::erase
PUBLIC	?_Erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Orphan_ptr

; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Root
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 1417 : 		_Lmost() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Lmost
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 1418 : 		_Rmost() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Rmost
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 1419 : 		this->_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1420 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::clear
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T141319 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T141319[ebp], 0

; 271  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 272  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++

; 273  : 		return (_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T141319[ebp]
	or	edx, 1
	mov	DWORD PTR $T141319[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@10
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator@10:
	DD	1
	DD	$LN8@operator@10
$LN8@operator@10:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator@10
$LN6@operator@10:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T141319[ebp]
	and	eax, 1
	je	$LN5@operator@10
	and	DWORD PTR $T141319[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE@XZ
$LN5@operator@10:
	ret	0
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator++
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 335  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 336  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> > >::operator!=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$136262 = -8					; size = 4
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$136262[ebp], eax

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	jmp	SHORT $LN3@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$136262[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN3@Erase:
	mov	edx, DWORD PTR __Pnode$136262[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Erase

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

	mov	ecx, DWORD PTR __Pnode$136262[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$136262[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$136262[ebp], ecx

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@SAAAUTelegram@@PAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@UTelegram@@@std@@YAPAUTelegram@@AAU1@@Z ; std::addressof<Telegram>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 17					; 00000011H
	push	eax
	call	??$_Dest_val@V?$allocator@UTelegram@@@std@@UTelegram@@@std@@YAXAAV?$allocator@UTelegram@@@0@PAUTelegram@@@Z ; std::_Dest_val<std::allocator<Telegram>,Telegram>
	add	esp, 8

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

	push	1
	mov	ecx, DWORD PTR __Rootnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Node>::deallocate

; 1620 : 			}

	jmp	SHORT $LN2@Erase
$LN4@Erase:

; 1621 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tset_traits@UTelegram@@U?$less@UTelegram@@@std@@V?$allocator@UTelegram@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tset_traits<Telegram,std::less<Telegram>,std::allocator<Telegram>,0> >::_Erase
_TEXT	ENDS
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
_BSS	SEGMENT
_MinDouble DQ	01H DUP (?)
_MaxFloat DD	01H DUP (?)
_MinFloat DD	01H DUP (?)
_TwoPi	DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
_BSS	SEGMENT
_MaxInt	DD	01H DUP (?)
	ALIGN	8

_HalfPi	DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
_BSS	SEGMENT
_MaxDouble DQ	01H DUP (?)
_QuarterPi DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_MaxInt$initializer$ DD FLAT:??__EMaxInt@@YAXXZ
_MaxDouble$initializer$ DD FLAT:??__EMaxDouble@@YAXXZ
_MinDouble$initializer$ DD FLAT:??__EMinDouble@@YAXXZ
_MaxFloat$initializer$ DD FLAT:??__EMaxFloat@@YAXXZ
_MinFloat$initializer$ DD FLAT:??__EMinFloat@@YAXXZ
_TwoPi$initializer$ DD FLAT:??__ETwoPi@@YAXXZ
_HalfPi$initializer$ DD FLAT:??__EHalfPi@@YAXXZ
_QuarterPi$initializer$ DD FLAT:??__EQuarterPi@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$codecvt@DDH@std@@2P6AXXZA DD FLAT:??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ; std::codecvt<char,char,int>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
END
