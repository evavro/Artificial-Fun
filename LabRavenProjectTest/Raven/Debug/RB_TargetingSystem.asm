; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Teaja\Documents\Artificial-Fun\LabRavenProjectTest\Raven\Bots\RBBot\RB_TargetingSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_Pi	DQ	0400921f9f01b866er		; 3.14159
_pi	DQ	0400921f9f01b866er		; 3.14159
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	??_7RB_TargetingSystem@@6B@			; RB_TargetingSystem::`vftable'
PUBLIC	??0RB_TargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z	; RB_TargetingSystem::RB_TargetingSystem
PUBLIC	??_R4RB_TargetingSystem@@6B@			; RB_TargetingSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRB_TargetingSystem@@@8			; RB_TargetingSystem `RTTI Type Descriptor'
PUBLIC	??_R3RB_TargetingSystem@@8			; RB_TargetingSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RB_TargetingSystem@@8			; RB_TargetingSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RB_TargetingSystem@@8		; RB_TargetingSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@AbstTargetingSystem@@8		; AbstTargetingSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAbstTargetingSystem@@@8			; AbstTargetingSystem `RTTI Type Descriptor'
PUBLIC	??_R3AbstTargetingSystem@@8			; AbstTargetingSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AbstTargetingSystem@@8			; AbstTargetingSystem::`RTTI Base Class Array'
PUBLIC	?Update@RB_TargetingSystem@@UAEXXZ		; RB_TargetingSystem::Update
EXTRN	??0AbstTargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z:PROC ; AbstTargetingSystem::AbstTargetingSystem
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?isTargetWithinFOV@AbstTargetingSystem@@UBE_NXZ:PROC ; AbstTargetingSystem::isTargetWithinFOV
EXTRN	?isTargetShootable@AbstTargetingSystem@@UBE_NXZ:PROC ; AbstTargetingSystem::isTargetShootable
EXTRN	?GetLastRecordedPosition@AbstTargetingSystem@@UBE?AUVector2D@@XZ:PROC ; AbstTargetingSystem::GetLastRecordedPosition
EXTRN	?GetTimeTargetHasBeenVisible@AbstTargetingSystem@@UBENXZ:PROC ; AbstTargetingSystem::GetTimeTargetHasBeenVisible
EXTRN	?GetTimeTargetHasBeenOutOfView@AbstTargetingSystem@@UBENXZ:PROC ; AbstTargetingSystem::GetTimeTargetHasBeenOutOfView
;	COMDAT ??_R2AbstTargetingSystem@@8
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\rbbot\rb_targetingsystem.cpp
rdata$r	SEGMENT
??_R2AbstTargetingSystem@@8 DD FLAT:??_R1A@?0A@EA@AbstTargetingSystem@@8 ; AbstTargetingSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3AbstTargetingSystem@@8
rdata$r	SEGMENT
??_R3AbstTargetingSystem@@8 DD 00H			; AbstTargetingSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AbstTargetingSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAbstTargetingSystem@@@8
_DATA	SEGMENT
??_R0?AVAbstTargetingSystem@@@8 DD FLAT:??_7type_info@@6B@ ; AbstTargetingSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAbstTargetingSystem@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@AbstTargetingSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AbstTargetingSystem@@8 DD FLAT:??_R0?AVAbstTargetingSystem@@@8 ; AbstTargetingSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AbstTargetingSystem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RB_TargetingSystem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RB_TargetingSystem@@8 DD FLAT:??_R0?AVRB_TargetingSystem@@@8 ; RB_TargetingSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RB_TargetingSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2RB_TargetingSystem@@8
rdata$r	SEGMENT
??_R2RB_TargetingSystem@@8 DD FLAT:??_R1A@?0A@EA@RB_TargetingSystem@@8 ; RB_TargetingSystem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AbstTargetingSystem@@8
rdata$r	ENDS
;	COMDAT ??_R3RB_TargetingSystem@@8
rdata$r	SEGMENT
??_R3RB_TargetingSystem@@8 DD 00H			; RB_TargetingSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RB_TargetingSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRB_TargetingSystem@@@8
_DATA	SEGMENT
??_R0?AVRB_TargetingSystem@@@8 DD FLAT:??_7type_info@@6B@ ; RB_TargetingSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRB_TargetingSystem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RB_TargetingSystem@@6B@
rdata$r	SEGMENT
??_R4RB_TargetingSystem@@6B@ DD 00H			; RB_TargetingSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRB_TargetingSystem@@@8
	DD	FLAT:??_R3RB_TargetingSystem@@8
rdata$r	ENDS
;	COMDAT ??_7RB_TargetingSystem@@6B@
CONST	SEGMENT
??_7RB_TargetingSystem@@6B@ DD FLAT:??_R4RB_TargetingSystem@@6B@ ; RB_TargetingSystem::`vftable'
	DD	FLAT:?Update@RB_TargetingSystem@@UAEXXZ
	DD	FLAT:?isTargetWithinFOV@AbstTargetingSystem@@UBE_NXZ
	DD	FLAT:?isTargetShootable@AbstTargetingSystem@@UBE_NXZ
	DD	FLAT:?GetLastRecordedPosition@AbstTargetingSystem@@UBE?AUVector2D@@XZ
	DD	FLAT:?GetTimeTargetHasBeenVisible@AbstTargetingSystem@@UBENXZ
	DD	FLAT:?GetTimeTargetHasBeenOutOfView@AbstTargetingSystem@@UBENXZ
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
??0RB_TargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z PROC	; RB_TargetingSystem::RB_TargetingSystem
; _this$ = ecx

; 11   : {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AbstTargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z ; AbstTargetingSystem::AbstTargetingSystem
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7RB_TargetingSystem@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RB_TargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z ENDP	; RB_TargetingSystem::RB_TargetingSystem
_TEXT	ENDS
PUBLIC	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	?Health@AbstRaven_Bot@@QBEHXZ			; AbstRaven_Bot::Health
PUBLIC	?isAlive@AbstRaven_Bot@@QBE_NXZ			; AbstRaven_Bot::isAlive
PUBLIC	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
PUBLIC	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
PUBLIC	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
PUBLIC	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
PUBLIC	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
PUBLIC	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??4?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::operator=
PUBLIC	?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ; AbstRaven_Bot::GetSensoryMem
PUBLIC	??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
EXTRN	?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ:PROC ; Raven_SensoryMemory::GetListOfRecentlySensedOpponents
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__ehfuncinfo$?Update@RB_TargetingSystem@@UAEXXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Update@RB_TargetingSystem@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Update@RB_TargetingSystem@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$3
	DD	04H
	DD	FLAT:__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv179 = -136						; size = 4
tv87 = -132						; size = 4
tv176 = -128						; size = 4
tv180 = -124						; size = 4
tv174 = -120						; size = 4
tv70 = -116						; size = 4
$T136563 = -112						; size = 12
$T136562 = -97						; size = 1
$T136561 = -96						; size = 12
$T136560 = -84						; size = 16
_health$130925 = -68					; size = 4
_curBot$ = -60						; size = 12
_SensedBots$ = -40					; size = 16
_LowestHealthSoFar$ = -20				; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Update@RB_TargetingSystem@@UAEXXZ PROC			; RB_TargetingSystem::Update
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Update@RB_TargetingSystem@@UAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 21   :   int LowestHealthSoFar = MaxInt;

	mov	eax, DWORD PTR _MaxInt
	mov	DWORD PTR _LowestHealthSoFar$[ebp], eax

; 22   :   m_pCurrentTarget       = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 23   : 
; 24   :   //grab a list of all the opponents the owner can sense
; 25   :   std::list<AbstRaven_Bot*> SensedBots;

	lea	ecx, DWORD PTR _SensedBots$[ebp]
	call	??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 26   :   SensedBots = m_pOwner->GetSensoryMem()->GetListOfRecentlySensedOpponents();

	lea	edx, DWORD PTR $T136560[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ; AbstRaven_Bot::GetSensoryMem
	mov	ecx, eax
	call	?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ; Raven_SensoryMemory::GetListOfRecentlySensedOpponents
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv174[ebp]
	push	edx
	lea	ecx, DWORD PTR _SensedBots$[ebp]
	call	??4?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T136560[ebp]
	call	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >

; 27   :   
; 28   :   std::list<AbstRaven_Bot*>::const_iterator curBot = SensedBots.begin();

	lea	eax, DWORD PTR $T136561[ebp]
	push	eax
	lea	ecx, DWORD PTR _SensedBots$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv180[ebp], eax
	mov	ecx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv176[ebp]
	push	edx
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T136561[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN5@Update
$LN4@Update:

; 29   :   for (curBot; curBot != SensedBots.end(); ++curBot)

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
$LN5@Update:
	lea	eax, DWORD PTR $T136563[ebp]
	push	eax
	lea	ecx, DWORD PTR _SensedBots$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv179[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv179[ebp]
	push	edx
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	mov	BYTE PTR $T136562[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T136563[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T136562[ebp]
	test	eax, eax
	je	SHORT $LN3@Update

; 30   :   {
; 31   :     //make sure the bot is alive and that it is not the owner
; 32   :     if ((*curBot)->isAlive() && (*curBot != m_pOwner) )

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?isAlive@AbstRaven_Bot@@QBE_NXZ		; AbstRaven_Bot::isAlive
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Update
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN2@Update

; 33   :     {
; 34   :       //double dist = Vec2DDistanceSq((*curBot)->Pos(), m_pOwner->Pos());
; 35   : 		int health = (*curBot)->Health();

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?Health@AbstRaven_Bot@@QBEHXZ		; AbstRaven_Bot::Health
	mov	DWORD PTR _health$130925[ebp], eax

; 36   : 
; 37   :       if (health < LowestHealthSoFar)

	mov	ecx, DWORD PTR _health$130925[ebp]
	cmp	ecx, DWORD PTR _LowestHealthSoFar$[ebp]
	jge	SHORT $LN2@Update

; 38   :       {
; 39   :         LowestHealthSoFar = health;

	mov	edx, DWORD PTR _health$130925[ebp]
	mov	DWORD PTR _LowestHealthSoFar$[ebp], edx

; 40   :         m_pCurrentTarget = *curBot;

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+8], edx
$LN2@Update:

; 41   :       }
; 42   :     }
; 43   :   }

	jmp	$LN4@Update
$LN3@Update:

; 44   : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _SensedBots$[ebp]
	call	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Update
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@Update:
	DD	2
	DD	$LN16@Update
$LN16@Update:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN13@Update
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN14@Update
$LN14@Update:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
$LN13@Update:
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$0:
	lea	ecx, DWORD PTR _SensedBots$[ebp]
	jmp	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$1:
	lea	ecx, DWORD PTR $T136560[ebp]
	jmp	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$2:
	lea	ecx, DWORD PTR $T136561[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$3:
	lea	ecx, DWORD PTR _curBot$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Update@RB_TargetingSystem@@UAEXXZ$4:
	lea	ecx, DWORD PTR $T136563[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Update@RB_TargetingSystem@@UAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Update@RB_TargetingSystem@@UAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Update@RB_TargetingSystem@@UAEXXZ ENDP			; RB_TargetingSystem::Update
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\abstraven_bot.h
;	COMDAT ?Health@AbstRaven_Bot@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Health@AbstRaven_Bot@@QBEHXZ PROC			; AbstRaven_Bot::Health, COMDAT
; _this$ = ecx

; 151  :   int           Health()const{return m_iHealth;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+204]
	mov	esp, ebp
	pop	ebp
	ret	0
?Health@AbstRaven_Bot@@QBEHXZ ENDP			; AbstRaven_Bot::Health
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?isAlive@AbstRaven_Bot@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isAlive@AbstRaven_Bot@@QBE_NXZ PROC			; AbstRaven_Bot::isAlive, COMDAT
; _this$ = ecx

; 166  :   bool          isAlive()const{return m_Status == alive;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+152], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?isAlive@AbstRaven_Bot@@QBE_NXZ ENDP			; AbstRaven_Bot::isAlive
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ PROC ; AbstRaven_Bot::GetSensoryMem, COMDAT
; _this$ = ecx

; 225  :   Raven_SensoryMemory* const         GetSensoryMem()const{return m_pSensoryMem;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+164]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ENDP ; AbstRaven_Bot::GetSensoryMem
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 116  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 117  : 		*this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 118  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$99524 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 121  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:

; 123  : 			;
; 124  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator

; 125  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 126  : 		else

	jmp	SHORT $LN3@operator
$LN2@operator:

; 127  : 			{	// becoming invalid, disown current parent
; 128  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$99524[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 129  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 130  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$99524[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:

; 131  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 132  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$99524[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$99535 = -40					; size = 4
__Parent_proxy$99533 = -32				; size = 4
__Lock$99531 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 143  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt

; 145  : 			{	// no future parent, just disown current parent
; 146  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$99531[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 147  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 148  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$99531[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 149  : 		else

	jmp	SHORT $LN4@Adopt
$LN3@Adopt:

; 150  : 			{	// have a parent, do adoption
; 151  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$99533[ebp], ecx

; 152  : 
; 153  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 154  : 			if (_Myproxy != _Parent_proxy)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$99533[ebp]
	je	SHORT $LN4@Adopt

; 155  : 				{	// change parentage
; 156  : 				_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$99535[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 157  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 158  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$99533[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 159  : 				_Parent_proxy->_Myfirstiter = this;

	mov	ecx, DWORD PTR __Parent_proxy$99533[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 160  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$99533[ebp]
	mov	DWORD PTR [eax], ecx

; 161  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$99535[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:

; 162  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 163  : 			_Myproxy = _Parent_proxy;
; 164  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 165  : 			}
; 166  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$99531[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$99535[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$99545 = -8					; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 184  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 186  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me

; 187  : 			{	// adopted, remove self from list
; 188  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$99545[ebp], edx
$LN3@Orphan_me:

; 189  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$99545[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$99545[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me

; 190  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$99545[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$99545[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:

; 191  : 
; 192  : 			if (*_Pnext == 0)

	mov	edx, DWORD PTR __Pnext$99545[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me

; 193  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	push	193					; 000000c1H
	push	OFFSET ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:

; 194  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$99545[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 195  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:

; 196  : 			}
; 197  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 198  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 135  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 136  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 137  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 138  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 139  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 140  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Iterator_b:
	DD	1
	DD	$LN6@Iterator_b
$LN6@Iterator_b:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ	; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T136653 = -8						; size = 4
_this$ = -4						; size = 4
??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 607  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T136653[ebp], esp
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >

; 608  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
_TEXT	ENDS
PUBLIC	?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv
PUBLIC	??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::operator=, COMDAT
; _this$ = ecx

; 694  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 695  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv

; 696  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 697  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::operator=
_TEXT	ENDS
PUBLIC	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 769  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 770  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy

; 771  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T136669 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136669[ebp], 0

; 782  : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	ecx, DWORD PTR $T136669[ebp]
	or	ecx, 1
	mov	DWORD PTR $T136669[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 783  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T136674 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136674[ebp], 0

; 792  : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	eax, DWORD PTR $T136674[ebp]
	or	eax, 1
	mov	DWORD PTR $T136674[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 793  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
_TEXT	ENDS
PUBLIC	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
EXTRN	__invalid_parameter:PROC
EXTRN	__CrtDbgReportW:PROC
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
CONST	SEGMENT
??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*, COMDAT
; _this$ = ecx

; 201  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 202  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 203  : 		if (this->_Getcont() == 0
; 204  : 			|| this->_Ptr == 0
; 205  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator@2
$LN1@operator@2:

; 206  : 			{	// report error
; 207  : 			_DEBUG_ERROR("list iterator not dereferencable");

	push	207					; 000000cfH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 208  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@2
	xor	ecx, ecx
	jne	SHORT $LN6@operator@2
$LN5@operator@2:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	208					; 000000d0H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@2
	int	3
$LN6@operator@2:
	push	0
	push	208					; 000000d0H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@2:

; 209  : 			}
; 210  : 
; 211  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 212  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 213  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 214  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 215  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 216  : 
; 217  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
	add	esp, 4

; 218  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 174  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv66[ebp]

; 176  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
CONST	SEGMENT
??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++, COMDAT
; _this$ = ecx

; 221  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 222  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 223  : 		if (this->_Getcont() == 0
; 224  : 			|| this->_Ptr == 0
; 225  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@3
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator@3
$LN1@operator@3:

; 226  : 			{	// report error
; 227  : 			_DEBUG_ERROR("list iterator not incrementable");

	push	227					; 000000e3H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 228  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@3
	xor	ecx, ecx
	jne	SHORT $LN6@operator@3
$LN5@operator@3:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	228					; 000000e4H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@3
	int	3
$LN6@operator@3:
	push	0
	push	228					; 000000e4H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@3:

; 229  : 			}
; 230  : 
; 231  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 232  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 233  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 234  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 235  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 236  : 
; 237  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax

; 238  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 239  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=, COMDAT
; _this$ = ecx

; 299  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 301  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice
PUBLIC	?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty
PUBLIC	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$2
	DD	05H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
tv192 = -108						; size = 4
tv188 = -104						; size = 4
tv197 = -100						; size = 4
tv186 = -96						; size = 4
tv196 = -92						; size = 4
tv183 = -88						; size = 4
tv195 = -84						; size = 4
tv181 = -80						; size = 4
tv194 = -76						; size = 4
tv178 = -72						; size = 4
tv193 = -68						; size = 4
$T136697 = -64						; size = 12
$T136696 = -52						; size = 4
$T136695 = -48						; size = 12
$T136694 = -36						; size = 4
$T136693 = -32						; size = 12
$T136692 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv, COMDAT
; _this$ = ecx

; 700  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 701  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN3@Assign_rv

; 702  : 			{	// clear this and steal from _Right
; 703  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear

; 704  : 			if (!_Right.empty())

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@Assign_rv

; 705  : 				_Splice(begin(), _Right, _Right.begin(), _Right.end(),
; 706  : 					_Right._Mysize);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T136693[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136692[ebp], esp
	mov	eax, DWORD PTR tv178[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR $T136695[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv183[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136694[ebp], esp
	mov	edx, DWORD PTR tv183[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv196[ebp], eax
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv186[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T136697[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv197[ebp], eax
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136696[ebp], esp
	mov	edx, DWORD PTR tv188[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T136697[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T136695[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T136693[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN3@Assign_rv:

; 707  : 			}
; 708  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$0:
	lea	ecx, DWORD PTR $T136693[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$1:
	mov	ecx, DWORD PTR $T136692[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$2:
	lea	ecx, DWORD PTR $T136695[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$3:
	mov	ecx, DWORD PTR $T136694[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$4:
	lea	ecx, DWORD PTR $T136697[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy, COMDAT
; _this$ = ecx

; 1496 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1497 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear

; 1498 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
PUBLIC	??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
$T136714 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 493  : 		{	// construct base, and allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T136714[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 494  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 495  : 		this->_Myhead = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 496  : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx

; 497  : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 498  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 501  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 502  : 		this->_Alnod.deallocate(this->_Myhead, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 503  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode, COMDAT

; 560  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 561  : 		return ((_Nodepref)(*_Pnode)._Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 562  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval, COMDAT

; 570  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 571  : 		return ((reference)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 572  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ PROC	; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ ENDP	; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==, COMDAT
; _this$ = ecx

; 281  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 282  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 283  : 		if (this->_Getcont() == 0
; 284  : 			|| this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator@4
$LN1@operator@4:

; 285  : 			{	// report error
; 286  : 			_DEBUG_ERROR("list iterators incompatible");

	push	286					; 0000011eH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 287  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator@4
	xor	ecx, ecx
	jne	SHORT $LN6@operator@4
$LN5@operator@4:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	287					; 0000011fH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@4
	int	3
$LN6@operator@4:
	push	0
	push	287					; 0000011fH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@4:

; 288  : 			}
; 289  : 
; 290  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 291  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 292  : 			&& this->_Getcont() == _Right._Getcont());
; 293  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 294  : 
; 295  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al

; 296  : 		}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx

; 342  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >

; 343  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty, COMDAT
; _this$ = ecx

; 886  : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		return (this->_Mysize == 0);

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 0
	sete	cl
	mov	al, cl

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
PUBLIC	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnode$ = -12						; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear, COMDAT
; _this$ = ecx

; 1096 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1097 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1098 : 		this->_Orphan_ptr(*this, 0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr

; 1099 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1100 : 
; 1101 : 		_Nodeptr _Pnext;
; 1102 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1103 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1104 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx

; 1105 : 		this->_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1106 : 
; 1107 : 		for (; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN3@clear:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN4@clear

; 1108 : 			{	// delete an element
; 1109 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], ecx

; 1110 : 
; 1111 : 			_Dest_val(this->_Alnod, _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 8

; 1112 : 			this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 1113 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1114 : 		}

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
PUBLIC	??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>
PUBLIC	?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same
PUBLIC	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
PUBLIC	??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>
PUBLIC	??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ ; `string'
;	COMDAT ??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
CONST	SEGMENT
??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 's', 00H, 'p', 00H
	DB	'l', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$11
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
_TEXT	SEGMENT
tv288 = -168						; size = 4
tv291 = -164						; size = 4
tv287 = -160						; size = 4
tv205 = -156						; size = 4
tv215 = -152						; size = 4
tv284 = -148						; size = 4
tv280 = -144						; size = 4
tv276 = -140						; size = 4
tv130 = -136						; size = 4
tv273 = -132						; size = 4
tv139 = -128						; size = 4
$T136757 = -124						; size = 12
$T136756 = -112						; size = 4
$T136755 = -108						; size = 4
$T136754 = -104						; size = 12
$T136753 = -92						; size = 4
$T136752 = -88						; size = 4
$T136751 = -84						; size = 4
$T136750 = -80						; size = 4
__Next$132939 = -72					; size = 12
__Iter$132933 = -52					; size = 12
__Next$132929 = -32					; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Right$ = 20						; size = 4
__First$ = 24						; size = 12
__Last$ = 36						; size = 12
__Count$ = 48						; size = 4
?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice, COMDAT
; _this$ = ecx

; 1435 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-168]
	mov	ecx, 39					; 00000027H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1436 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1437 : 		if (_Where._Getcont() != this)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN9@Splice

; 1438 : 			_DEBUG_ERROR("list splice iterator outside range");

	push	1438					; 0000059eH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN9@Splice:

; 1439 : 		if (this->_Alval == _Right._Alval)

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	push	ecx
	call	??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN8@Splice

; 1440 : 			{	// same allocator, just relink
; 1441 : 			if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN7@Splice

; 1442 : 				for (const_iterator _Next = _First; _Next != _Last; )

	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$132929[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN6@Splice:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$132929[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Splice

; 1443 : 					{	// transfer ownership
; 1444 : 					const_iterator _Iter = _Next++;

	push	0
	lea	ecx, DWORD PTR __Iter$132933[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$132929[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 1445 : 					_Orphan_ptr(_Right, _Iter._Ptr);

	mov	edx, DWORD PTR __Iter$132933[ebp+8]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr

; 1446 : 					_Iter._Adopt(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Iter$132933[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 1447 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR __Iter$132933[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN6@Splice
$LN5@Splice:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __Next$132929[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN7@Splice:

; 1448 : 			_Splice_same(_Where, _Right, _First, _Last, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136750[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv273[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136751[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv276[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136752[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv280[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same

; 1449 : 			}
; 1450 : 
; 1451 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1452 : 		if (this->_Alval == _Right._Alval)
; 1453 : 			_Splice_same(_Where, _Right, _First, _Last, _Count);
; 1454 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1455 : 
; 1456 : 		else

	jmp	$LN4@Splice
$LN8@Splice:

; 1457 : 			{	// different allocator, copy nodes then erase source
; 1458 : 			for (const_iterator _Next = _First; _Next != _Last; ++_Next)

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$132939[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	jmp	SHORT $LN3@Splice
$LN2@Splice:
	lea	ecx, DWORD PTR __Next$132939[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
$LN3@Splice:
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$132939[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Splice

; 1459 : 				insert(_Where, (_Ty &&)*_Next);

	lea	ecx, DWORD PTR __Next$132939[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136753[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv284[ebp], eax
	lea	ecx, DWORD PTR $T136754[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>
	mov	DWORD PTR tv215[ebp], eax
	lea	ecx, DWORD PTR $T136754[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@Splice
$LN1@Splice:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __Next$132939[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ

; 1460 : 			_Right.erase(_First, _Last);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136755[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv205[ebp], eax
	mov	eax, DWORD PTR tv205[ebp]
	mov	DWORD PTR tv287[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136756[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv291[ebp], eax
	lea	eax, DWORD PTR $T136757[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
	mov	DWORD PTR tv288[ebp], eax
	lea	ecx, DWORD PTR $T136757[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN4@Splice:

; 1461 : 			}
; 1462 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@Splice
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 168				; 000000a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
	npad	1
$LN31@Splice:
	DD	3
	DD	$LN30@Splice
$LN30@Splice:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN26@Splice
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN27@Splice
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN28@Splice
$LN28@Splice:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN27@Splice:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN26@Splice:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$3:
	lea	ecx, DWORD PTR __Next$132929[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$4:
	lea	ecx, DWORD PTR __Iter$132933[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$5:
	mov	ecx, DWORD PTR $T136750[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$6:
	mov	ecx, DWORD PTR $T136751[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$8:
	lea	ecx, DWORD PTR __Next$132939[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$11:
	mov	ecx, DWORD PTR $T136755[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode, COMDAT

; 565  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 566  : 		return ((_Nodepref)(*_Pnode)._Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 567  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
_TEXT	ENDS
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
PUBLIC	??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
$T136787 = -36						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z PROC ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 444  : 		{	// construct allocators and proxy from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>

; 445  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 446  : 			_Alproxy(_Alnod);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>

; 447  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 448  : 		_Cons_val(_Alproxy, this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T136787[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 449  : 		this->_Myproxy->_Mycont = this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx

; 450  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@List_nod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@List_nod:
	DD	1
	DD	$LN6@List_nod
$LN6@List_nod:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@List_nod
$LN4@List_nod:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 65   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 66   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 77   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 78   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 91   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 93   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$99557 = -20					; size = 4
__Lock$99556 = -12					; size = 4
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 206  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 207  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 208  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all

; 209  : 		{	// proxy allocated, drain it
; 210  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$99556[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 211  : 
; 212  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$99557[ebp], edx

; 213  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$99557[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$99557[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$99557[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all

; 214  : 			(*_Pnext)->_Myproxy = 0;

	mov	edx, DWORD PTR __Pnext$99557[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 215  : 		_Myproxy->_Myfirstiter = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0

; 216  : 		}

	lea	ecx, DWORD PTR __Lock$99556[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:

; 217  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 218  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 453  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 454  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 455  : 			_Alproxy(_Alnod);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>

; 456  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 457  : 		_Dest_val(_Alproxy, this->_Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8

; 458  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 459  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 460  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@List_nod@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@List_nod@2:
	DD	1
	DD	$LN6@List_nod@2
$LN6@List_nod@2:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@List_nod@2
$LN4@List_nod@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z PROC ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx

; 184  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>

; 185  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
PUBLIC	??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator=
PUBLIC	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$6
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv212 = -108						; size = 4
tv211 = -104						; size = 4
tv209 = -100						; size = 4
tv207 = -96						; size = 4
tv206 = -92						; size = 4
tv94 = -88						; size = 4
tv194 = -84						; size = 4
tv218 = -80						; size = 4
tv189 = -76						; size = 4
tv216 = -72						; size = 4
$T136847 = -68						; size = 4
$T136844 = -64						; size = 4
$T136843 = -60						; size = 12
$T136842 = -48						; size = 4
$T136839 = -44						; size = 12
$T136838 = -32						; size = 12
$T136837 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase, COMDAT
; _this$ = ecx

; 1081 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136847[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1082 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T136838[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T136847[ebp]
	or	edx, 1
	mov	DWORD PTR $T136847[ebp], edx
	mov	eax, DWORD PTR tv189[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase
	lea	edx, DWORD PTR $T136839[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv218[ebp], eax
	mov	eax, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv194[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T136847[ebp]
	or	ecx, 2
	mov	DWORD PTR $T136847[ebp], ecx
	mov	edx, DWORD PTR tv194[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN8@erase
$LN7@erase:
	mov	DWORD PTR tv94[ebp], 0
$LN8@erase:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T136837[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T136847[ebp]
	and	edx, 2
	je	SHORT $LN15@erase
	and	DWORD PTR $T136847[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T136839[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T136847[ebp]
	and	eax, 1
	je	SHORT $LN16@erase
	and	DWORD PTR $T136847[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T136838[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	movzx	ecx, BYTE PTR $T136837[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase

; 1083 : 			{	// erase all and return fresh iterator
; 1084 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear

; 1085 : 			return (end());

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	eax, DWORD PTR $T136847[ebp]
	or	eax, 4
	mov	DWORD PTR $T136847[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@erase

; 1086 : 			}
; 1087 : 		else

	jmp	$LN3@erase
$LN2@erase:

; 1088 : 			{	// erase subrange
; 1089 : 			while (_First != _Last)

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase

; 1090 : 				_First = erase(_First);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136842[ebp], esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv206[ebp], eax
	lea	ecx, DWORD PTR $T136843[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
	mov	DWORD PTR tv207[ebp], eax
	mov	edx, DWORD PTR tv207[ebp]
	mov	DWORD PTR tv209[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv209[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T136843[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase
$LN1@erase:

; 1091 : 			return (_Make_iter(_Last));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136844[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv211[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
	mov	DWORD PTR tv212[ebp], eax
	mov	ecx, DWORD PTR $T136847[ebp]
	or	ecx, 4
	mov	DWORD PTR $T136847[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase
$LN3@erase:

; 1092 : 			}
; 1093 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN5@erase:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T136847[ebp]
	and	eax, 1
	je	$LN12@erase
	and	DWORD PTR $T136847[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T136838[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
	ret	0
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T136847[ebp]
	and	eax, 2
	je	$LN14@erase
	and	DWORD PTR $T136847[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T136839[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$4:
	mov	eax, DWORD PTR $T136847[ebp]
	and	eax, 4
	je	$LN18@erase
	and	DWORD PTR $T136847[ebp], -5		; fffffffbH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN18@erase:
	ret	0
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$6:
	lea	ecx, DWORD PTR $T136843[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
PUBLIC	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2
__ehfuncinfo$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Right$ = 20						; size = 4
__First$ = 24						; size = 12
__Last$ = 36						; size = 12
__Count$ = 48						; size = 4
?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same, COMDAT
; _this$ = ecx

; 1467 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1468 : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN1@Splice_sam

; 1469 : 			{	// splicing from another list, adjust counts
; 1470 : 			_Incsize(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize

; 1471 : 			_Right._Mysize -= _Count;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@Splice_sam:

; 1472 : 			}
; 1473 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =
; 1474 : 			_Last._Mynode();

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1475 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =
; 1476 : 			_Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1477 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =
; 1478 : 			_First._Mynode();

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1479 : 
; 1480 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1481 : 		this->_Prevnode(_Where._Mynode()) =
; 1482 : 			this->_Prevnode(_Last._Mynode());

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1483 : 		this->_Prevnode(_Last._Mynode()) =
; 1484 : 			this->_Prevnode(_First._Mynode());

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1485 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1486 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 1527 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1528 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1529 : 		const_iterator **_Pnext = (const_iterator **)_Cont._Getpfirst();

	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1530 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 1531 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr

; 1532 : 				if ((*_Pnext)->_Ptr == this->_Myhead
; 1533 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:

; 1534 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1535 : 				else

	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:

; 1536 : 					{	// orphan the iterator
; 1537 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1538 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:

; 1539 : 					}

	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:

; 1540 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 96   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv66[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv66[ebp]

; 98   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 169  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 171  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 179  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T136900 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++, COMDAT
; _this$ = ecx

; 242  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136900[ebp], 0

; 243  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 244  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++

; 245  : 		return (_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T136900[ebp]
	or	edx, 1
	mov	DWORD PTR $T136900[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 246  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator@5:
	DD	1
	DD	$LN8@operator@5
$LN8@operator@5:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator@5
$LN6@operator@5:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T136900[ebp]
	and	eax, 1
	je	$LN5@operator@5
	and	DWORD PTR $T136900[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN5@operator@5:
	ret	0
__ehhandler$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 41   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 42   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
PUBLIC	??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator=
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 111  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 112  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T136935 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136935[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	edx, DWORD PTR $T136935[ebp]
	or	edx, 1
	mov	DWORD PTR $T136935[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 803  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T136935[ebp]
	and	eax, 1
	je	$LN5@Make_iter
	and	DWORD PTR $T136935[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN5@Make_iter:
	ret	0
__ehhandler$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
PUBLIC	??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@ ; `string'
;	COMDAT ??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@
CONST	SEGMENT
??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1
__ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv200 = -56						; size = 4
tv199 = -52						; size = 4
tv197 = -48						; size = 4
tv206 = -44						; size = 4
$T136951 = -40						; size = 4
$T136946 = -36						; size = 4
$T136945 = -32						; size = 12
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase, COMDAT
; _this$ = ecx

; 1054 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136951[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1055 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1056 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN2@erase@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@erase@2
$LN2@erase@2:

; 1057 : 			_DEBUG_ERROR("list erase iterator outside range");

	push	1057					; 00000421H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@erase@2:

; 1058 : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	push	0
	lea	edx, DWORD PTR $T136945[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv197[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv197[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T136945[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ

; 1059 : 		_Orphan_ptr(*this, _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr

; 1060 : 
; 1061 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1062 : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 1063 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1064 : 
; 1065 : 		if (_Pnode != this->_Myhead)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	$LN1@erase@2

; 1066 : 			{	// not list head, safe to erase
; 1067 : 			this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1068 : 				this->_Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1069 : 			this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1070 : 				this->_Prevnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1071 : 
; 1072 : 			_Dest_val(this->_Alnod, _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 8

; 1073 : 			this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 1074 : 
; 1075 : 			--this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@2:

; 1076 : 			}
; 1077 : 		return (_Make_iter(_Where));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136946[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv199[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
	mov	DWORD PTR tv200[ebp], eax
	mov	ecx, DWORD PTR $T136951[ebp]
	or	ecx, 1
	mov	DWORD PTR $T136951[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1078 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1:
	lea	ecx, DWORD PTR $T136945[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$3:
	mov	eax, DWORD PTR $T136951[ebp]
	and	eax, 1
	je	$LN10@erase@2
	and	DWORD PTR $T136951[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN10@erase@2:
	ret	0
__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize, COMDAT
; _this$ = ecx

; 1519 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1520 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+8]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1521 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1522 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize:

; 1523 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 92   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 94   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ ; std::allocator<AbstRaven_Bot *>::max_size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size, COMDAT
; _this$ = ecx

; 881  : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 882  : 		return (this->_Alval.max_size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ ; std::allocator<AbstRaven_Bot *>::max_size

; 883  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ PROC ; std::allocator<AbstRaven_Bot *>::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]

; 220  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ ENDP ; std::allocator<AbstRaven_Bot *>::max_size
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z PROC ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z PROC ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>, COMDAT

; 262  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp

; 263  : 	return (true);

	mov	al, 1

; 264  : 	}

	pop	ebp
	ret	0
??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z ENDP ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>
PUBLIC	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv66 = -32						; size = 4
tv89 = -28						; size = 4
$T136985 = -24						; size = 4
$T136981 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 733  : 		iterator insert(const_iterator _Where, _Valty&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T136985[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 734  : 		{	// insert _Val at _Where
; 735  : 		return (emplace(_Where, _STD forward<_Valty>(_Val)));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T136981[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR $T136985[ebp]
	or	ecx, 1
	mov	DWORD PTR $T136985[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 736  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$2:
	mov	eax, DWORD PTR $T136985[ebp]
	and	eax, 1
	je	$LN6@insert
	and	DWORD PTR $T136985[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN6@insert:
	ret	0
__ehhandler$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T136999 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T136999[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T136999[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T137009 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T137009[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T137009[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T137018 = -24						; size = 4
$T137017 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T137018[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T137018[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T137018[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T137018[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T137017[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T137018[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 57   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 58   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 61   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 62   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z PROC ; std::forward<AbstRaven_Bot *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ENDP ; std::forward<AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--
PUBLIC	??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv141 = -40						; size = 4
tv140 = -36						; size = 4
tv138 = -32						; size = 4
$T137046 = -28						; size = 4
$T137041 = -24						; size = 4
$T137040 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 739  : 		iterator emplace(const_iterator _Where, _Valty&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T137046[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 740  : 		{	// insert _Val at _Where
; 741  : 		_Insert_rv(_Where, _STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T137040[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>

; 742  : 		return (_Make_iter(--_Where));

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T137041[ebp], esp
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv140[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR $T137046[ebp]
	or	ecx, 1
	mov	DWORD PTR $T137046[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 743  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$3:
	mov	eax, DWORD PTR $T137046[ebp]
	and	eax, 1
	je	$LN7@emplace
	and	DWORD PTR $T137046[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN7@emplace:
	ret	0
__ehhandler$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
CONST	SEGMENT
??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--, COMDAT
; _this$ = ecx

; 249  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 250  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 251  : 		if (this->_Getcont() == 0
; 252  : 			|| this->_Ptr == 0
; 253  : 			|| (this->_Ptr = _Mylist::_Prevnode(this->_Ptr))
; 254  : 				== ((_Mylist *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@6
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+8], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator@6
$LN1@operator@6:

; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("list iterator not decrementable");

	push	256					; 00000100H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 257  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@6
	xor	ecx, ecx
	jne	SHORT $LN6@operator@6
$LN5@operator@6:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@6
	int	3
$LN6@operator@6:
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@6:

; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);
; 263  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 264  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 265  : 
; 266  :  #else /* _ITERATOR_DEBUG_LEVEL */
; 267  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);
; 268  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 269  : 
; 270  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 271  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--
_TEXT	ENDS
PUBLIC	??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>
PUBLIC	??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ ; `string'
;	COMDAT ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
CONST	SEGMENT
??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
__Newnode$ = -24					; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Val$ = 20						; size = 4
??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 746  : 		void _Insert_rv(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 747  : 		_Valty&& _Val)
; 748  : 		{	// insert _Val at _Where
; 749  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 750  : 		if (_Where._Getcont() != this)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN1@Insert_rv

; 751  : 			_DEBUG_ERROR("list insert iterator outside range");

	push	751					; 000002efH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Insert_rv:

; 752  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 753  : 
; 754  : 		_Nodeptr _Pnode = _Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 755  : 		_Nodeptr _Newnode =
; 756  : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),
; 757  : 				_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>
	mov	DWORD PTR __Newnode$[ebp], eax

; 758  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize

; 759  : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 760  : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 761  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>
PUBLIC	??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
PUBLIC	??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::addressof<AbstRaven_Bot *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$0
__unwindtable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$2
__ehfuncinfo$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv137 = -44						; size = 4
tv136 = -40						; size = 4
tv135 = -36						; size = 4
tv134 = -32						; size = 4
tv133 = -28						; size = 4
__Pnode$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 541  : 		_Nodeptr _Buynode(_Nodeptr _Next,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 542  : 		_Nodeptr _Prev, _Valty&& _Val)
; 543  : 		{	// allocate a node and set links and value
; 544  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 545  : 
; 546  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 547  : 		this->_Nextnode(_Pnode) = _Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [ecx], edx

; 548  : 		this->_Prevnode(_Pnode) = _Prev;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	edx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [ecx], edx

; 549  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Pnode)),
; 550  : 			_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv136[ebp], eax
	mov	edx, DWORD PTR tv136[ebp]
	push	edx
	call	??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::addressof<AbstRaven_Bot *>
	add	esp, 4
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	push	eax
	mov	ecx, DWORD PTR tv137[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 13					; 0000000dH
	push	edx
	call	??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$0:

; 551  : 		_CATCH_ALL
; 552  : 		this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 553  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 554  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$1
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$1:

; 555  : 
; 556  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 557  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z PROC ; std::addressof<AbstRaven_Bot *>, COMDAT

; 110  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 112  : 	}

	pop	ebp
	ret	0
??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ENDP ; std::addressof<AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z ; std::allocator<AbstRaven_Bot *>::construct
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z PROC ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z ; std::allocator<AbstRaven_Bot *>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z$0
__ehfuncinfo$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T137093 = -24						; size = 4
$T137092 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z PROC ; std::allocator<AbstRaven_Bot *>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T137093[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T137093[ebp], 0
	je	SHORT $LN3@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	mov	edx, DWORD PTR $T137093[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T137093[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct@2
$LN3@construct@2:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct@2:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T137092[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T137093[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z ENDP ; std::allocator<AbstRaven_Bot *>::construct
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxInt@@YAXXZ
text$yc	SEGMENT
??__EMaxInt@@YAXXZ PROC					; `dynamic initializer for 'MaxInt'', COMDAT

; 23   : const int     MaxInt    = (std::numeric_limits<int>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR _MaxInt, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxInt@@YAXXZ ENDP					; `dynamic initializer for 'MaxInt''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
text$yc	ENDS
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 712  : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 713  : 		{	// return maximum value
; 714  : 		return (INT_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 715  : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::max
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxDouble@@YAXXZ
text$yc	SEGMENT
??__EMaxDouble@@YAXXZ PROC				; `dynamic initializer for 'MaxDouble'', COMDAT

; 24   : const double  MaxDouble = (std::numeric_limits<double>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::max
	fstp	QWORD PTR _MaxDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxDouble@@YAXXZ ENDP				; `dynamic initializer for 'MaxDouble''
text$yc	ENDS
PUBLIC	__real@7fefffffffffffff
;	COMDAT __real@7fefffffffffffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?max@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::max, COMDAT

; 1233 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1234 : 		{	// return maximum value
; 1235 : 		return (DBL_MAX);

	fld	QWORD PTR __real@7fefffffffffffff

; 1236 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinDouble@@YAXXZ
text$yc	SEGMENT
??__EMinDouble@@YAXXZ PROC				; `dynamic initializer for 'MinDouble'', COMDAT

; 25   : const double  MinDouble = (std::numeric_limits<double>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::min
	fstp	QWORD PTR _MinDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinDouble@@YAXXZ ENDP				; `dynamic initializer for 'MinDouble''
text$yc	ENDS
PUBLIC	__real@0010000000000000
;	COMDAT __real@0010000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@0010000000000000 DQ 00010000000000000r	; 2.22507e-308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?min@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::min, COMDAT

; 1228 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1229 : 		{	// return minimum value
; 1230 : 		return (DBL_MIN);

	fld	QWORD PTR __real@0010000000000000

; 1231 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::min
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxFloat@@YAXXZ
text$yc	SEGMENT
??__EMaxFloat@@YAXXZ PROC				; `dynamic initializer for 'MaxFloat'', COMDAT

; 26   : const float   MaxFloat  = (std::numeric_limits<float>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::max
	fstp	DWORD PTR _MaxFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxFloat@@YAXXZ ENDP				; `dynamic initializer for 'MaxFloat''
text$yc	ENDS
PUBLIC	__real@7f7fffff
;	COMDAT __real@7f7fffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?max@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::max, COMDAT

; 1166 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1167 : 		{	// return maximum value
; 1168 : 		return (FLT_MAX);

	fld	DWORD PTR __real@7f7fffff

; 1169 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinFloat@@YAXXZ
text$yc	SEGMENT
??__EMinFloat@@YAXXZ PROC				; `dynamic initializer for 'MinFloat'', COMDAT

; 27   : const float   MinFloat  = (std::numeric_limits<float>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::min
	fstp	DWORD PTR _MinFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinFloat@@YAXXZ ENDP				; `dynamic initializer for 'MinFloat''
text$yc	ENDS
PUBLIC	__real@00800000
;	COMDAT __real@00800000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?min@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::min, COMDAT

; 1161 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1162 : 		{	// return minimum value
; 1163 : 		return (FLT_MIN);

	fld	DWORD PTR __real@00800000

; 1164 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
_TEXT	ENDS
;	COMDAT ??__ETwoPi@@YAXXZ
text$yc	SEGMENT
??__ETwoPi@@YAXXZ PROC					; `dynamic initializer for 'TwoPi'', COMDAT

; 30   : const double   TwoPi     = Pi * 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fadd	ST(0), ST(0)
	fstp	QWORD PTR _TwoPi
	pop	ebp
	ret	0
??__ETwoPi@@YAXXZ ENDP					; `dynamic initializer for 'TwoPi''
text$yc	ENDS
PUBLIC	__real@4000000000000000
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EHalfPi@@YAXXZ
text$yc	SEGMENT
??__EHalfPi@@YAXXZ PROC					; `dynamic initializer for 'HalfPi'', COMDAT

; 31   : const double   HalfPi    = Pi / 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4000000000000000
	fstp	QWORD PTR _HalfPi
	pop	ebp
	ret	0
??__EHalfPi@@YAXXZ ENDP					; `dynamic initializer for 'HalfPi''
text$yc	ENDS
PUBLIC	__real@4010000000000000
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EQuarterPi@@YAXXZ
text$yc	SEGMENT
??__EQuarterPi@@YAXXZ PROC				; `dynamic initializer for 'QuarterPi'', COMDAT

; 32   : const double   QuarterPi = Pi / 4;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4010000000000000
	fstp	QWORD PTR _QuarterPi
	pop	ebp
	ret	0
??__EQuarterPi@@YAXXZ ENDP				; `dynamic initializer for 'QuarterPi''
text$yc	ENDS
_BSS	SEGMENT
_MinDouble DQ	01H DUP (?)
_MaxFloat DD	01H DUP (?)
_MinFloat DD	01H DUP (?)
_TwoPi	DQ	01H DUP (?)
_MaxInt	DD	01H DUP (?)
	ALIGN	8

_HalfPi	DQ	01H DUP (?)
_MaxDouble DQ	01H DUP (?)
_QuarterPi DQ	01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_MaxInt$initializer$ DD FLAT:??__EMaxInt@@YAXXZ
_MaxDouble$initializer$ DD FLAT:??__EMaxDouble@@YAXXZ
_MinDouble$initializer$ DD FLAT:??__EMinDouble@@YAXXZ
_MaxFloat$initializer$ DD FLAT:??__EMaxFloat@@YAXXZ
_MinFloat$initializer$ DD FLAT:??__EMinFloat@@YAXXZ
_TwoPi$initializer$ DD FLAT:??__ETwoPi@@YAXXZ
_HalfPi$initializer$ DD FLAT:??__EHalfPi@@YAXXZ
_QuarterPi$initializer$ DD FLAT:??__EQuarterPi@@YAXXZ
CRT$XCU	ENDS
END
