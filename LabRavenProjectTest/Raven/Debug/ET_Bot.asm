; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Teaja\Documents\Artificial-Fun\LabRavenProjectTest\Raven\Bots\ETBot\ET_Bot.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_Pi	DQ	0400921f9f01b866er		; 3.14159
_pi	DQ	0400921f9f01b866er		; 3.14159
_colors	DD	0ffH
	DD	0ff0000H
	DD	0ff00H
	DD	00H
	DD	0c8c8ffH
	DD	0c8c8c8H
	DD	0ffffH
	DD	0aaffH
	DD	0aa00ffH
	DD	05a85H
	DD	0ffffffH
	DD	06400H
	DD	0ffff00H
	DD	0c8c8c8H
	DD	0e6e6ffH
$SG146951 DB	'Bot_GoalAppraisalUpdateFreq', 00H
_SmallestDelay DQ 03fd0000000000000r		; 0.25
_SEND_MSG_IMMEDIATELY DQ 00000000000000000r	; 0
$SG146946 DB	'Bot_WeaponSelectionFrequency', 00H
	ORG $+3
$SG146956 DB	'Bot_TargetingUpdateFreq', 00H
$SG146961 DB	'Bot_TriggerUpdateFreq', 00H
	ORG $+2
$SG146966 DB	'Bot_VisionUpdateFreq', 00H
	ORG $+3
$SG146979 DB	'Bot_AimPersistance', 00H
	ORG $+1
$SG146980 DB	'Bot_AimAccuracy', 00H
$SG146981 DB	'Bot_ReactionTime', 00H
	ORG $+3
$SG146986 DB	'Bot_MemorySpan', 00H
	ORG $+1
$SG147074 DB	'ET_Bot', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	??0Regulator@@QAE@N@Z				; Regulator::Regulator
PUBLIC	?GetDouble@Scriptor@@QAENPAD@Z			; Scriptor::GetDouble
PUBLIC	?SetEntityType@BaseGameEntity@@QAEXH@Z		; BaseGameEntity::SetEntityType
PUBLIC	??_7ET_Bot@@6B@					; ET_Bot::`vftable'
PUBLIC	??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z	; ET_Bot::ET_Bot
PUBLIC	??_R4ET_Bot@@6B@				; ET_Bot::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVET_Bot@@@8				; ET_Bot `RTTI Type Descriptor'
PUBLIC	??_R3ET_Bot@@8					; ET_Bot::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ET_Bot@@8					; ET_Bot::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ET_Bot@@8				; ET_Bot::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@AbstRaven_Bot@@8			; AbstRaven_Bot::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAbstRaven_Bot@@@8			; AbstRaven_Bot `RTTI Type Descriptor'
PUBLIC	??_R3AbstRaven_Bot@@8				; AbstRaven_Bot::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AbstRaven_Bot@@8				; AbstRaven_Bot::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MovingEntity@@8			; MovingEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVMovingEntity@@@8			; MovingEntity `RTTI Type Descriptor'
PUBLIC	??_R3MovingEntity@@8				; MovingEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MovingEntity@@8				; MovingEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BaseGameEntity@@8			; BaseGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBaseGameEntity@@@8			; BaseGameEntity `RTTI Type Descriptor'
PUBLIC	??_R3BaseGameEntity@@8				; BaseGameEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BaseGameEntity@@8				; BaseGameEntity::`RTTI Base Class Array'
PUBLIC	?HandleMessage@ET_Bot@@UAE_NABUTelegram@@@Z	; ET_Bot::HandleMessage
PUBLIC	?Write@AbstRaven_Bot@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; AbstRaven_Bot::Write
PUBLIC	?Read@AbstRaven_Bot@@UAEXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z ; AbstRaven_Bot::Read
PUBLIC	?DoUpdate@ET_Bot@@UAEXXZ			; ET_Bot::DoUpdate
PUBLIC	?SelectBodyPen@ET_Bot@@UAEXXZ			; ET_Bot::SelectBodyPen
PUBLIC	?SelectHeadPen@ET_Bot@@UAEXXZ			; ET_Bot::SelectHeadPen
PUBLIC	?GetName@ET_Bot@@UBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; ET_Bot::GetName
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1AbstRaven_Bot@@UAE@XZ:PROC			; AbstRaven_Bot::~AbstRaven_Bot
EXTRN	??0Raven_SensoryMemory@@QAE@PAVAbstRaven_Bot@@N@Z:PROC ; Raven_SensoryMemory::Raven_SensoryMemory
EXTRN	??0Raven_WeaponSystem@@QAE@PAVAbstRaven_Bot@@NNN@Z:PROC ; Raven_WeaponSystem::Raven_WeaponSystem
EXTRN	??0ET_TargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z:PROC ; ET_TargetingSystem::ET_TargetingSystem
EXTRN	??0ETGoal_Think@@QAE@PAVAbstRaven_Bot@@@Z:PROC	; ETGoal_Think::ETGoal_Think
EXTRN	?Instance@Raven_Scriptor@@SAPAV1@XZ:PROC	; Raven_Scriptor::Instance
EXTRN	??0ET_BotSteering@@QAE@PAVRaven_Game@@PAVAbstRaven_Bot@@@Z:PROC ; ET_BotSteering::ET_BotSteering
EXTRN	??0Raven_PathPlanner@@QAE@PAVAbstRaven_Bot@@@Z:PROC ; Raven_PathPlanner::Raven_PathPlanner
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?SetUpVertexBuffer@AbstRaven_Bot@@IAEXXZ:PROC	; AbstRaven_Bot::SetUpVertexBuffer
EXTRN	?Instance@ET_BotScriptor@@SAPAV1@XZ:PROC	; ET_BotScriptor::Instance
EXTRN	??0AbstRaven_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z:PROC ; AbstRaven_Bot::AbstRaven_Bot
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EET_Bot@@UAEPAXI@Z:PROC			; ET_Bot::`vector deleting destructor'
EXTRN	?Update@AbstRaven_Bot@@UAEXXZ:PROC		; AbstRaven_Bot::Update
EXTRN	?Render@AbstRaven_Bot@@UAEXXZ:PROC		; AbstRaven_Bot::Render
EXTRN	?RotateFacingTowardPosition@AbstRaven_Bot@@UAE_NUVector2D@@@Z:PROC ; AbstRaven_Bot::RotateFacingTowardPosition
EXTRN	?Spawn@AbstRaven_Bot@@UAEXUVector2D@@@Z:PROC	; AbstRaven_Bot::Spawn
EXTRN	?isReadyForTriggerUpdate@AbstRaven_Bot@@UBE_NXZ:PROC ; AbstRaven_Bot::isReadyForTriggerUpdate
EXTRN	?hasLOSto@AbstRaven_Bot@@UBE_NUVector2D@@@Z:PROC ; AbstRaven_Bot::hasLOSto
EXTRN	?canWalkTo@AbstRaven_Bot@@UBE_NUVector2D@@@Z:PROC ; AbstRaven_Bot::canWalkTo
EXTRN	?canWalkBetween@AbstRaven_Bot@@UBE_NUVector2D@@0@Z:PROC ; AbstRaven_Bot::canWalkBetween
EXTRN	?canStepLeft@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z:PROC ; AbstRaven_Bot::canStepLeft
EXTRN	?canStepRight@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z:PROC ; AbstRaven_Bot::canStepRight
EXTRN	?canStepForward@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z:PROC ; AbstRaven_Bot::canStepForward
EXTRN	?canStepBackward@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z:PROC ; AbstRaven_Bot::canStepBackward
;	COMDAT ??_R2BaseGameEntity@@8
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\etbot\et_bot.cpp
rdata$r	SEGMENT
??_R2BaseGameEntity@@8 DD FLAT:??_R1A@?0A@EA@BaseGameEntity@@8 ; BaseGameEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3BaseGameEntity@@8
rdata$r	SEGMENT
??_R3BaseGameEntity@@8 DD 00H				; BaseGameEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2BaseGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBaseGameEntity@@@8
_DATA	SEGMENT
??_R0?AVBaseGameEntity@@@8 DD FLAT:??_7type_info@@6B@	; BaseGameEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBaseGameEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@BaseGameEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BaseGameEntity@@8 DD FLAT:??_R0?AVBaseGameEntity@@@8 ; BaseGameEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BaseGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2MovingEntity@@8
rdata$r	SEGMENT
??_R2MovingEntity@@8 DD FLAT:??_R1A@?0A@EA@MovingEntity@@8 ; MovingEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BaseGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3MovingEntity@@8
rdata$r	SEGMENT
??_R3MovingEntity@@8 DD 00H				; MovingEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MovingEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMovingEntity@@@8
_DATA	SEGMENT
??_R0?AVMovingEntity@@@8 DD FLAT:??_7type_info@@6B@	; MovingEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMovingEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@MovingEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MovingEntity@@8 DD FLAT:??_R0?AVMovingEntity@@@8 ; MovingEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MovingEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2AbstRaven_Bot@@8
rdata$r	SEGMENT
??_R2AbstRaven_Bot@@8 DD FLAT:??_R1A@?0A@EA@AbstRaven_Bot@@8 ; AbstRaven_Bot::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MovingEntity@@8
	DD	FLAT:??_R1A@?0A@EA@BaseGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3AbstRaven_Bot@@8
rdata$r	SEGMENT
??_R3AbstRaven_Bot@@8 DD 00H				; AbstRaven_Bot::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2AbstRaven_Bot@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAbstRaven_Bot@@@8
_DATA	SEGMENT
??_R0?AVAbstRaven_Bot@@@8 DD FLAT:??_7type_info@@6B@	; AbstRaven_Bot `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAbstRaven_Bot@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@AbstRaven_Bot@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AbstRaven_Bot@@8 DD FLAT:??_R0?AVAbstRaven_Bot@@@8 ; AbstRaven_Bot::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AbstRaven_Bot@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ET_Bot@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ET_Bot@@8 DD FLAT:??_R0?AVET_Bot@@@8	; ET_Bot::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ET_Bot@@8
rdata$r	ENDS
;	COMDAT ??_R2ET_Bot@@8
rdata$r	SEGMENT
??_R2ET_Bot@@8 DD FLAT:??_R1A@?0A@EA@ET_Bot@@8		; ET_Bot::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AbstRaven_Bot@@8
	DD	FLAT:??_R1A@?0A@EA@MovingEntity@@8
	DD	FLAT:??_R1A@?0A@EA@BaseGameEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3ET_Bot@@8
rdata$r	SEGMENT
??_R3ET_Bot@@8 DD 00H					; ET_Bot::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ET_Bot@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVET_Bot@@@8
_DATA	SEGMENT
??_R0?AVET_Bot@@@8 DD FLAT:??_7type_info@@6B@		; ET_Bot `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVET_Bot@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ET_Bot@@6B@
rdata$r	SEGMENT
??_R4ET_Bot@@6B@ DD 00H					; ET_Bot::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVET_Bot@@@8
	DD	FLAT:??_R3ET_Bot@@8
rdata$r	ENDS
;	COMDAT ??_7ET_Bot@@6B@
CONST	SEGMENT
??_7ET_Bot@@6B@ DD FLAT:??_R4ET_Bot@@6B@		; ET_Bot::`vftable'
	DD	FLAT:??_EET_Bot@@UAEPAXI@Z
	DD	FLAT:?Update@AbstRaven_Bot@@UAEXXZ
	DD	FLAT:?Render@AbstRaven_Bot@@UAEXXZ
	DD	FLAT:?HandleMessage@ET_Bot@@UAE_NABUTelegram@@@Z
	DD	FLAT:?Write@AbstRaven_Bot@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?Read@AbstRaven_Bot@@UAEXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?DoUpdate@ET_Bot@@UAEXXZ
	DD	FLAT:?RotateFacingTowardPosition@AbstRaven_Bot@@UAE_NUVector2D@@@Z
	DD	FLAT:?Spawn@AbstRaven_Bot@@UAEXUVector2D@@@Z
	DD	FLAT:?isReadyForTriggerUpdate@AbstRaven_Bot@@UBE_NXZ
	DD	FLAT:?hasLOSto@AbstRaven_Bot@@UBE_NUVector2D@@@Z
	DD	FLAT:?canWalkTo@AbstRaven_Bot@@UBE_NUVector2D@@@Z
	DD	FLAT:?canWalkBetween@AbstRaven_Bot@@UBE_NUVector2D@@0@Z
	DD	FLAT:?canStepLeft@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z
	DD	FLAT:?canStepRight@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z
	DD	FLAT:?canStepForward@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z
	DD	FLAT:?canStepBackward@AbstRaven_Bot@@UBE_NAAUVector2D@@@Z
	DD	FLAT:?SelectBodyPen@ET_Bot@@UAEXXZ
	DD	FLAT:?SelectHeadPen@ET_Bot@@UAEXXZ
	DD	FLAT:?GetName@ET_Bot@@UBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$11
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv398 = -148						; size = 4
tv371 = -144						; size = 4
tv323 = -140						; size = 4
tv302 = -136						; size = 4
tv282 = -132						; size = 4
tv261 = -128						; size = 4
tv240 = -124						; size = 4
tv219 = -120						; size = 4
tv198 = -116						; size = 4
tv176 = -112						; size = 4
tv155 = -108						; size = 4
$T159491 = -104						; size = 4
$T159490 = -100						; size = 4
$T159487 = -96						; size = 4
$T159486 = -92						; size = 4
$T159483 = -88						; size = 4
$T159482 = -84						; size = 4
$T159479 = -80						; size = 4
$T159478 = -76						; size = 4
$T159475 = -72						; size = 4
$T159474 = -68						; size = 4
$T159471 = -64						; size = 4
$T159470 = -60						; size = 4
$T159467 = -56						; size = 4
$T159466 = -52						; size = 4
$T159463 = -48						; size = 4
$T159462 = -44						; size = 4
$T159459 = -40						; size = 4
$T159458 = -36						; size = 4
$T159455 = -32						; size = 4
$T159454 = -28						; size = 4
$T159451 = -24						; size = 4
$T159450 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_world$ = 8						; size = 4
_pos$ = 12						; size = 16
??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z PROC	; ET_Bot::ET_Bot
; _this$ = ecx

; 29   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 136				; 00000088H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-148]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _pos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _pos$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _world$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AbstRaven_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z ; AbstRaven_Bot::AbstRaven_Bot
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ET_Bot@@6B@

; 30   : 	m_pScript = ET_BotScriptor::Instance();

	call	?Instance@ET_BotScriptor@@SAPAV1@XZ	; ET_BotScriptor::Instance
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], eax

; 31   : 	
; 32   : 	SetEntityType(type_bot);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntityType@BaseGameEntity@@QAEXH@Z	; BaseGameEntity::SetEntityType

; 33   : 
; 34   :   SetUpVertexBuffer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetUpVertexBuffer@AbstRaven_Bot@@IAEXXZ ; AbstRaven_Bot::SetUpVertexBuffer

; 35   :   
; 36   :   //a bot starts off facing in the direction it is heading
; 37   :   m_vFacing = m_vHeading;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 80					; 00000050H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax

; 38   : 
; 39   :   //create the navigation module
; 40   :   m_pPathPlanner = new Raven_PathPlanner(this);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159451[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T159451[ebp], 0
	je	SHORT $LN3@ET_Bot
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T159451[ebp]
	call	??0Raven_PathPlanner@@QAE@PAVAbstRaven_Bot@@@Z ; Raven_PathPlanner::Raven_PathPlanner
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN4@ET_Bot
$LN3@ET_Bot:
	mov	DWORD PTR tv155[ebp], 0
$LN4@ET_Bot:
	mov	edx, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T159450[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T159450[ebp]
	mov	DWORD PTR [eax+172], ecx

; 41   : 
; 42   :   //create the steering behavior class
; 43   :   m_pSteering = new ET_BotSteering(world, this);

	push	192					; 000000c0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159455[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T159455[ebp], 0
	je	SHORT $LN5@ET_Bot
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _world$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T159455[ebp]
	call	??0ET_BotSteering@@QAE@PAVRaven_Game@@PAVAbstRaven_Bot@@@Z ; ET_BotSteering::ET_BotSteering
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN6@ET_Bot
$LN5@ET_Bot:
	mov	DWORD PTR tv176[ebp], 0
$LN6@ET_Bot:
	mov	ecx, DWORD PTR tv176[ebp]
	mov	DWORD PTR $T159454[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T159454[ebp]
	mov	DWORD PTR [edx+168], eax

; 44   : 
; 45   :   //create the regulators
; 46   :   m_pWeaponSelectionRegulator = new Regulator(m_pScript->GetDouble("Bot_WeaponSelectionFrequency"));

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159459[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T159459[ebp], 0
	je	SHORT $LN7@ET_Bot
	push	OFFSET $SG146946
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+296]
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T159459[ebp]
	call	??0Regulator@@QAE@N@Z			; Regulator::Regulator
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN8@ET_Bot
$LN7@ET_Bot:
	mov	DWORD PTR tv198[ebp], 0
$LN8@ET_Bot:
	mov	edx, DWORD PTR tv198[ebp]
	mov	DWORD PTR $T159458[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T159458[ebp]
	mov	DWORD PTR [eax+184], ecx

; 47   :   m_pGoalArbitrationRegulator =  new Regulator(m_pScript->GetDouble("Bot_GoalAppraisalUpdateFreq"));

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159463[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T159463[ebp], 0
	je	SHORT $LN9@ET_Bot
	push	OFFSET $SG146951
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+296]
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T159463[ebp]
	call	??0Regulator@@QAE@N@Z			; Regulator::Regulator
	mov	DWORD PTR tv219[ebp], eax
	jmp	SHORT $LN10@ET_Bot
$LN9@ET_Bot:
	mov	DWORD PTR tv219[ebp], 0
$LN10@ET_Bot:
	mov	eax, DWORD PTR tv219[ebp]
	mov	DWORD PTR $T159462[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T159462[ebp]
	mov	DWORD PTR [ecx+188], edx

; 48   :   m_pTargetSelectionRegulator = new Regulator(m_pScript->GetDouble("Bot_TargetingUpdateFreq"));

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159467[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T159467[ebp], 0
	je	SHORT $LN11@ET_Bot
	push	OFFSET $SG146956
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T159467[ebp]
	call	??0Regulator@@QAE@N@Z			; Regulator::Regulator
	mov	DWORD PTR tv240[ebp], eax
	jmp	SHORT $LN12@ET_Bot
$LN11@ET_Bot:
	mov	DWORD PTR tv240[ebp], 0
$LN12@ET_Bot:
	mov	ecx, DWORD PTR tv240[ebp]
	mov	DWORD PTR $T159466[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T159466[ebp]
	mov	DWORD PTR [edx+192], eax

; 49   :   m_pTriggerTestRegulator = new Regulator(script->GetDouble("Bot_TriggerUpdateFreq"));

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159471[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T159471[ebp], 0
	je	SHORT $LN13@ET_Bot
	push	OFFSET $SG146961
	call	?Instance@Raven_Scriptor@@SAPAV1@XZ	; Raven_Scriptor::Instance
	mov	ecx, eax
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T159471[ebp]
	call	??0Regulator@@QAE@N@Z			; Regulator::Regulator
	mov	DWORD PTR tv261[ebp], eax
	jmp	SHORT $LN14@ET_Bot
$LN13@ET_Bot:
	mov	DWORD PTR tv261[ebp], 0
$LN14@ET_Bot:
	mov	ecx, DWORD PTR tv261[ebp]
	mov	DWORD PTR $T159470[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T159470[ebp]
	mov	DWORD PTR [edx+196], eax

; 50   :   m_pVisionUpdateRegulator = new Regulator(m_pScript->GetDouble("Bot_VisionUpdateFreq"));

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159475[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T159475[ebp], 0
	je	SHORT $LN15@ET_Bot
	push	OFFSET $SG146966
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+296]
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR $T159475[ebp]
	call	??0Regulator@@QAE@N@Z			; Regulator::Regulator
	mov	DWORD PTR tv282[ebp], eax
	jmp	SHORT $LN16@ET_Bot
$LN15@ET_Bot:
	mov	DWORD PTR tv282[ebp], 0
$LN16@ET_Bot:
	mov	edx, DWORD PTR tv282[ebp]
	mov	DWORD PTR $T159474[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T159474[ebp]
	mov	DWORD PTR [eax+200], ecx

; 51   : 
; 52   :   //create the goal queue
; 53   :   m_pBrain = new ETGoal_Think(this);

	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159479[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T159479[ebp], 0
	je	SHORT $LN17@ET_Bot
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T159479[ebp]
	call	??0ETGoal_Think@@QAE@PAVAbstRaven_Bot@@@Z ; ETGoal_Think::ETGoal_Think
	mov	DWORD PTR tv302[ebp], eax
	jmp	SHORT $LN18@ET_Bot
$LN17@ET_Bot:
	mov	DWORD PTR tv302[ebp], 0
$LN18@ET_Bot:
	mov	eax, DWORD PTR tv302[ebp]
	mov	DWORD PTR $T159478[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T159478[ebp]
	mov	DWORD PTR [ecx+160], edx

; 54   : 
; 55   :   //create the targeting system
; 56   :   m_pTargSys = new ET_TargetingSystem(this);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159483[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T159483[ebp], 0
	je	SHORT $LN19@ET_Bot
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T159483[ebp]
	call	??0ET_TargetingSystem@@QAE@PAVAbstRaven_Bot@@@Z ; ET_TargetingSystem::ET_TargetingSystem
	mov	DWORD PTR tv323[ebp], eax
	jmp	SHORT $LN20@ET_Bot
$LN19@ET_Bot:
	mov	DWORD PTR tv323[ebp], 0
$LN20@ET_Bot:
	mov	ecx, DWORD PTR tv323[ebp]
	mov	DWORD PTR $T159482[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T159482[ebp]
	mov	DWORD PTR [edx+176], eax

; 57   : 
; 58   :   m_pWeaponSys = new Raven_WeaponSystem(this,
; 59   :                                         script->GetDouble("Bot_ReactionTime"),
; 60   :                                         script->GetDouble("Bot_AimAccuracy"),
; 61   :                                         m_pScript->GetDouble("Bot_AimPersistance"));

	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159487[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T159487[ebp], 0
	je	SHORT $LN21@ET_Bot
	push	OFFSET $SG146979
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+296]
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG146980
	call	?Instance@Raven_Scriptor@@SAPAV1@XZ	; Raven_Scriptor::Instance
	mov	ecx, eax
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG146981
	call	?Instance@Raven_Scriptor@@SAPAV1@XZ	; Raven_Scriptor::Instance
	mov	ecx, eax
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T159487[ebp]
	call	??0Raven_WeaponSystem@@QAE@PAVAbstRaven_Bot@@NNN@Z ; Raven_WeaponSystem::Raven_WeaponSystem
	mov	DWORD PTR tv371[ebp], eax
	jmp	SHORT $LN22@ET_Bot
$LN21@ET_Bot:
	mov	DWORD PTR tv371[ebp], 0
$LN22@ET_Bot:
	mov	eax, DWORD PTR tv371[ebp]
	mov	DWORD PTR $T159486[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T159486[ebp]
	mov	DWORD PTR [ecx+180], edx

; 62   : 
; 63   :   m_pSensoryMem = new Raven_SensoryMemory(this, m_pScript->GetDouble("Bot_MemorySpan"));

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T159491[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T159491[ebp], 0
	je	SHORT $LN23@ET_Bot
	push	OFFSET $SG146986
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	call	?GetDouble@Scriptor@@QAENPAD@Z		; Scriptor::GetDouble
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T159491[ebp]
	call	??0Raven_SensoryMemory@@QAE@PAVAbstRaven_Bot@@N@Z ; Raven_SensoryMemory::Raven_SensoryMemory
	mov	DWORD PTR tv398[ebp], eax
	jmp	SHORT $LN24@ET_Bot
$LN23@ET_Bot:
	mov	DWORD PTR tv398[ebp], 0
$LN24@ET_Bot:
	mov	edx, DWORD PTR tv398[ebp]
	mov	DWORD PTR $T159490[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T159490[ebp]
	mov	DWORD PTR [eax+164], ecx

; 64   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 148				; 00000094H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AbstRaven_Bot@@UAE@XZ		; AbstRaven_Bot::~AbstRaven_Bot
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$1:
	mov	eax, DWORD PTR $T159451[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$2:
	mov	eax, DWORD PTR $T159455[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$3:
	mov	eax, DWORD PTR $T159459[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$4:
	mov	eax, DWORD PTR $T159463[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$5:
	mov	eax, DWORD PTR $T159467[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$6:
	mov	eax, DWORD PTR $T159471[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$7:
	mov	eax, DWORD PTR $T159475[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$8:
	mov	eax, DWORD PTR $T159479[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$9:
	mov	eax, DWORD PTR $T159483[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$10:
	mov	eax, DWORD PTR $T159487[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z$11:
	mov	eax, DWORD PTR $T159491[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ET_Bot@@QAE@PAVRaven_Game@@UVector2D@@@Z ENDP	; ET_Bot::ET_Bot
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\game\basegameentity.h
;	COMDAT ?SetEntityType@BaseGameEntity@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_new_type$ = 8						; size = 4
?SetEntityType@BaseGameEntity@@QAEXH@Z PROC		; BaseGameEntity::SetEntityType, COMDAT
; _this$ = ecx

; 105  :   void         SetEntityType(int new_type){m_iType = new_type;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_type$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetEntityType@BaseGameEntity@@QAEXH@Z ENDP		; BaseGameEntity::SetEntityType
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\abstraven_bot.h
_TEXT	ENDS
;	COMDAT ?Write@AbstRaven_Bot@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_os$ = 8						; size = 4
?Write@AbstRaven_Bot@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; AbstRaven_Bot::Write, COMDAT
; _this$ = ecx

; 143  :   void         Write(std::ostream&  os)const{/*not implemented*/}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Write@AbstRaven_Bot@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; AbstRaven_Bot::Write
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Read@AbstRaven_Bot@@UAEXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_is$ = 8						; size = 4
?Read@AbstRaven_Bot@@UAEXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z PROC ; AbstRaven_Bot::Read, COMDAT
; _this$ = ecx

; 144  :   void         Read (std::ifstream& is){/*not implemented*/}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Read@AbstRaven_Bot@@UAEXAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@Z ENDP ; AbstRaven_Bot::Read
_TEXT	ENDS
PUBLIC	??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z	; PopLuaNumber<double>
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\script\scriptor.h
;	COMDAT ?GetDouble@Scriptor@@QAENPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_VariableName$ = 8					; size = 4
?GetDouble@Scriptor@@QAENPAD@Z PROC			; Scriptor::GetDouble, COMDAT
; _this$ = ecx

; 61   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 62   :     return PopLuaNumber<double>(m_pLuaState, VariableName);

	mov	eax, DWORD PTR _VariableName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z ; PopLuaNumber<double>
	add	esp, 8

; 63   :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetDouble@Scriptor@@QAENPAD@Z ENDP			; Scriptor::GetDouble
_TEXT	ENDS
PUBLIC	__real@bff0000000000000
PUBLIC	?isEqual@@YA_NNN@Z				; isEqual
PUBLIC	__real@0000000000000000
PUBLIC	__real@408f400000000000
PUBLIC	?RandFloat@@YANXZ				; RandFloat
EXTRN	__imp__timeGetTime@0:PROC
;	COMDAT __real@bff0000000000000
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\time\regulator.h
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0Regulator@@QAE@N@Z
_TEXT	SEGMENT
tv93 = -36						; size = 8
tv91 = -28						; size = 4
tv88 = -22						; size = 2
tv149 = -20						; size = 8
tv83 = -12						; size = 8
_this$ = -4						; size = 4
_NumUpdatesPerSecondRqd$ = 8				; size = 8
??0Regulator@@QAE@N@Z PROC				; Regulator::Regulator, COMDAT
; _this$ = ecx

; 37   :   Regulator(double NumUpdatesPerSecondRqd)

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 38   :   {
; 39   :     m_dwNextUpdateTime = (DWORD)(timeGetTime()+RandFloat()*1000);

	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	mov	DWORD PTR tv83[ebp+4], 0
	fild	QWORD PTR tv83[ebp]
	fstp	QWORD PTR tv149[ebp]
	call	?RandFloat@@YANXZ			; RandFloat
	fmul	QWORD PTR __real@408f400000000000
	fadd	QWORD PTR tv149[ebp]
	fnstcw	WORD PTR tv88[ebp]
	movzx	eax, WORD PTR tv88[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv91[ebp], eax
	fldcw	WORD PTR tv91[ebp]
	fistp	QWORD PTR tv93[ebp]
	fldcw	WORD PTR tv88[ebp]
	mov	eax, DWORD PTR tv93[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 
; 41   :     if (NumUpdatesPerSecondRqd > 0)

	fldz
	fcomp	QWORD PTR _NumUpdatesPerSecondRqd$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN5@Regulator

; 42   :     {
; 43   :       m_dUpdatePeriod = 1000.0 / NumUpdatesPerSecondRqd; 

	fld	QWORD PTR __real@408f400000000000
	fdiv	QWORD PTR _NumUpdatesPerSecondRqd$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	QWORD PTR [edx]
	jmp	SHORT $LN1@Regulator
$LN5@Regulator:

; 44   :     }
; 45   : 
; 46   :     else if (isEqual(0.0, NumUpdatesPerSecondRqd))

	sub	esp, 8
	fld	QWORD PTR _NumUpdatesPerSecondRqd$[ebp]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	call	?isEqual@@YA_NNN@Z			; isEqual
	add	esp, 16					; 00000010H
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Regulator

; 47   :     {
; 48   :       m_dUpdatePeriod = 0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [ecx]
	jmp	SHORT $LN1@Regulator
$LN3@Regulator:

; 49   :     }
; 50   : 
; 51   :     else if (NumUpdatesPerSecondRqd < 0)

	fldz
	fcomp	QWORD PTR _NumUpdatesPerSecondRqd$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@Regulator

; 52   :     {
; 53   :       m_dUpdatePeriod = -1;

	mov	edx, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR [edx]
$LN1@Regulator:

; 54   :     }
; 55   :   }

	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0Regulator@@QAE@N@Z ENDP				; Regulator::Regulator
_TEXT	ENDS
PUBLIC	__real@40e0000000000000
EXTRN	_rand:PROC
;	COMDAT __real@40e0000000000000
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
CONST	SEGMENT
__real@40e0000000000000 DQ 040e0000000000000r	; 32768
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?RandFloat@@YANXZ
_TEXT	SEGMENT
tv69 = -4						; size = 4
?RandFloat@@YANXZ PROC					; RandFloat, COMDAT

; 87   : inline double RandFloat()      {return ((rand())/(RAND_MAX+1.0));}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	call	_rand
	mov	DWORD PTR tv69[ebp], eax
	fild	DWORD PTR tv69[ebp]
	fdiv	QWORD PTR __real@40e0000000000000
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RandFloat@@YANXZ ENDP					; RandFloat
_TEXT	ENDS
PUBLIC	__real@3d719799812dea11
EXTRN	_fabs:PROC
;	COMDAT __real@3d719799812dea11
CONST	SEGMENT
__real@3d719799812dea11 DQ 03d719799812dea11r	; 1e-012
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?isEqual@@YA_NNN@Z
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?isEqual@@YA_NNN@Z PROC					; isEqual, COMDAT

; 232  : {

	push	ebp
	mov	ebp, esp

; 233  :   if (fabs(a-b) < 1E-12)

	fld	QWORD PTR _a$[ebp]
	fsub	QWORD PTR _b$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_fabs
	add	esp, 8
	fcomp	QWORD PTR __real@3d719799812dea11
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN1@isEqual

; 234  :   {
; 235  :     return true;

	mov	al, 1
	jmp	SHORT $LN2@isEqual
$LN1@isEqual:

; 236  :   }
; 237  : 
; 238  :   return false;

	xor	al, al
$LN2@isEqual:

; 239  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?isEqual@@YA_NNN@Z ENDP					; isEqual
_TEXT	ENDS
PUBLIC	??1ET_Bot@@UAE@XZ				; ET_Bot::~ET_Bot
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GET_Bot@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GET_Bot@@UAEPAXI@Z PROC				; ET_Bot::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ET_Bot@@UAE@XZ			; ET_Bot::~ET_Bot
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GET_Bot@@UAEPAXI@Z ENDP				; ET_Bot::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GRaven_SensoryMemory@@QAEPAXI@Z		; Raven_SensoryMemory::`scalar deleting destructor'
PUBLIC	??_GAbstWeaponSystem@@QAEPAXI@Z			; AbstWeaponSystem::`scalar deleting destructor'
PUBLIC	??_GRaven_PathPlanner@@QAEPAXI@Z		; Raven_PathPlanner::`scalar deleting destructor'
xdata$x	SEGMENT
__unwindtable$??1ET_Bot@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ET_Bot@@UAE@XZ$0
__ehfuncinfo$??1ET_Bot@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ET_Bot@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\etbot\et_bot.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv199 = -100						; size = 4
tv189 = -96						; size = 4
tv143 = -92						; size = 4
tv131 = -88						; size = 4
tv89 = -84						; size = 4
$T159573 = -80						; size = 4
$T159572 = -76						; size = 4
$T159569 = -72						; size = 4
$T159568 = -68						; size = 4
$T159567 = -64						; size = 4
$T159566 = -60						; size = 4
$T159565 = -56						; size = 4
$T159564 = -52						; size = 4
$T159563 = -48						; size = 4
$T159562 = -44						; size = 4
$T159559 = -40						; size = 4
$T159558 = -36						; size = 4
$T159555 = -32						; size = 4
$T159554 = -28						; size = 4
$T159551 = -24						; size = 4
$T159550 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ET_Bot@@UAE@XZ PROC					; ET_Bot::~ET_Bot
; _this$ = ecx

; 69   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ET_Bot@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-100]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ET_Bot@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 70   :   #ifdef SHOW_NAVINFO
; 71   :     debug_con << "deleting ET bot (id = " << ID() << ")" << "";
; 72   :   #endif 
; 73   :   
; 74   :   delete m_pBrain;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	mov	DWORD PTR $T159551[ebp], edx
	mov	eax, DWORD PTR $T159551[ebp]
	mov	DWORD PTR $T159550[ebp], eax
	cmp	DWORD PTR $T159550[ebp], 0
	je	SHORT $LN3@ET_Bot@2
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T159550[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T159550[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN4@ET_Bot@2
$LN3@ET_Bot@2:
	mov	DWORD PTR tv89[ebp], 0
$LN4@ET_Bot@2:

; 75   :   delete m_pPathPlanner;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	DWORD PTR $T159555[ebp], edx
	mov	eax, DWORD PTR $T159555[ebp]
	mov	DWORD PTR $T159554[ebp], eax
	cmp	DWORD PTR $T159554[ebp], 0
	je	SHORT $LN5@ET_Bot@2
	push	1
	mov	ecx, DWORD PTR $T159554[ebp]
	call	??_GRaven_PathPlanner@@QAEPAXI@Z
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN6@ET_Bot@2
$LN5@ET_Bot@2:
	mov	DWORD PTR tv131[ebp], 0
$LN6@ET_Bot@2:

; 76   :   delete m_pSteering;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	DWORD PTR $T159559[ebp], edx
	mov	eax, DWORD PTR $T159559[ebp]
	mov	DWORD PTR $T159558[ebp], eax
	cmp	DWORD PTR $T159558[ebp], 0
	je	SHORT $LN7@ET_Bot@2
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T159558[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T159558[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN8@ET_Bot@2
$LN7@ET_Bot@2:
	mov	DWORD PTR tv143[ebp], 0
$LN8@ET_Bot@2:

; 77   :   delete m_pWeaponSelectionRegulator;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	DWORD PTR $T159562[ebp], edx
	mov	eax, DWORD PTR $T159562[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 78   :   delete m_pTargSys;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	mov	DWORD PTR $T159563[ebp], edx
	mov	eax, DWORD PTR $T159563[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 79   :   delete m_pGoalArbitrationRegulator;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR $T159564[ebp], edx
	mov	eax, DWORD PTR $T159564[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 80   :   delete m_pTargetSelectionRegulator;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR $T159565[ebp], edx
	mov	eax, DWORD PTR $T159565[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 81   :   delete m_pTriggerTestRegulator;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+196]
	mov	DWORD PTR $T159566[ebp], edx
	mov	eax, DWORD PTR $T159566[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 82   :   delete m_pVisionUpdateRegulator;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+200]
	mov	DWORD PTR $T159567[ebp], edx
	mov	eax, DWORD PTR $T159567[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 83   :   delete m_pWeaponSys;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+180]
	mov	DWORD PTR $T159569[ebp], edx
	mov	eax, DWORD PTR $T159569[ebp]
	mov	DWORD PTR $T159568[ebp], eax
	cmp	DWORD PTR $T159568[ebp], 0
	je	SHORT $LN9@ET_Bot@2
	push	1
	mov	ecx, DWORD PTR $T159568[ebp]
	call	??_GAbstWeaponSystem@@QAEPAXI@Z
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN10@ET_Bot@2
$LN9@ET_Bot@2:
	mov	DWORD PTR tv189[ebp], 0
$LN10@ET_Bot@2:

; 84   :   delete m_pSensoryMem;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR $T159573[ebp], edx
	mov	eax, DWORD PTR $T159573[ebp]
	mov	DWORD PTR $T159572[ebp], eax
	cmp	DWORD PTR $T159572[ebp], 0
	je	SHORT $LN11@ET_Bot@2
	push	1
	mov	ecx, DWORD PTR $T159572[ebp]
	call	??_GRaven_SensoryMemory@@QAEPAXI@Z
	mov	DWORD PTR tv199[ebp], eax
	jmp	SHORT $LN1@ET_Bot@2
$LN11@ET_Bot@2:
	mov	DWORD PTR tv199[ebp], 0
$LN1@ET_Bot@2:

; 85   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AbstRaven_Bot@@UAE@XZ		; AbstRaven_Bot::~AbstRaven_Bot
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 100				; 00000064H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1ET_Bot@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AbstRaven_Bot@@UAE@XZ		; AbstRaven_Bot::~AbstRaven_Bot
__ehhandler$??1ET_Bot@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ET_Bot@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ET_Bot@@UAE@XZ ENDP					; ET_Bot::~ET_Bot
EXTRN	??1Raven_PathPlanner@@QAE@XZ:PROC		; Raven_PathPlanner::~Raven_PathPlanner
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRaven_PathPlanner@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRaven_PathPlanner@@QAEPAXI@Z PROC			; Raven_PathPlanner::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Raven_PathPlanner@@QAE@XZ		; Raven_PathPlanner::~Raven_PathPlanner
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRaven_PathPlanner@@QAEPAXI@Z ENDP			; Raven_PathPlanner::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1AbstWeaponSystem@@QAE@XZ:PROC		; AbstWeaponSystem::~AbstWeaponSystem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GAbstWeaponSystem@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GAbstWeaponSystem@@QAEPAXI@Z PROC			; AbstWeaponSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AbstWeaponSystem@@QAE@XZ		; AbstWeaponSystem::~AbstWeaponSystem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAbstWeaponSystem@@QAEPAXI@Z ENDP			; AbstWeaponSystem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1Raven_SensoryMemory@@QAE@XZ			; Raven_SensoryMemory::~Raven_SensoryMemory
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRaven_SensoryMemory@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRaven_SensoryMemory@@QAEPAXI@Z PROC			; Raven_SensoryMemory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Raven_SensoryMemory@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRaven_SensoryMemory@@QAEPAXI@Z ENDP			; Raven_SensoryMemory::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::~map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1Raven_SensoryMemory@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Raven_SensoryMemory@@QAE@XZ PROC			; Raven_SensoryMemory::~Raven_SensoryMemory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Raven_SensoryMemory@@QAE@XZ ENDP			; Raven_SensoryMemory::~Raven_SensoryMemory
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ PROC ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::~map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::~map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >
_TEXT	ENDS
PUBLIC	?isReady@Regulator@@QAE_NXZ			; Regulator::isReady
PUBLIC	?isPossessed@AbstRaven_Bot@@QBE_NXZ		; AbstRaven_Bot::isPossessed
EXTRN	?UpdateVision@Raven_SensoryMemory@@QAEXXZ:PROC	; Raven_SensoryMemory::UpdateVision
EXTRN	?UpdateMovement@AbstRaven_Bot@@IAEXXZ:PROC	; AbstRaven_Bot::UpdateMovement
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoUpdate@ET_Bot@@UAEXXZ PROC				; ET_Bot::DoUpdate
; _this$ = ecx

; 90   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 91   :   //process the currently active goal. Note this is required even if the bot
; 92   :   //is under user control. This is because a goal is created whenever a user 
; 93   :   //clicks on an area of the map that necessitates a path planning request.
; 94   :   m_pBrain->Process();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 95   :   
; 96   :   //Calculate the steering force and update the bot's velocity and position
; 97   :   UpdateMovement();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateMovement@AbstRaven_Bot@@IAEXXZ	; AbstRaven_Bot::UpdateMovement

; 98   : 
; 99   :   //if the bot is under AI control but not scripted
; 100  :   if (!isPossessed())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isPossessed@AbstRaven_Bot@@QBE_NXZ	; AbstRaven_Bot::isPossessed
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN6@DoUpdate

; 101  :   {           
; 102  :     //examine all the opponents in the bots sensory memory and select one
; 103  :     //to be the current target
; 104  :     if (m_pTargetSelectionRegulator->isReady())

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+192]
	call	?isReady@Regulator@@QAE_NXZ		; Regulator::isReady
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@DoUpdate

; 105  :     {      
; 106  :       m_pTargSys->Update();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@DoUpdate:

; 107  :     }
; 108  : 
; 109  :     //appraise and arbitrate between all possible high level goals
; 110  :     if (m_pGoalArbitrationRegulator->isReady())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+188]
	call	?isReady@Regulator@@QAE_NXZ		; Regulator::isReady
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@DoUpdate

; 111  :     {
; 112  :        m_pBrain->Arbitrate(); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DoUpdate:

; 113  :     }
; 114  : 
; 115  :     //update the sensory memory with any visual stimulus
; 116  :     if (m_pVisionUpdateRegulator->isReady())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+200]
	call	?isReady@Regulator@@QAE_NXZ		; Regulator::isReady
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@DoUpdate

; 117  :     {
; 118  :       m_pSensoryMem->UpdateVision();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?UpdateVision@Raven_SensoryMemory@@QAEXXZ ; Raven_SensoryMemory::UpdateVision
$LN2@DoUpdate:

; 119  :     }
; 120  :   
; 121  :     //select the appropriate weapon to use from the weapons currently in
; 122  :     //the inventory
; 123  :     if (m_pWeaponSelectionRegulator->isReady())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	?isReady@Regulator@@QAE_NXZ		; Regulator::isReady
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@DoUpdate

; 124  :     {       
; 125  :       m_pWeaponSys->SelectWeapon();       

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+180]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DoUpdate:

; 126  :     }
; 127  : 
; 128  :     //this method aims the bot's current weapon at the current target
; 129  :     //and takes a shot if a shot is possible
; 130  :     m_pWeaponSys->TakeAimAndShoot();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+180]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@DoUpdate:

; 131  :   }
; 132  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoUpdate@ET_Bot@@UAEXXZ ENDP				; ET_Bot::DoUpdate
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\abstraven_bot.h
_TEXT	ENDS
;	COMDAT ?isPossessed@AbstRaven_Bot@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isPossessed@AbstRaven_Bot@@QBE_NXZ PROC		; AbstRaven_Bot::isPossessed, COMDAT
; _this$ = ecx

; 164  :   bool          isPossessed()const{return m_bPossessed;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+253]
	mov	esp, ebp
	pop	ebp
	ret	0
?isPossessed@AbstRaven_Bot@@QBE_NXZ ENDP		; AbstRaven_Bot::isPossessed
_TEXT	ENDS
PUBLIC	?RandInRange@@YANNN@Z				; RandInRange
PUBLIC	?UpdatePeriodVariator@?5??isReady@Regulator@@QAE_NXZ@4NB ; `Regulator::isReady'::`6'::UpdatePeriodVariator
;	COMDAT ?UpdatePeriodVariator@?5??isReady@Regulator@@QAE_NXZ@4NB
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\time\regulator.h
CONST	SEGMENT
?UpdatePeriodVariator@?5??isReady@Regulator@@QAE_NXZ@4NB DQ 04024000000000000r ; 10 ; `Regulator::isReady'::`6'::UpdatePeriodVariator
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?isReady@Regulator@@QAE_NXZ
_TEXT	SEGMENT
tv150 = -40						; size = 8
tv148 = -32						; size = 4
tv145 = -26						; size = 2
tv156 = -24						; size = 8
tv134 = -16						; size = 8
_CurrentTime$ = -8					; size = 4
_this$ = -4						; size = 4
?isReady@Regulator@@QAE_NXZ PROC			; Regulator::isReady, COMDAT
; _this$ = ecx

; 60   :   {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   :     //if a regulator is instantiated with a zero freq then it goes into
; 62   :     //stealth mode (doesn't regulate)
; 63   :     if (isEqual(0.0, m_dUpdatePeriod)) return true;

	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax]
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fldz
	fstp	QWORD PTR [esp]
	call	?isEqual@@YA_NNN@Z			; isEqual
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@isReady
	mov	al, 1
	jmp	$LN4@isReady
$LN3@isReady:

; 64   : 
; 65   :     //if the regulator is instantiated with a negative freq then it will
; 66   :     //never allow the code to flow
; 67   :     if (m_dUpdatePeriod < 0) return false;

	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fcomp	QWORD PTR [edx]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@isReady
	xor	al, al
	jmp	$LN4@isReady
$LN2@isReady:

; 68   : 
; 69   :     DWORD CurrentTime = timeGetTime();

	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _CurrentTime$[ebp], eax

; 70   : 
; 71   :     //the number of milliseconds the update period can vary per required
; 72   :     //update-step. This is here to make sure any multiple clients of this class
; 73   :     //have their updates spread evenly
; 74   :     static const double UpdatePeriodVariator = 10.0;
; 75   : 
; 76   :     if (CurrentTime >= m_dwNextUpdateTime)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CurrentTime$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jb	SHORT $LN1@isReady

; 77   :     {
; 78   :       m_dwNextUpdateTime = (DWORD)(CurrentTime + m_dUpdatePeriod + RandInRange(-UpdatePeriodVariator, UpdatePeriodVariator));

	mov	edx, DWORD PTR _CurrentTime$[ebp]
	mov	DWORD PTR tv134[ebp], edx
	mov	DWORD PTR tv134[ebp+4], 0
	fild	QWORD PTR tv134[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fadd	QWORD PTR [eax]
	sub	esp, 8
	fld	QWORD PTR ?UpdatePeriodVariator@?5??isReady@Regulator@@QAE_NXZ@4NB ; `Regulator::isReady'::`6'::UpdatePeriodVariator
	fstp	QWORD PTR [esp]
	fld	QWORD PTR ?UpdatePeriodVariator@?5??isReady@Regulator@@QAE_NXZ@4NB ; `Regulator::isReady'::`6'::UpdatePeriodVariator
	fchs
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fstp	QWORD PTR tv156[ebp]
	call	?RandInRange@@YANNN@Z			; RandInRange
	add	esp, 16					; 00000010H
	fadd	QWORD PTR tv156[ebp]
	fnstcw	WORD PTR tv145[ebp]
	movzx	eax, WORD PTR tv145[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv148[ebp], eax
	fldcw	WORD PTR tv148[ebp]
	fistp	QWORD PTR tv150[ebp]
	fldcw	WORD PTR tv145[ebp]
	mov	ecx, DWORD PTR tv150[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 79   : 
; 80   :       return true;

	mov	al, 1
	jmp	SHORT $LN4@isReady
$LN1@isReady:

; 81   :     }
; 82   : 
; 83   :     return false;

	xor	al, al
$LN4@isReady:

; 84   :   }

	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isReady@Regulator@@QAE_NXZ ENDP			; Regulator::isReady
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
_TEXT	ENDS
;	COMDAT ?RandInRange@@YANNN@Z
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
?RandInRange@@YANNN@Z PROC				; RandInRange, COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp

; 91   :   return x + RandFloat()*(y-x);

	call	?RandFloat@@YANXZ			; RandFloat
	fld	QWORD PTR _y$[ebp]
	fsub	QWORD PTR _x$[ebp]
	fmulp	ST(1), ST(0)
	fadd	QWORD PTR _x$[ebp]

; 92   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?RandInRange@@YANNN@Z ENDP				; RandInRange
_TEXT	ENDS
PUBLIC	?GetTarget@AbstTargetingSystem@@QBEPAVAbstRaven_Bot@@XZ ; AbstTargetingSystem::GetTarget
PUBLIC	?GetTargetSys@AbstRaven_Bot@@QAEQAVAbstTargetingSystem@@XZ ; AbstRaven_Bot::GetTargetSys
PUBLIC	?ClearTarget@AbstTargetingSystem@@QAEXXZ	; AbstTargetingSystem::ClearTarget
PUBLIC	?IncrementScore@AbstRaven_Bot@@QAEXXZ		; AbstRaven_Bot::IncrementScore
PUBLIC	?ID@BaseGameEntity@@QBEHXZ			; BaseGameEntity::ID
PUBLIC	?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ; AbstRaven_Bot::GetSensoryMem
PUBLIC	??$DereferenceToType@H@@YAHPAX@Z		; DereferenceToType<int>
PUBLIC	?isSpawning@AbstRaven_Bot@@QBE_NXZ		; AbstRaven_Bot::isSpawning
PUBLIC	?isDead@AbstRaven_Bot@@QBE_NXZ			; AbstRaven_Bot::isDead
PUBLIC	?GetBrain@AbstRaven_Bot@@QAEQAVGoal_Think@@XZ	; AbstRaven_Bot::GetBrain
EXTRN	?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z:PROC ; Raven_SensoryMemory::RemoveBotFromMemory
EXTRN	?UpdateWithSoundSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z:PROC ; Raven_SensoryMemory::UpdateWithSoundSource
EXTRN	?DispatchMsg@MessageDispatcher@@QAEXNHHHPAX@Z:PROC ; MessageDispatcher::DispatchMsg
EXTRN	?Instance@MessageDispatcher@@SAPAV1@XZ:PROC	; MessageDispatcher::Instance
EXTRN	?UpdateWithDamageSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@H@Z:PROC ; Raven_SensoryMemory::UpdateWithDamageSource
EXTRN	?GetEntityFromID@EntityManager@@QBEPAVBaseGameEntity@@H@Z:PROC ; EntityManager::GetEntityFromID
EXTRN	?Instance@EntityManager@@SAPAV1@XZ:PROC		; EntityManager::Instance
EXTRN	?ReduceHealth@AbstRaven_Bot@@QAEXI@Z:PROC	; AbstRaven_Bot::ReduceHealth
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\etbot\et_bot.cpp
_TEXT	SEGMENT
tv83 = -24						; size = 4
tv75 = -20						; size = 4
_pRemovedBot$147060 = -16				; size = 4
_pShooter$147053 = -12					; size = 4
_damage$ = -8						; size = 4
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
?HandleMessage@ET_Bot@@UAE_NABUTelegram@@@Z PROC	; ET_Bot::HandleMessage
; _this$ = ecx

; 139  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 	int damage = 0;

	mov	DWORD PTR _damage$[ebp], 0

; 141  :   //first see if the current goal accepts the message
; 142  :   if (GetBrain()->HandleMessage(msg)) return true;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBrain@AbstRaven_Bot@@QAEQAVGoal_Think@@XZ ; AbstRaven_Bot::GetBrain
	mov	DWORD PTR tv75[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@HandleMess
	mov	al, 1
	jmp	$LN11@HandleMess
$LN13@HandleMess:

; 143  :  
; 144  :   //handle any messages not handles by the goals
; 145  :   switch(msg.Msg)

	mov	edx, DWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR tv83[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv83[ebp], ecx
	cmp	DWORD PTR tv83[ebp], 5
	ja	$LN1@HandleMess
	mov	edx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN16@HandleMess[edx*4]
$LN10@HandleMess:

; 146  :   {
; 147  :   case Msg_TakeThatMF:
; 148  : 
; 149  :     //just return if already dead or spawning
; 150  :     if (isDead() || isSpawning()) return true;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDead@AbstRaven_Bot@@QBE_NXZ		; AbstRaven_Bot::isDead
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@HandleMess
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isSpawning@AbstRaven_Bot@@QBE_NXZ	; AbstRaven_Bot::isSpawning
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@HandleMess
$LN8@HandleMess:
	mov	al, 1
	jmp	$LN11@HandleMess

; 151  : 	else

	jmp	$LN6@HandleMess
$LN9@HandleMess:

; 152  : 	{
; 153  : 
; 154  : 		damage = DereferenceToType<int>(msg.ExtraInfo);

	mov	edx, DWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	??$DereferenceToType@H@@YAHPAX@Z	; DereferenceToType<int>
	add	esp, 4
	mov	DWORD PTR _damage$[ebp], eax

; 155  : 
; 156  : 		//the extra info field of the telegram carries the amount of damage
; 157  : 		ReduceHealth(damage);

	mov	ecx, DWORD PTR _damage$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReduceHealth@AbstRaven_Bot@@QAEXI@Z	; AbstRaven_Bot::ReduceHealth

; 158  : 
; 159  : 		AbstRaven_Bot* pShooter = (AbstRaven_Bot*)EntityManager::Instance()->GetEntityFromID(msg.Sender);

	mov	edx, DWORD PTR _msg$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?Instance@EntityManager@@SAPAV1@XZ	; EntityManager::Instance
	mov	ecx, eax
	call	?GetEntityFromID@EntityManager@@QBEPAVBaseGameEntity@@H@Z ; EntityManager::GetEntityFromID
	mov	DWORD PTR _pShooter$147053[ebp], eax

; 160  : 		GetSensoryMem()->UpdateWithDamageSource(pShooter, damage);	

	mov	ecx, DWORD PTR _damage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pShooter$147053[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ; AbstRaven_Bot::GetSensoryMem
	mov	ecx, eax
	call	?UpdateWithDamageSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@H@Z ; Raven_SensoryMemory::UpdateWithDamageSource

; 161  : 
; 162  : 		//if this bot is now dead let the shooter know
; 163  : 		if (isDead())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isDead@AbstRaven_Bot@@QBE_NXZ		; AbstRaven_Bot::isDead
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@HandleMess

; 164  : 		{
; 165  : 			Dispatcher->DispatchMsg(SEND_MSG_IMMEDIATELY,
; 166  :                               ID(),
; 167  :                               msg.Sender,
; 168  :                               Msg_YouGotMeYouSOB,
; 169  :                               NO_ADDITIONAL_INFO);

	push	0
	push	4
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ID@BaseGameEntity@@QBEHXZ		; BaseGameEntity::ID
	push	eax
	sub	esp, 8
	fld	QWORD PTR _SEND_MSG_IMMEDIATELY
	fstp	QWORD PTR [esp]
	call	?Instance@MessageDispatcher@@SAPAV1@XZ	; MessageDispatcher::Instance
	mov	ecx, eax
	call	?DispatchMsg@MessageDispatcher@@QAEXNHHHPAX@Z ; MessageDispatcher::DispatchMsg
$LN6@HandleMess:

; 170  : 		}
; 171  : 	}
; 172  : 
; 173  :     return true;

	mov	al, 1
	jmp	SHORT $LN11@HandleMess
$LN5@HandleMess:

; 174  : 
; 175  :   case Msg_YouGotMeYouSOB:
; 176  :     
; 177  :     IncrementScore();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementScore@AbstRaven_Bot@@QAEXXZ	; AbstRaven_Bot::IncrementScore

; 178  :     
; 179  :     //the bot this bot has just killed should be removed as the target
; 180  :     m_pTargSys->ClearTarget();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	call	?ClearTarget@AbstTargetingSystem@@QAEXXZ ; AbstTargetingSystem::ClearTarget

; 181  : 
; 182  :     return true;

	mov	al, 1
	jmp	SHORT $LN11@HandleMess
$LN4@HandleMess:

; 183  : 
; 184  :   case Msg_GunshotSound:
; 185  : 
; 186  :     //add the source of this sound to the bot's percepts
; 187  :     GetSensoryMem()->UpdateWithSoundSource((AbstRaven_Bot*)msg.ExtraInfo);

	mov	ecx, DWORD PTR _msg$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ; AbstRaven_Bot::GetSensoryMem
	mov	ecx, eax
	call	?UpdateWithSoundSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::UpdateWithSoundSource

; 188  : 
; 189  :     return true;

	mov	al, 1
	jmp	SHORT $LN11@HandleMess
$LN3@HandleMess:

; 190  : 
; 191  :   case Msg_UserHasRemovedBot:
; 192  :     {
; 193  : 
; 194  :       AbstRaven_Bot* pRemovedBot = (AbstRaven_Bot*)msg.ExtraInfo;

	mov	eax, DWORD PTR _msg$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pRemovedBot$147060[ebp], ecx

; 195  : 
; 196  :       GetSensoryMem()->RemoveBotFromMemory(pRemovedBot);

	mov	edx, DWORD PTR _pRemovedBot$147060[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ; AbstRaven_Bot::GetSensoryMem
	mov	ecx, eax
	call	?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::RemoveBotFromMemory

; 197  : 
; 198  :       //if the removed bot is the target, make sure the target is cleared
; 199  :       if (pRemovedBot == GetTargetSys()->GetTarget())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTargetSys@AbstRaven_Bot@@QAEQAVAbstTargetingSystem@@XZ ; AbstRaven_Bot::GetTargetSys
	mov	ecx, eax
	call	?GetTarget@AbstTargetingSystem@@QBEPAVAbstRaven_Bot@@XZ ; AbstTargetingSystem::GetTarget
	cmp	DWORD PTR _pRemovedBot$147060[ebp], eax
	jne	SHORT $LN2@HandleMess

; 200  :       {
; 201  :         GetTargetSys()->ClearTarget();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTargetSys@AbstRaven_Bot@@QAEQAVAbstTargetingSystem@@XZ ; AbstRaven_Bot::GetTargetSys
	mov	ecx, eax
	call	?ClearTarget@AbstTargetingSystem@@QAEXXZ ; AbstTargetingSystem::ClearTarget
$LN2@HandleMess:

; 202  :       }
; 203  : 
; 204  :       return true;

	mov	al, 1
	jmp	SHORT $LN11@HandleMess
$LN1@HandleMess:

; 205  :     }
; 206  : 
; 207  : 
; 208  :   default: return false;

	xor	al, al
$LN11@HandleMess:

; 209  :   }
; 210  : }

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN16@HandleMess:
	DD	$LN10@HandleMess
	DD	$LN5@HandleMess
	DD	$LN1@HandleMess
	DD	$LN1@HandleMess
	DD	$LN4@HandleMess
	DD	$LN3@HandleMess
?HandleMessage@ET_Bot@@UAE_NABUTelegram@@@Z ENDP	; ET_Bot::HandleMessage
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\game\basegameentity.h
_TEXT	ENDS
;	COMDAT ?ID@BaseGameEntity@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ID@BaseGameEntity@@QBEHXZ PROC				; BaseGameEntity::ID, COMDAT
; _this$ = ecx

; 94   :   int          ID()const{return m_ID;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?ID@BaseGameEntity@@QBEHXZ ENDP				; BaseGameEntity::ID
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\absttargetingsystem.h
_TEXT	ENDS
;	COMDAT ?GetTarget@AbstTargetingSystem@@QBEPAVAbstRaven_Bot@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTarget@AbstTargetingSystem@@QBEPAVAbstRaven_Bot@@XZ PROC ; AbstTargetingSystem::GetTarget, COMDAT
; _this$ = ecx

; 63   :   AbstRaven_Bot* GetTarget()const{return m_pCurrentTarget;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTarget@AbstTargetingSystem@@QBEPAVAbstRaven_Bot@@XZ ENDP ; AbstTargetingSystem::GetTarget
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearTarget@AbstTargetingSystem@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearTarget@AbstTargetingSystem@@QAEXXZ PROC		; AbstTargetingSystem::ClearTarget, COMDAT
; _this$ = ecx

; 66   :   void       ClearTarget(){m_pCurrentTarget=0;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearTarget@AbstTargetingSystem@@QAEXXZ ENDP		; AbstTargetingSystem::ClearTarget
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\abstraven_bot.h
_TEXT	ENDS
;	COMDAT ?IncrementScore@AbstRaven_Bot@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementScore@AbstRaven_Bot@@QAEXXZ PROC		; AbstRaven_Bot::IncrementScore, COMDAT
; _this$ = ecx

; 158  :   void          IncrementScore(){++m_iScore;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+212]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+212], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementScore@AbstRaven_Bot@@QAEXXZ ENDP		; AbstRaven_Bot::IncrementScore
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?isDead@AbstRaven_Bot@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isDead@AbstRaven_Bot@@QBE_NXZ PROC			; AbstRaven_Bot::isDead, COMDAT
; _this$ = ecx

; 165  :   bool          isDead()const{return m_Status == dead;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+152], 1
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?isDead@AbstRaven_Bot@@QBE_NXZ ENDP			; AbstRaven_Bot::isDead
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?isSpawning@AbstRaven_Bot@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isSpawning@AbstRaven_Bot@@QBE_NXZ PROC			; AbstRaven_Bot::isSpawning, COMDAT
; _this$ = ecx

; 167  :   bool          isSpawning()const{return m_Status == spawning;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+152], 2
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?isSpawning@AbstRaven_Bot@@QBE_NXZ ENDP			; AbstRaven_Bot::isSpawning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetBrain@AbstRaven_Bot@@QAEQAVGoal_Think@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBrain@AbstRaven_Bot@@QAEQAVGoal_Think@@XZ PROC	; AbstRaven_Bot::GetBrain, COMDAT
; _this$ = ecx

; 220  :   Goal_Think* const                  GetBrain(){return m_pBrain;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+160]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBrain@AbstRaven_Bot@@QAEQAVGoal_Think@@XZ ENDP	; AbstRaven_Bot::GetBrain
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTargetSys@AbstRaven_Bot@@QAEQAVAbstTargetingSystem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTargetSys@AbstRaven_Bot@@QAEQAVAbstTargetingSystem@@XZ PROC ; AbstRaven_Bot::GetTargetSys, COMDAT
; _this$ = ecx

; 222  :   AbstTargetingSystem* const       GetTargetSys(){return m_pTargSys;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+176]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTargetSys@AbstRaven_Bot@@QAEQAVAbstTargetingSystem@@XZ ENDP ; AbstRaven_Bot::GetTargetSys
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ PROC ; AbstRaven_Bot::GetSensoryMem, COMDAT
; _this$ = ecx

; 225  :   Raven_SensoryMemory* const         GetSensoryMem()const{return m_pSensoryMem;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+164]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSensoryMem@AbstRaven_Bot@@QBEQAVRaven_SensoryMemory@@XZ ENDP ; AbstRaven_Bot::GetSensoryMem
_TEXT	ENDS
PUBLIC	?GreenPen@Cgdi@@QAEXXZ				; Cgdi::GreenPen
EXTRN	?Instance@Cgdi@@SAPAV1@XZ:PROC			; Cgdi::Instance
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\etbot\et_bot.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SelectBodyPen@ET_Bot@@UAEXXZ PROC			; ET_Bot::SelectBodyPen
; _this$ = ecx

; 214  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 	gdi->GreenPen();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?GreenPen@Cgdi@@QAEXXZ			; Cgdi::GreenPen

; 216  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SelectBodyPen@ET_Bot@@UAEXXZ ENDP			; ET_Bot::SelectBodyPen
_TEXT	ENDS
EXTRN	__imp__SelectObject@8:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\cgdi.h
;	COMDAT ?GreenPen@Cgdi@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GreenPen@Cgdi@@QAEXXZ PROC				; Cgdi::GreenPen, COMDAT
; _this$ = ecx

; 139  :   void GreenPen(){if(m_hdc){SelectObject(m_hdc, m_GreenPen);}}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@GreenPen
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@GreenPen:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GreenPen@Cgdi@@QAEXXZ ENDP				; Cgdi::GreenPen
_TEXT	ENDS
PUBLIC	?BluePen@Cgdi@@QAEXXZ				; Cgdi::BluePen
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\etbot\et_bot.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SelectHeadPen@ET_Bot@@UAEXXZ PROC			; ET_Bot::SelectHeadPen
; _this$ = ecx

; 218  :  {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 	 gdi->BluePen();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?BluePen@Cgdi@@QAEXXZ			; Cgdi::BluePen

; 220  :  }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SelectHeadPen@ET_Bot@@UAEXXZ ENDP			; ET_Bot::SelectHeadPen
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\cgdi.h
_TEXT	ENDS
;	COMDAT ?BluePen@Cgdi@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BluePen@Cgdi@@QAEXXZ PROC				; Cgdi::BluePen, COMDAT
; _this$ = ecx

; 140  :   void BluePen() {if(m_hdc){SelectObject(m_hdc, m_BluePen);}}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@BluePen
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@BluePen:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BluePen@Cgdi@@QAEXXZ ENDP				; Cgdi::BluePen
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\bots\etbot\et_bot.cpp
_TEXT	SEGMENT
$T159628 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetName@ET_Bot@@UBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; ET_Bot::GetName
; _this$ = ecx

; 222  : std::string const ET_Bot::GetName () const { return "ET_Bot"; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T159628[ebp], 0
	push	OFFSET $SG147074
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T159628[ebp]
	or	eax, 1
	mov	DWORD PTR $T159628[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetName@ET_Bot@@UBE?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; ET_Bot::GetName
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T159631 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 592  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T159631[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 593  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 594  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 595  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 791  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tidy

; 792  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
;	COMDAT ??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 928  : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 929  : 		_DEBUG_POINTER(_Ptr);

	push	929					; 000003a1H
	push	OFFSET ??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH

; 930  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 931  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 490  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp

; 491  : 		return (_CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4

; 492  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$149166 = -8					; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1987 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1988 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 1989 : 			;
; 1990 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 1991 : 			{	// copy any leftovers to small buffer and deallocate
; 1992 : 			_Elem *_Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$149166[ebp], eax

; 1993 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 1994 : 				_Traits::copy(this->_Bx._Buf, _Ptr, _Newsize);

	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$149166[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 1995 : 			this->_Alval.deallocate(_Ptr, this->_Myres + 1);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Ptr$149166[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:

; 1996 : 			}
; 1997 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH

; 1998 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1999 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 496  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

	push	ebp
	mov	ebp, esp

; 497  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 498  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
$T159658 = -36						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 466  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 467  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 468  : 			_Alproxy(_Alval);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 469  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 470  : 		_Cons_val(_Alproxy, this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T159658[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 471  : 		this->_Myproxy->_Mycont = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@String_val:
	DD	1
	DD	$LN6@String_val
$LN6@String_val:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@String_val
$LN4@String_val:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 65   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 66   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 77   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 78   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 91   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 93   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$15167 = -20					; size = 4
__Lock$15166 = -12					; size = 4
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 206  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 207  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 208  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all

; 209  : 		{	// proxy allocated, drain it
; 210  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15166[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 211  : 
; 212  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$15167[ebp], edx

; 213  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$15167[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$15167[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$15167[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all

; 214  : 			(*_Pnext)->_Myproxy = 0;

	mov	edx, DWORD PTR __Pnext$15167[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 215  : 		_Myproxy->_Myfirstiter = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0

; 216  : 		}

	lea	ecx, DWORD PTR __Lock$15166[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:

; 217  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 218  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 475  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 476  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 477  : 			_Alproxy(_Alval);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 478  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 479  : 		_Dest_val(_Alproxy, this->_Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8

; 480  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 481  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 482  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@String_val@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@String_val@2:
	DD	1
	DD	$LN6@String_val@2
$LN6@String_val@2:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@String_val@2
$LN4@String_val@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$2
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv149 = -92						; size = 4
tv154 = -88						; size = 4
tv151 = -84						; size = 4
tv158 = -80						; size = 4
tv148 = -76						; size = 4
tv157 = -72						; size = 4
tv146 = -68						; size = 4
tv156 = -64						; size = 4
$T159704 = -60						; size = 12
$T159703 = -48						; size = 12
$T159702 = -36						; size = 4
$T159701 = -32						; size = 12
$T159700 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1866 : 		erase(begin(), end());

	lea	eax, DWORD PTR $T159701[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T159700[ebp], esp
	mov	edx, DWORD PTR tv146[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv157[ebp], eax
	mov	eax, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T159703[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	DWORD PTR tv158[ebp], eax
	mov	edx, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T159702[ebp], esp
	mov	eax, DWORD PTR tv151[ebp]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv154[ebp], eax
	lea	ecx, DWORD PTR $T159704[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
	mov	DWORD PTR tv149[ebp], eax
	lea	ecx, DWORD PTR $T159704[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T159703[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T159701[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ

; 1867 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR $T159701[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$1:
	mov	ecx, DWORD PTR $T159700[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ$2:
	lea	ecx, DWORD PTR $T159703[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tidy
PUBLIC	??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 554  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 556  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
__ehhandler$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 116  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 117  : 		*this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 118  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$15134 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 121  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:

; 123  : 			;
; 124  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator

; 125  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 126  : 		else

	jmp	SHORT $LN3@operator
$LN2@operator:

; 127  : 			{	// becoming invalid, disown current parent
; 128  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15134[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 129  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 130  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15134[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:

; 131  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 132  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$15134[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$15145 = -40					; size = 4
__Parent_proxy$15143 = -32				; size = 4
__Lock$15141 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 143  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt

; 145  : 			{	// no future parent, just disown current parent
; 146  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15141[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 147  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 148  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15141[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 149  : 		else

	jmp	SHORT $LN4@Adopt
$LN3@Adopt:

; 150  : 			{	// have a parent, do adoption
; 151  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$15143[ebp], ecx

; 152  : 
; 153  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 154  : 			if (_Myproxy != _Parent_proxy)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$15143[ebp]
	je	SHORT $LN4@Adopt

; 155  : 				{	// change parentage
; 156  : 				_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 157  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 158  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$15143[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 159  : 				_Parent_proxy->_Myfirstiter = this;

	mov	ecx, DWORD PTR __Parent_proxy$15143[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 160  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$15143[ebp]
	mov	DWORD PTR [eax], ecx

; 161  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:

; 162  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 163  : 			_Myproxy = _Parent_proxy;
; 164  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 165  : 			}
; 166  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$15141[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$15155 = -8					; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 184  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 186  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me

; 187  : 			{	// adopted, remove self from list
; 188  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$15155[ebp], edx
$LN3@Orphan_me:

; 189  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$15155[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$15155[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me

; 190  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$15155[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$15155[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:

; 191  : 
; 192  : 			if (*_Pnext == 0)

	mov	edx, DWORD PTR __Pnext$15155[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me

; 193  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	push	193					; 000000c1H
	push	OFFSET ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:

; 194  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$15155[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 195  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:

; 196  : 			}
; 197  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 198  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 135  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 136  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 137  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 138  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 139  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 140  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Iterator_b:
	DD	1
	DD	$LN6@Iterator_b
$LN6@Iterator_b:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 910  : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 911  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 912  : 		if (_Count != 0)

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign

; 913  : 			_DEBUG_POINTER(_Ptr);

	push	913					; 00000391H
	push	OFFSET ??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:

; 914  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 915  : 
; 916  : 		if (_Inside(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign

; 917  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:

; 918  : 
; 919  : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 920  : 			{	// make room and assign new stuff
; 921  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 922  : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 923  : 			}
; 924  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:

; 925  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T159792 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1952 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1953 : 		_Traits::assign(_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T159792[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T159792[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 1954 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 526  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 527  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 528  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1958 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1959 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 1960 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 1961 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 1962 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 1963 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 1964 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1965 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 1966 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 1967 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 1968 : 		return (0 < _Newsize);	// return true only if more work to do

	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:

; 1969 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv82 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2002 : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2003 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2004 : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv82[ebp]

; 2005 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2014 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2015 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2016 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T159810 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T159810[ebp], 0

; 807  : 		return (iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	edx, DWORD PTR $T159810[ebp]
	or	edx, 1
	mov	DWORD PTR $T159810[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 808  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T159815 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T159815[ebp], 0

; 817  : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	eax, DWORD PTR $T159815[ebp]
	or	eax, 1
	mov	DWORD PTR $T159815[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 818  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::clear
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$3
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv197 = -92						; size = 4
tv196 = -88						; size = 4
tv94 = -84						; size = 4
tv184 = -80						; size = 4
tv204 = -76						; size = 4
tv179 = -72						; size = 4
tv202 = -68						; size = 4
$T159828 = -64						; size = 4
$T159825 = -60						; size = 12
$T159824 = -48						; size = 4
$T159821 = -44						; size = 12
$T159820 = -32						; size = 12
$T159819 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T159828[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1380 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T159820[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	DWORD PTR tv202[ebp], eax
	mov	ecx, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv179[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T159828[ebp]
	or	edx, 1
	mov	DWORD PTR $T159828[ebp], edx
	mov	eax, DWORD PTR tv179[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase
	lea	edx, DWORD PTR $T159821[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv204[ebp], eax
	mov	eax, DWORD PTR tv204[ebp]
	mov	DWORD PTR tv184[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T159828[ebp]
	or	ecx, 2
	mov	DWORD PTR $T159828[ebp], ecx
	mov	edx, DWORD PTR tv184[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN8@erase
$LN7@erase:
	mov	DWORD PTR tv94[ebp], 0
$LN8@erase:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T159819[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T159828[ebp]
	and	edx, 2
	je	SHORT $LN15@erase
	and	DWORD PTR $T159828[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T159821[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T159828[ebp]
	and	eax, 1
	je	SHORT $LN16@erase
	and	DWORD PTR $T159828[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T159820[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	movzx	ecx, BYTE PTR $T159819[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase

; 1381 : 			{	// erase all
; 1382 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::clear

; 1383 : 			return (begin());

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	eax, DWORD PTR $T159828[ebp]
	or	eax, 4
	mov	DWORD PTR $T159828[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@erase

; 1384 : 			}
; 1385 : 		else

	jmp	SHORT $LN3@erase
$LN2@erase:

; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase

; 1388 : 				erase(_First++);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T159824[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
	mov	DWORD PTR tv196[ebp], eax
	lea	ecx, DWORD PTR $T159825[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
	mov	DWORD PTR tv197[ebp], eax
	lea	ecx, DWORD PTR $T159825[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase
$LN1@erase:

; 1389 : 			return (iterator(_First._Ptr, this));

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	ecx, DWORD PTR $T159828[ebp]
	or	ecx, 4
	mov	DWORD PTR $T159828[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase
$LN3@erase:

; 1390 : 			}
; 1391 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN5@erase:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T159828[ebp]
	and	eax, 1
	je	$LN12@erase
	and	DWORD PTR $T159828[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T159820[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T159828[ebp]
	and	eax, 2
	je	$LN14@erase
	and	DWORD PTR $T159828[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T159821[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z$4:
	mov	eax, DWORD PTR $T159828[ebp]
	and	eax, 4
	je	$LN18@erase
	and	DWORD PTR $T159828[ebp], -5		; fffffffbH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN18@erase:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
PUBLIC	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::~_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
PUBLIC	??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 498  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 499  : 		typename allocator_type::template rebind<_Container_proxy>::other
; 500  : 			_Alproxy(_Alnod);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>

; 501  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 502  : 		_Dest_val(_Alproxy, this->_Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8

; 503  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 504  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 505  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Tree_nod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Tree_nod:
	DD	1
	DD	$LN6@Tree_nod
$LN6@Tree_nod:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@Tree_nod
$LN4@Tree_nod:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
__ehhandler$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ PROC ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::~_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ ENDP ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::~_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 892  : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 893  : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@2

; 894  : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign@2:

; 895  : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 896  : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@2

; 897  : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign@2:

; 898  : 
; 899  : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@2

; 900  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign@2
$LN3@assign@2:

; 901  : 		else if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2

; 902  : 			{	// make room and assign new stuff
; 903  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 904  : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign@2:

; 905  : 			}
; 906  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign@2:

; 907  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1510 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1511 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 1512 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$149145 = -8					; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1108 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1109 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2

; 1110 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase@2:

; 1111 : 		if (this->_Mysize - _Off < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2

; 1112 : 			_Count = this->_Mysize - _Off;	// trim _Count

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN2@erase@2:

; 1113 : 		if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2

; 1114 : 			{	// move elements down
; 1115 : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 1116 : 				this->_Mysize - _Off - _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1117 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$149145[ebp], eax

; 1118 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$149145[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase@2:

; 1119 : 			}
; 1120 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase@2:

; 1121 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 516  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

	push	ebp
	mov	ebp, esp

; 517  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 518  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv82 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2008 : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2009 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2010 : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv82[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv82[ebp]

; 2011 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2019 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2020 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2021 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1515 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1516 : 		size_type _Num = this->_Alval.max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1517 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]

; 1518 : 		}

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv185 = -36						; size = 4
tv184 = -32						; size = 4
__Ptr$ = -28						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1918 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1919 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 1920 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 1921 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 1922 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 1923 : 			;
; 1924 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy

; 1925 : 			_Newres = this->_Myres
; 1926 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR __Newres$[ebp], eax

; 1927 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 1928 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 1929 : 
; 1930 : 		_Elem *_Ptr;
; 1931 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1932 : 			_Ptr = this->_Alval.allocate(_Newres + 1);

	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 1933 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 1934 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx

; 1935 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 1936 : 				_Ptr = this->_Alval.allocate(_Newres + 1);

	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv185[ebp], eax
	mov	eax, DWORD PTR tv185[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 1937 : 			_CATCH_ALL
; 1938 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1939 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1940 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 1941 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 1942 : 
; 1943 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 1944 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 1945 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 1946 : 		this->_Bx._Ptr = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1947 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+24], eax

; 1948 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 1949 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1972 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1973 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 1974 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 1975 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 1976 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 1977 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
PUBLIC	??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ ; `string'
PUBLIC	??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
;	COMDAT ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv199 = -44						; size = 4
tv187 = -40						; size = 4
$T159915 = -36						; size = 4
__Pnode$ = -32						; size = 4
__Fixnodeparent$ = -28					; size = 4
__Fixnode$ = -24					; size = 4
__Erasednode$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T159915[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN40@erase@3
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN41@erase@3
$LN40@erase@3:

; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");

	push	1198					; 000004aeH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN41@erase@3:

; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1200 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++

; 1201 : 		_Orphan_ptr(*this, _Erasednode);

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr

; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))
; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");
; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return
; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN39@erase@3

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase@3
$LN39@erase@3:

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN37@erase@3

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1218 : 		else

	jmp	SHORT $LN38@erase@3
$LN37@erase@3:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
$LN38@erase@3:

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase@3

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 1227 : 			if (!this->_Isnil(_Fixnode))

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN34@erase@3

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN34@erase@3:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase@3

; 1231 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase@3
$LN33@erase@3:

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase@3

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1234 : 			else

	jmp	SHORT $LN32@erase@3
$LN31@erase@3:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase@3:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase@3

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN45@erase@3
$LN44@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv187[ebp], eax
$LN45@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase@3:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase@3

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN46@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv199[ebp], edx
	jmp	SHORT $LN47@erase@3
$LN46@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv199[ebp], eax
$LN47@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase@3:

; 1247 : 			}
; 1248 : 		else

	jmp	$LN27@erase@3
$LN35@erase@3:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase@3

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx

; 1257 : 			else

	jmp	$LN25@erase@3
$LN26@erase@3:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1261 : 				if (!this->_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase@3

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase@3:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase@3:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase@3

; 1271 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase@3
$LN23@erase@3:

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase@3

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1275 : 			else

	jmp	SHORT $LN22@erase@3
$LN21@erase@3:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase@3:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase@3:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase@3

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	jmp	SHORT $LN18@erase@3
$LN17@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase@3
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase@3

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase@3

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase@3

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1297 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase@3:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase@3

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN12@erase@3
$LN13@erase@3:

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@3
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@3

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1307 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1308 : 						}
; 1309 : 					else

	jmp	$LN12@erase@3
$LN11@erase@3:

; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase@3

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1316 : 							_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase@3:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1323 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

	jmp	$LN16@erase@3
$LN12@erase@3:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else

	jmp	$LN8@erase@3
$LN15@erase@3:

; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase@3

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1334 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase@3:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase@3

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx

; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN8@erase@3
$LN6@erase@3:

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@3
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@3

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1344 : 						_Fixnode = _Fixnodeparent;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1345 : 						}
; 1346 : 					else

	jmp	$LN8@erase@3
$LN4@erase@3:

; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase@3

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1352 : 							_Lrotate(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase@3:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1359 : 						_Rrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate

; 1360 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase@3
$LN8@erase@3:

; 1361 : 						}
; 1362 : 					}

	jmp	$LN17@erase@3
$LN16@erase@3:

; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase@3:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 8

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jbe	SHORT $LN1@erase@3

; 1373 : 			--this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN1@erase@3:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	ecx, DWORD PTR $T159915[ebp]
	or	ecx, 1
	mov	DWORD PTR $T159915[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1376 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T159915[ebp]
	and	eax, 1
	je	$LN50@erase@3
	and	DWORD PTR $T159915[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN50@erase@3:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 174  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv66[ebp]

; 176  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr

; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 1417 : 		_Lmost() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 1418 : 		_Rmost() = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 1419 : 		this->_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1420 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1758 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1759 : 		return (this->_Left(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4

; 1760 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >

; 379  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T159938 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T159938[ebp], 0

; 271  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 272  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++

; 273  : 		return (_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T159938[ebp]
	or	edx, 1
	mov	DWORD PTR $T159938[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator@2:
	DD	1
	DD	$LN8@operator@2
$LN8@operator@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator@2
$LN6@operator@2:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T159938[ebp]
	and	eax, 1
	je	$LN5@operator@2
	and	DWORD PTR $T159938[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN5@operator@2:
	ret	0
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
EXTRN	__invalid_parameter:PROC
EXTRN	__CrtDbgReportW:PROC
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b'
	DB	00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, '0', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator@3
$LN1@operator@3:

; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");

	push	321					; 00000141H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator@3
	xor	ecx, ecx
	jne	SHORT $LN6@operator@3
$LN5@operator@3:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	322					; 00000142H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@3
	int	3
$LN6@operator@3:
	push	0
	push	322					; 00000142H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@3:

; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al

; 331  : 		}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 335  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 336  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

	mov	DWORD PTR __Count$[ebp], -1

; 219  : 		return (0 < _Count ? _Count : 1);

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]

; 220  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$152799 = -8					; size = 4
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$152799[ebp], eax

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

	jmp	SHORT $LN3@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$152799[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN3@Erase:
	mov	edx, DWORD PTR __Pnode$152799[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Erase

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

	mov	ecx, DWORD PTR __Pnode$152799[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$152799[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$152799[ebp], ecx

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 17					; 00000011H
	push	eax
	call	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 8

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

	push	1
	mov	ecx, DWORD PTR __Rootnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 1620 : 			}

	jmp	SHORT $LN2@Erase
$LN4@Erase:

; 1621 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Erase
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1775 : 		else

	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1780 : 		}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1783 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1784 : 		return (this->_Right(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4

; 1785 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1788 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4

; 1790 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1805 : 		else

	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1810 : 		}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 1848 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1849 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1850 : 		const_iterator **_Pnext = (const_iterator **)_Cont._Getpfirst();

	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1851 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 1852 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr

; 1853 : 				if ((*_Pnext)->_Ptr == this->_Myhead
; 1854 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:

; 1855 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1856 : 				else

	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:

; 1857 : 					{	// orphan the iterator
; 1858 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1859 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:

; 1860 : 					}

	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:

; 1861 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 96   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv66[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv66[ebp]

; 98   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 169  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 171  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 179  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 72					; 00000048H

; 608  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 73					; 00000049H

; 613  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 628  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 633  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 638  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max

; 643  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:

; 644  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 645  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min

; 650  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:

; 651  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 652  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>

; 214  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b'
	DB	00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, '0', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN2@operator@4
$LN1@operator@4:

; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");

	push	256					; 00000100H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 257  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	ecx, ecx
	je	SHORT $LN5@operator@4
	xor	edx, edx
	jne	SHORT $LN6@operator@4
$LN5@operator@4:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@4
	int	3
$LN6@operator@4:
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@4:

; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++

; 266  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 267  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 121  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 123  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 44   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 45   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$153170 = -8					; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@operator@5
	jmp	$LN5@operator@5
$LN6@operator@5:

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator@5

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 64   : 		else

	jmp	SHORT $LN5@operator@5
$LN2@operator@5:

; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$153170[ebp], ecx
	mov	edx, DWORD PTR __Pnode$153170[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@operator@5
	mov	ecx, DWORD PTR __Pnode$153170[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@operator@5

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$153170[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN2@operator@5
$LN1@operator@5:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$153170[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN5@operator@5:

; 71   : 			}
; 72   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 73   : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 111  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 112  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_0CB@NOKEJIID@?$DMPopLuaNumber?$DO?5Cannot?5retrieve?3?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	_lua_tonumber:PROC
EXTRN	_lua_isnumber:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_settop:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\lua-5.1.3\src\luahelperfunctions.h
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0CB@NOKEJIID@?$DMPopLuaNumber?$DO?5Cannot?5retrieve?3?5@
CONST	SEGMENT
??_C@_0CB@NOKEJIID@?$DMPopLuaNumber?$DO?5Cannot?5retrieve?3?5@ DB '<PopLu'
	DB	'aNumber> Cannot retrieve: ', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z$1
__ehfuncinfo$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z
_TEXT	SEGMENT
tv94 = -116						; size = 4
tv74 = -112						; size = 4
$T160035 = -108						; size = 12
_val$ = -96						; size = 8
$T153950 = -88						; size = 32
_err$153949 = -52					; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pL$ = 8						; size = 4
_name$ = 12						; size = 4
??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z PROC		; PopLuaNumber<double>, COMDAT

; 70   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	push	edi
	lea	edi, DWORD PTR [ebp-116]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 71   :   lua_settop(pL, 0);

	push	0
	mov	eax, DWORD PTR _pL$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 72   : 
; 73   :   lua_getglobal(pL, name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	-10002					; ffffd8eeH
	mov	edx, DWORD PTR _pL$[ebp]
	push	edx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 74   : 
; 75   :   //check that the variable is the correct type. If it is not throw an
; 76   :   //exception
; 77   :   if (!lua_isnumber(pL, 1))

	push	1
	mov	eax, DWORD PTR _pL$[ebp]
	push	eax
	call	_lua_isnumber
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@PopLuaNumb

; 78   :   {
; 79   :     std::string err("<PopLuaNumber> Cannot retrieve: ");

	push	OFFSET ??_C@_0CB@NOKEJIID@?$DMPopLuaNumber?$DO?5Cannot?5retrieve?3?5@
	lea	ecx, DWORD PTR _err$153949[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 80   : 
; 81   :     throw std::runtime_error(err + name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	edx, DWORD PTR _err$153949[ebp]
	push	edx
	lea	eax, DWORD PTR $T153950[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR tv94[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv94[ebp]
	push	edx
	lea	ecx, DWORD PTR $T160035[ebp]
	call	??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T160035[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153950[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 82   :   }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _err$153949[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@PopLuaNumb:

; 83   : 
; 84   :   //grab the value, cast to the correct type and return
; 85   :   T val = (T)lua_tonumber(pL, 1);

	push	1
	mov	ecx, DWORD PTR _pL$[ebp]
	push	ecx
	call	_lua_tonumber
	add	esp, 8
	fstp	QWORD PTR _val$[ebp]

; 86   : 
; 87   :   //remove the value from the stack
; 88   :   lua_pop(pL, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _pL$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 89   : 
; 90   :   return val;

	fld	QWORD PTR _val$[ebp]
$LN2@PopLuaNumb:

; 91   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@PopLuaNumb
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@PopLuaNumb:
	DD	1
	DD	$LN8@PopLuaNumb
$LN8@PopLuaNumb:
	DD	-52					; ffffffccH
	DD	32					; 00000020H
	DD	$LN6@PopLuaNumb
$LN6@PopLuaNumb:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z$0:
	lea	ecx, DWORD PTR _err$153949[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z$1:
	lea	ecx, DWORD PTR $T153950[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$PopLuaNumber@N@@YANPAUlua_State@@PBD@Z ENDP		; PopLuaNumber<double>
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T160049 = -8						; size = 4
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx

; 165  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	DWORD PTR $T160049[ebp], eax
	lea	eax, DWORD PTR $T160049[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@

; 166  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 752  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 753  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 754  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1495 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1496 : 		return (_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr

; 1497 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T160075 = -60						; size = 4
__Ans$ = -52						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 64   : 	{	// return string + NTCS

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T160075[ebp], 0

; 65   : 	basic_string<_Elem, _Traits, _Alloc> _Ans;

	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 66   : 	_Ans.reserve(_Left.size() + _Traits::length(_Right));

	mov	ecx, DWORD PTR __Left$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, eax
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	add	esi, eax
	push	esi
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 67   : 	_Ans += _Left;

	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 68   : 	_Ans += _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 69   : 	return (_Ans);

	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T160075[ebp]
	or	ecx, 1
	mov	DWORD PTR $T160075[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 70   : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@operator@6:
	DD	1
	DD	$LN8@operator@6
$LN8@operator@6:
	DD	-52					; ffffffccH
	DD	32					; 00000020H
	DD	$LN6@operator@6
$LN6@operator@6:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$1:
	mov	eax, DWORD PTR $T160075[ebp]
	and	eax, 1
	je	$LN5@operator@6
	and	DWORD PTR $T160075[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@operator@6:
	ret	0
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T160088 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 550  : 		{	// construct empty string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T160088[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 551  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 552  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T160098 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 702  : 		{	// construct by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	mov	ecx, esp
	mov	DWORD PTR $T160098[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 703  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 704  : 		assign(_STD forward<_Myt>(_Right));

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 705  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
$T160109 = -6						; size = 1
$T160108 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 713  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 714  : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign@3

; 715  : 			;
; 716  : 		else if (get_allocator() != _Right.get_allocator()

	jmp	$LN5@assign@3
$LN6@assign@3:

; 717  : 			&& this->_BUF_SIZE <= _Right._Myres)

	lea	ecx, DWORD PTR $T160108[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T160109[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	call	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator!=<char,char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@assign@3
	mov	ecx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN4@assign@3

; 718  : 			*this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 719  : 		else

	jmp	SHORT $LN5@assign@3
$LN4@assign@3:

; 720  : 			{	// not same, clear this and steal from _Right
; 721  : 			_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 722  : 			if (_Right._Myres < this->_BUF_SIZE)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jae	SHORT $LN2@assign@3

; 723  : 				_Traits::move(this->_Bx._Buf, _Right._Bx._Buf,
; 724  : 					_Right._Mysize + 1);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 725  : 			else

	jmp	SHORT $LN1@assign@3
$LN2@assign@3:

; 726  : 				{	// copy pointer
; 727  : 				this->_Bx._Ptr = _Right._Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 728  : 				_Right._Bx._Ptr = 0;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@assign@3:

; 729  : 				}
; 730  : 			this->_Mysize = _Right._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx

; 731  : 			this->_Myres = _Right._Myres;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx

; 732  : 
; 733  : 			_Right._Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
$LN5@assign@3:

; 734  : 			}
; 735  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 736  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 762  : 		{	// assign _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 763  : 		return (assign(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 764  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 777  : 		{	// append _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 778  : 		return (append(_Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 779  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx

; 1905 : 		{	// return allocator object for values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1906 : 		return (this->_Alval);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1907 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 792  : 		{	// append _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 793  : 		return (append(_Right, 0, npos));

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 794  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 886  : 		{	// assign _Right

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		return (assign(_Right, 0, npos));

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 888  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 798  : 		{	// append _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 799  : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN4@append

; 800  : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@append:

; 801  : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 802  : 		if (_Num < _Count)

	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@append

; 803  : 			_Count = _Num;	// trim _Count to size

	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN3@append:

; 804  : 		if (npos - this->_Mysize <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append

; 805  : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:

; 806  : 
; 807  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], edx
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@append

; 808  : 			{	// make room and append new stuff
; 809  : 			_Traits::copy(_Myptr() + this->_Mysize,
; 810  : 				_Right._Myptr() + _Roff, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 811  : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append:

; 812  : 			}
; 813  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:

; 814  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\messaging\telegram.h
_TEXT	ENDS
;	COMDAT ??$DereferenceToType@H@@YAHPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??$DereferenceToType@H@@YAHPAX@Z PROC			; DereferenceToType<int>, COMDAT

; 100  : {

	push	ebp
	mov	ebp, esp

; 101  :   return *(T*)(p);

	mov	eax, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [eax]

; 102  : }

	pop	ebp
	ret	0
??$DereferenceToType@H@@YAHPAX@Z ENDP			; DereferenceToType<int>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT

; 701  : 	{	// test iterator for non-singularity, const pointers

	push	ebp
	mov	ebp, esp

; 702  : 	if (_First == 0)

	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin

; 703  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:

; 704  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT

; 270  : 	{	// test for allocator inequality

	push	ebp
	mov	ebp, esp

; 271  : 	return (!(_Left == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 272  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T160142 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T160142[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T160142[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 102  : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR __Tmp$[ebp], cl

; 103  : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 104  : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 105  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z PROC ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 110  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 112  : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T160160 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T160160[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T160160[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 782  : 		{	// append [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 783  : 		return (append(_Ptr));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 784  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 838  : 		{	// append [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 839  : 		_DEBUG_POINTER(_Ptr);

	push	839					; 00000347H
	push	OFFSET ??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH

; 840  : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 841  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 817  : 		{	// append [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 818  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 819  : 		if (_Count != 0)

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN4@append@2

; 820  : 			_DEBUG_POINTER(_Ptr);

	push	820					; 00000334H
	push	OFFSET ??_C@_1IO@FJMIILFL@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN4@append@2:

; 821  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 822  : 
; 823  : 		if (_Inside(_Ptr))

	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@append@2

; 824  : 			return (append(*this, _Ptr - _Myptr(), _Count));	// substring

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN6@append@2
$LN3@append@2:

; 825  : 		if (npos - this->_Mysize <= _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@2

; 826  : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@2:

; 827  : 
; 828  : 		size_type _Num;
; 829  : 		if (0 < _Count && _Grow(_Num = this->_Mysize + _Count))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append@2

; 830  : 			{	// make room and append new stuff
; 831  : 			_Traits::copy(_Myptr() + this->_Mysize, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+20]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 832  : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@2:

; 833  : 			}
; 834  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@append@2:

; 835  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Size$155503 = -8					; size = 4
_this$ = -4						; size = 4
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx

; 1539 : 		{	// determine new minimum length of allocated storage

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1540 : 		if (this->_Mysize <= _Newcap && this->_Myres != _Newcap)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newcap$[ebp]
	ja	SHORT $LN3@reserve
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	eax, DWORD PTR __Newcap$[ebp]
	je	SHORT $LN3@reserve

; 1541 : 			{	// change reservation
; 1542 : 			size_type _Size = this->_Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR __Size$155503[ebp], edx

; 1543 : 			if (_Grow(_Newcap, true))

	push	1
	mov	eax, DWORD PTR __Newcap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@reserve

; 1544 : 				_Eos(_Size);

	mov	edx, DWORD PTR __Size$155503[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@reserve:

; 1545 : 			}
; 1546 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z PROC ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z ENDP ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T160177 = -24						; size = 4
$T160176 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T160177[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T160177[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T160177[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T160177[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T160176[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T160177[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 57   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 58   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 61   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 62   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT

; 262  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp

; 263  : 	return (true);

	mov	al, 1

; 264  : 	}

	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z PROC ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ENDP ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxInt@@YAXXZ
text$yc	SEGMENT
??__EMaxInt@@YAXXZ PROC					; `dynamic initializer for 'MaxInt'', COMDAT

; 23   : const int     MaxInt    = (std::numeric_limits<int>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR _MaxInt, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxInt@@YAXXZ ENDP					; `dynamic initializer for 'MaxInt''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
text$yc	ENDS
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 712  : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 713  : 		{	// return maximum value
; 714  : 		return (INT_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 715  : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxDouble@@YAXXZ
text$yc	SEGMENT
??__EMaxDouble@@YAXXZ PROC				; `dynamic initializer for 'MaxDouble'', COMDAT

; 24   : const double  MaxDouble = (std::numeric_limits<double>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::max
	fstp	QWORD PTR _MaxDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxDouble@@YAXXZ ENDP				; `dynamic initializer for 'MaxDouble''
text$yc	ENDS
PUBLIC	__real@7fefffffffffffff
;	COMDAT __real@7fefffffffffffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?max@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::max, COMDAT

; 1233 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1234 : 		{	// return maximum value
; 1235 : 		return (DBL_MAX);

	fld	QWORD PTR __real@7fefffffffffffff

; 1236 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinDouble@@YAXXZ
text$yc	SEGMENT
??__EMinDouble@@YAXXZ PROC				; `dynamic initializer for 'MinDouble'', COMDAT

; 25   : const double  MinDouble = (std::numeric_limits<double>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::min
	fstp	QWORD PTR _MinDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinDouble@@YAXXZ ENDP				; `dynamic initializer for 'MinDouble''
text$yc	ENDS
PUBLIC	__real@0010000000000000
;	COMDAT __real@0010000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@0010000000000000 DQ 00010000000000000r	; 2.22507e-308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?min@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::min, COMDAT

; 1228 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1229 : 		{	// return minimum value
; 1230 : 		return (DBL_MIN);

	fld	QWORD PTR __real@0010000000000000

; 1231 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::min
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxFloat@@YAXXZ
text$yc	SEGMENT
??__EMaxFloat@@YAXXZ PROC				; `dynamic initializer for 'MaxFloat'', COMDAT

; 26   : const float   MaxFloat  = (std::numeric_limits<float>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::max
	fstp	DWORD PTR _MaxFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxFloat@@YAXXZ ENDP				; `dynamic initializer for 'MaxFloat''
text$yc	ENDS
PUBLIC	__real@7f7fffff
;	COMDAT __real@7f7fffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?max@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::max, COMDAT

; 1166 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1167 : 		{	// return maximum value
; 1168 : 		return (FLT_MAX);

	fld	DWORD PTR __real@7f7fffff

; 1169 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinFloat@@YAXXZ
text$yc	SEGMENT
??__EMinFloat@@YAXXZ PROC				; `dynamic initializer for 'MinFloat'', COMDAT

; 27   : const float   MinFloat  = (std::numeric_limits<float>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::min
	fstp	DWORD PTR _MinFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinFloat@@YAXXZ ENDP				; `dynamic initializer for 'MinFloat''
text$yc	ENDS
PUBLIC	__real@00800000
;	COMDAT __real@00800000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?min@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::min, COMDAT

; 1161 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1162 : 		{	// return minimum value
; 1163 : 		return (FLT_MIN);

	fld	DWORD PTR __real@00800000

; 1164 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
_TEXT	ENDS
;	COMDAT ??__ETwoPi@@YAXXZ
text$yc	SEGMENT
??__ETwoPi@@YAXXZ PROC					; `dynamic initializer for 'TwoPi'', COMDAT

; 30   : const double   TwoPi     = Pi * 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fadd	ST(0), ST(0)
	fstp	QWORD PTR _TwoPi
	pop	ebp
	ret	0
??__ETwoPi@@YAXXZ ENDP					; `dynamic initializer for 'TwoPi''
text$yc	ENDS
PUBLIC	__real@4000000000000000
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EHalfPi@@YAXXZ
text$yc	SEGMENT
??__EHalfPi@@YAXXZ PROC					; `dynamic initializer for 'HalfPi'', COMDAT

; 31   : const double   HalfPi    = Pi / 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4000000000000000
	fstp	QWORD PTR _HalfPi
	pop	ebp
	ret	0
??__EHalfPi@@YAXXZ ENDP					; `dynamic initializer for 'HalfPi''
text$yc	ENDS
PUBLIC	__real@4010000000000000
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EQuarterPi@@YAXXZ
text$yc	SEGMENT
??__EQuarterPi@@YAXXZ PROC				; `dynamic initializer for 'QuarterPi'', COMDAT

; 32   : const double   QuarterPi = Pi / 4;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4010000000000000
	fstp	QWORD PTR _QuarterPi
	pop	ebp
	ret	0
??__EQuarterPi@@YAXXZ ENDP				; `dynamic initializer for 'QuarterPi''
text$yc	ENDS
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1578 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
text$yc	ENDS
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 71   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 72   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
_TEXT	ENDS
;	COMDAT ??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1036 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_get<_Elem, _InIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
text$yc	ENDS
;	COMDAT ??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::codecvt<char,char,int>::id'', COMDAT

; 900  : 	__PURE_APPDOMAIN_GLOBAL locale::id codecvt<_Elem, _Byte, _Statype>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::codecvt<char,char,int>::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
text$yc	ENDS
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 228  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
_BSS	SEGMENT
_MinDouble DQ	01H DUP (?)
_MaxFloat DD	01H DUP (?)
_MinFloat DD	01H DUP (?)
_TwoPi	DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
_BSS	SEGMENT
_MaxInt	DD	01H DUP (?)
	ALIGN	8

_HalfPi	DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
_BSS	SEGMENT
_MaxDouble DQ	01H DUP (?)
_QuarterPi DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_MaxInt$initializer$ DD FLAT:??__EMaxInt@@YAXXZ
_MaxDouble$initializer$ DD FLAT:??__EMaxDouble@@YAXXZ
_MinDouble$initializer$ DD FLAT:??__EMinDouble@@YAXXZ
_MaxFloat$initializer$ DD FLAT:??__EMaxFloat@@YAXXZ
_MinFloat$initializer$ DD FLAT:??__EMinFloat@@YAXXZ
_TwoPi$initializer$ DD FLAT:??__ETwoPi@@YAXXZ
_HalfPi$initializer$ DD FLAT:??__EHalfPi@@YAXXZ
_QuarterPi$initializer$ DD FLAT:??__EQuarterPi@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$codecvt@DDH@std@@2P6AXXZA DD FLAT:??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ; std::codecvt<char,char,int>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
END
