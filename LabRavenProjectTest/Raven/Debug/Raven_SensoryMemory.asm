; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\Teaja\Documents\Artificial-Fun\LabRavenProjectTest\Raven\Raven_SensoryMemory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
_Pi	DQ	0400921f9f01b866er		; 3.14159
_colors	DD	0ffH
	DD	0ff0000H
	DD	0ff00H
	DD	00H
	DD	0c8c8ffH
	DD	0c8c8c8H
	DD	0ffffH
	DD	0aaffH
	DD	0aa00ffH
	DD	05a85H
	DD	0ffffffH
	DD	06400H
	DD	0ffff00H
	DD	0c8c8c8H
	DD	0e6e6ffH
	ORG $+4
_pi	DQ	0400921f9f01b866er		; 3.14159
$SG134077 DB	'< Raven_SensoryMemory::GetLastRecordedPositionOfOpponent'
	DB	'>: Attempting to get position of unrecorded bot', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	??0?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >
PUBLIC	??0Raven_SensoryMemory@@QAE@PAVAbstRaven_Bot@@N@Z ; Raven_SensoryMemory::Raven_SensoryMemory
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
_MemorySpan$ = 12					; size = 8
??0Raven_SensoryMemory@@QAE@PAVAbstRaven_Bot@@N@Z PROC	; Raven_SensoryMemory::Raven_SensoryMemory
; _this$ = ecx

; 13   : {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >
	mov	edx, DWORD PTR _this$[ebp]
	fld	QWORD PTR _MemorySpan$[ebp]
	fstp	QWORD PTR [edx+24]
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Raven_SensoryMemory@@QAE@PAVAbstRaven_Bot@@N@Z ENDP	; Raven_SensoryMemory::Raven_SensoryMemory
_TEXT	ENDS
PUBLIC	??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[]
PUBLIC	??0MemoryRecord@@QAE@XZ				; MemoryRecord::MemoryRecord
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
PUBLIC	?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::MakeNewRecordIfNotAlreadyPresent
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv140 = -108						; size = 4
tv142 = -104						; size = 4
tv138 = -100						; size = 4
tv141 = -96						; size = 4
$T143298 = -92						; size = 48
$T143297 = -44						; size = 12
$T143296 = -32						; size = 12
$T143295 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::MakeNewRecordIfNotAlreadyPresent
; _this$ = ecx

; 18   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 19   :   //else check to see if this Opponent already exists in the memory. If it doesn't,
; 20   :   //create a new record
; 21   :   if (m_MemoryMap.find(pOpponent) == m_MemoryMap.end())

	lea	eax, DWORD PTR $T143297[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T143296[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR tv142[ebp], eax
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv140[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	mov	BYTE PTR $T143295[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143296[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T143297[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T143295[ebp]
	test	eax, eax
	je	SHORT $LN2@MakeNewRec

; 22   :   {
; 23   :     m_MemoryMap[pOpponent] = MemoryRecord();

	lea	ecx, DWORD PTR $T143298[ebp]
	call	??0MemoryRecord@@QAE@XZ			; MemoryRecord::MemoryRecord
	mov	esi, eax
	lea	ecx, DWORD PTR _pOpponent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[]
	mov	ecx, 12					; 0000000cH
	mov	edi, eax
	rep movsd
$LN2@MakeNewRec:

; 24   :   }
; 25   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR $T143297[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143296[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::MakeNewRecordIfNotAlreadyPresent
PUBLIC	??0Vector2D@@QAE@XZ				; Vector2D::Vector2D
PUBLIC	__real@0000000000000000
PUBLIC	__real@c08f380000000000
;	COMDAT __real@0000000000000000
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.h
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@c08f380000000000
CONST	SEGMENT
__real@c08f380000000000 DQ 0c08f380000000000r	; -999
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0MemoryRecord@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MemoryRecord@@QAE@XZ PROC				; MemoryRecord::MemoryRecord, COMDAT
; _this$ = ecx

; 60   :   {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@c08f380000000000
	fstp	QWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	QWORD PTR __real@c08f380000000000
	fstp	QWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [edx+16]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector2D@@QAE@XZ			; Vector2D::Vector2D
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+41], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MemoryRecord@@QAE@XZ ENDP				; MemoryRecord::MemoryRecord
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\2d\vector2d.h
_TEXT	ENDS
;	COMDAT ??0Vector2D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector2D@@QAE@XZ PROC				; Vector2D::Vector2D, COMDAT
; _this$ = ecx

; 24   :   Vector2D():x(0.0),y(0.0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	QWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector2D@@QAE@XZ ENDP				; Vector2D::Vector2D
_TEXT	ENDS
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1_Iterator_base12@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Iterator_base12@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 135  : 		{	// destroy the iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 136  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 137  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 138  : 		_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 139  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 140  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Iterator_b:
	DD	1
	DD	$LN6@Iterator_b
$LN6@Iterator_b:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$15159 = -8					; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 184  : 		{	// cut ties with parent

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 185  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 186  : 		if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me

; 187  : 			{	// adopted, remove self from list
; 188  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$15159[ebp], edx
$LN3@Orphan_me:

; 189  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	eax, DWORD PTR __Pnext$15159[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$15159[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me

; 190  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$15159[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$15159[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:

; 191  : 
; 192  : 			if (*_Pnext == 0)

	mov	edx, DWORD PTR __Pnext$15159[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me

; 193  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	push	193					; 000000c1H
	push	OFFSET ??_C@_1JA@HCKHPKJH@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Orphan_me:

; 194  : 			*_Pnext = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$15159[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 195  : 			_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:

; 196  : 			}
; 197  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 198  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
PUBLIC	?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::RemoveBotFromMemory
xdata$x	SEGMENT
__unwindtable$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv161 = -84						; size = 4
tv160 = -80						; size = 4
tv158 = -76						; size = 4
tv70 = -72						; size = 4
$T143349 = -68						; size = 12
$T143348 = -56						; size = 4
$T143347 = -52						; size = 12
$T143346 = -37						; size = 1
_record$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBot$ = 8						; size = 4
?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::RemoveBotFromMemory
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 33   :   MemoryMap::iterator record = m_MemoryMap.find(pBot);

	lea	eax, DWORD PTR _pBot$[ebp]
	push	eax
	lea	ecx, DWORD PTR _record$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 34   :   
; 35   :   if (record != m_MemoryMap.end())

	lea	edx, DWORD PTR $T143347[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv158[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv158[ebp]
	push	ecx
	lea	ecx, DWORD PTR _record$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143346[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143347[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T143346[ebp]
	test	edx, edx
	je	SHORT $LN1@RemoveBotF

; 36   :   {
; 37   :     m_MemoryMap.erase(record);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T143348[ebp], esp
	lea	eax, DWORD PTR _record$[ebp]
	push	eax
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv160[ebp], eax
	lea	ecx, DWORD PTR $T143349[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
	mov	DWORD PTR tv161[ebp], eax
	lea	ecx, DWORD PTR $T143349[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN1@RemoveBotF:

; 38   :   }
; 39   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _record$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@RemoveBotF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN11@RemoveBotF:
	DD	1
	DD	$LN10@RemoveBotF
$LN10@RemoveBotF:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN8@RemoveBotF
$LN8@RemoveBotF:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _record$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143347[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveBotFromMemory@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::RemoveBotFromMemory
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 116  : 		{	// copy an iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 117  : 		*this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 118  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$15138 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 121  : 		{	// assign an iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		if (_Myproxy == _Right._Myproxy)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:

; 123  : 			;
; 124  : 		else if (_Right._Myproxy != 0)

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator

; 125  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 126  : 		else

	jmp	SHORT $LN3@operator
$LN2@operator:

; 127  : 			{	// becoming invalid, disown current parent
; 128  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15138[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 129  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 130  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15138[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN3@operator:

; 131  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 132  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	lea	ecx, DWORD PTR __Lock$15138[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$15149 = -40					; size = 4
__Parent_proxy$15147 = -32				; size = 4
__Lock$15145 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 143  : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		if (_Parent == 0)

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt

; 145  : 			{	// no future parent, just disown current parent
; 146  : 			_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 147  : 			_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 148  : 			}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit

; 149  : 		else

	jmp	SHORT $LN4@Adopt
$LN3@Adopt:

; 150  : 			{	// have a parent, do adoption
; 151  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$15147[ebp], ecx

; 152  : 
; 153  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 154  : 			if (_Myproxy != _Parent_proxy)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$15147[ebp]
	je	SHORT $LN4@Adopt

; 155  : 				{	// change parentage
; 156  : 				_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15149[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 157  : 				_Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 158  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$15147[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 159  : 				_Parent_proxy->_Myfirstiter = this;

	mov	ecx, DWORD PTR __Parent_proxy$15147[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 160  : 				_Myproxy = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$15147[ebp]
	mov	DWORD PTR [eax], ecx

; 161  : 				}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$15149[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:

; 162  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 163  : 			_Myproxy = _Parent_proxy;
; 164  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 165  : 			}
; 166  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$15145[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	lea	ecx, DWORD PTR __Lock$15149[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
PUBLIC	?GetTickCount@CrudeTimer@@QAENXZ		; CrudeTimer::GetTickCount
PUBLIC	?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ	; AbstRaven_Bot::GetWorld
PUBLIC	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ		; BaseGameEntity::Pos
PUBLIC	?UpdateWithSoundSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::UpdateWithSoundSource
EXTRN	?Instance@CrudeTimer@@SAPAV1@XZ:PROC		; CrudeTimer::Instance
EXTRN	?isLOSOkay@Raven_Game@@QBE_NUVector2D@@0@Z:PROC	; Raven_Game::isLOSOkay
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
_TEXT	SEGMENT
$T143401 = -56						; size = 16
$T143400 = -40						; size = 16
$T143399 = -24						; size = 16
_info$133658 = -8					; size = 4
_this$ = -4						; size = 4
_pNoiseMaker$ = 8					; size = 4
?UpdateWithSoundSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::UpdateWithSoundSource
; _this$ = ecx

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 49   :   //make sure the bot being examined is not this bot
; 50   :   if (m_pOwner != pNoiseMaker)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _pNoiseMaker$[ebp]
	je	$LN3@UpdateWith

; 51   :   {
; 52   :     //if the bot is already part of the memory then update its data, else
; 53   :     //create a new memory record and add it to the memory
; 54   :     MakeNewRecordIfNotAlreadyPresent(pNoiseMaker);

	mov	edx, DWORD PTR _pNoiseMaker$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::MakeNewRecordIfNotAlreadyPresent

; 55   : 
; 56   :     MemoryRecord& info = m_MemoryMap[pNoiseMaker];

	lea	eax, DWORD PTR _pNoiseMaker$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[]
	mov	DWORD PTR _info$133658[ebp], eax

; 57   : 
; 58   :     //test if there is LOS between bots 
; 59   :     if (m_pOwner->GetWorld()->isLOSOkay(m_pOwner->Pos(), pNoiseMaker->Pos()))

	lea	ecx, DWORD PTR $T143399[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNoiseMaker$[ebp]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	lea	ecx, DWORD PTR $T143400[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ ; AbstRaven_Bot::GetWorld
	mov	ecx, eax
	call	?isLOSOkay@Raven_Game@@QBE_NUVector2D@@0@Z ; Raven_Game::isLOSOkay
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@UpdateWith

; 60   :     {
; 61   :       info.bShootable = true;

	mov	eax, DWORD PTR _info$133658[ebp]
	mov	BYTE PTR [eax+41], 1

; 62   :       
; 63   :      //record the position of the bot
; 64   :       info.vLastSensedPosition = pNoiseMaker->Pos();

	lea	ecx, DWORD PTR $T143401[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNoiseMaker$[ebp]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	mov	edx, DWORD PTR _info$133658[ebp]
	add	edx, 24					; 00000018H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax

; 65   :     }
; 66   :     else

	jmp	SHORT $LN1@UpdateWith
$LN2@UpdateWith:

; 67   :     {
; 68   :       info.bShootable = false;

	mov	ecx, DWORD PTR _info$133658[ebp]
	mov	BYTE PTR [ecx+41], 0
$LN1@UpdateWith:

; 69   :     }
; 70   :     
; 71   :     //record the time it was sensed
; 72   :     info.fTimeLastSensed = (double)Clock->GetCurrentTime();

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	mov	edx, DWORD PTR _info$133658[ebp]
	fstp	QWORD PTR [edx]
$LN3@UpdateWith:

; 73   :   }
; 74   : }

	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateWithSoundSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::UpdateWithSoundSource
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\game\basegameentity.h
_TEXT	ENDS
;	COMDAT ?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ PROC		; BaseGameEntity::Pos, COMDAT
; _this$ = ecx

; 89   :   Vector2D     Pos()const{return m_vPosition;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ ENDP		; BaseGameEntity::Pos
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\abstraven_bot.h
_TEXT	ENDS
;	COMDAT ?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ PROC	; AbstRaven_Bot::GetWorld, COMDAT
; _this$ = ecx

; 217  :   Raven_Game* const                  GetWorld(){return m_pWorld;} 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+156]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ ENDP	; AbstRaven_Bot::GetWorld
_TEXT	ENDS
PUBLIC	__real@3f50624dd2f1a9fc
EXTRN	__imp__timeGetTime@0:PROC
;	COMDAT __real@3f50624dd2f1a9fc
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\time\crudetimer.h
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetTickCount@CrudeTimer@@QAENXZ
_TEXT	SEGMENT
tv71 = -12						; size = 8
_this$ = -4						; size = 4
?GetTickCount@CrudeTimer@@QAENXZ PROC			; CrudeTimer::GetTickCount, COMDAT
; _this$ = ecx

; 42   :   double GetCurrentTime(){return timeGetTime() * 0.001 - m_dStartTime;}

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	mov	DWORD PTR tv71[ebp+4], 0
	fild	QWORD PTR tv71[ebp]
	fmul	QWORD PTR __real@3f50624dd2f1a9fc
	mov	eax, DWORD PTR _this$[ebp]
	fsub	QWORD PTR [eax]
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTickCount@CrudeTimer@@QAENXZ ENDP			; CrudeTimer::GetTickCount
_TEXT	ENDS
PUBLIC	?UpdateWithDamageSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@H@Z ; Raven_SensoryMemory::UpdateWithDamageSource
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
_TEXT	SEGMENT
$T143413 = -56						; size = 16
$T143412 = -40						; size = 16
$T143411 = -24						; size = 16
_info$133671 = -8					; size = 4
_this$ = -4						; size = 4
_pShooter$ = 8						; size = 4
_damage$ = 12						; size = 4
?UpdateWithDamageSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@H@Z PROC ; Raven_SensoryMemory::UpdateWithDamageSource
; _this$ = ecx

; 83   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   :   //make sure the bot being examined is not this bot
; 85   :   if (m_pOwner != pShooter) // probably not possible

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _pShooter$[ebp]
	je	$LN3@UpdateWith@2

; 86   :   {
; 87   :     //if the bot is already part of the memory then update its data, else
; 88   :     //create a new memory record and add it to the memory
; 89   :     MakeNewRecordIfNotAlreadyPresent(pShooter);

	mov	edx, DWORD PTR _pShooter$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::MakeNewRecordIfNotAlreadyPresent

; 90   : 
; 91   :     MemoryRecord& info = m_MemoryMap[pShooter];

	lea	eax, DWORD PTR _pShooter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[]
	mov	DWORD PTR _info$133671[ebp], eax

; 92   : 
; 93   : 	info.iRecentDamage += damage;

	mov	ecx, DWORD PTR _info$133671[ebp]
	mov	edx, DWORD PTR [ecx+44]
	add	edx, DWORD PTR _damage$[ebp]
	mov	eax, DWORD PTR _info$133671[ebp]
	mov	DWORD PTR [eax+44], edx

; 94   : 
; 95   :     //test if there is LOS between bots 
; 96   :     if (m_pOwner->GetWorld()->isLOSOkay(m_pOwner->Pos(), pShooter->Pos()))

	lea	ecx, DWORD PTR $T143411[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pShooter$[ebp]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	lea	ecx, DWORD PTR $T143412[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ ; AbstRaven_Bot::GetWorld
	mov	ecx, eax
	call	?isLOSOkay@Raven_Game@@QBE_NUVector2D@@0@Z ; Raven_Game::isLOSOkay
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@UpdateWith@2

; 97   :     {
; 98   :       info.bShootable = true;

	mov	eax, DWORD PTR _info$133671[ebp]
	mov	BYTE PTR [eax+41], 1

; 99   :       
; 100  :      //record the position of the bot
; 101  :       info.vLastSensedPosition = pShooter->Pos();

	lea	ecx, DWORD PTR $T143413[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pShooter$[ebp]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	mov	edx, DWORD PTR _info$133671[ebp]
	add	edx, 24					; 00000018H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax

; 102  :     }
; 103  :     else

	jmp	SHORT $LN1@UpdateWith@2
$LN2@UpdateWith@2:

; 104  :     {
; 105  :       info.bShootable = false;

	mov	ecx, DWORD PTR _info$133671[ebp]
	mov	BYTE PTR [ecx+41], 0
$LN1@UpdateWith@2:

; 106  :     }
; 107  :     
; 108  :     //record the time it was sensed
; 109  :     info.fTimeLastSensed = (double)Clock->GetCurrentTime();

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	mov	edx, DWORD PTR _info$133671[ebp]
	fstp	QWORD PTR [edx]
$LN3@UpdateWith@2:

; 110  :   }
; 111  : }

	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?UpdateWithDamageSource@Raven_SensoryMemory@@QAEXPAVAbstRaven_Bot@@H@Z ENDP ; Raven_SensoryMemory::UpdateWithDamageSource
_TEXT	ENDS
PUBLIC	?isSecondInFOVOfFirst@@YA_NUVector2D@@00N@Z	; isSecondInFOVOfFirst
PUBLIC	?Facing@AbstRaven_Bot@@QBE?AUVector2D@@XZ	; AbstRaven_Bot::Facing
PUBLIC	?FieldOfView@AbstRaven_Bot@@QBENXZ		; AbstRaven_Bot::FieldOfView
PUBLIC	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
PUBLIC	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
PUBLIC	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
PUBLIC	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
PUBLIC	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator=
PUBLIC	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	?GetAllBots@Raven_Game@@QBEABV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ; Raven_Game::GetAllBots
PUBLIC	?UpdateVision@Raven_SensoryMemory@@QAEXXZ	; Raven_SensoryMemory::UpdateVision
xdata$x	SEGMENT
__unwindtable$?UpdateVision@Raven_SensoryMemory@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateVision@Raven_SensoryMemory@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateVision@Raven_SensoryMemory@@QAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateVision@Raven_SensoryMemory@@QAEXXZ$2
__ehfuncinfo$?UpdateVision@Raven_SensoryMemory@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?UpdateVision@Raven_SensoryMemory@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv217 = -184						; size = 4
tv218 = -180						; size = 4
tv215 = -176						; size = 4
tv69 = -172						; size = 4
$T143423 = -168						; size = 16
$T143422 = -152						; size = 16
$T143421 = -136						; size = 16
$T143420 = -120						; size = 16
$T143419 = -104						; size = 16
$T143418 = -88						; size = 16
$T143417 = -72						; size = 12
$T143416 = -57						; size = 1
$T143415 = -56						; size = 12
_info$133828 = -44					; size = 4
_curBot$ = -36						; size = 12
_bots$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?UpdateVision@Raven_SensoryMemory@@QAEXXZ PROC		; Raven_SensoryMemory::UpdateVision
; _this$ = ecx

; 120  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateVision@Raven_SensoryMemory@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 172				; 000000acH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-184]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 121  :   //for each bot in the world test to see if it is visible to the owner of
; 122  :   //this class
; 123  :   const std::list<AbstRaven_Bot*>& bots = m_pOwner->GetWorld()->GetAllBots();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ ; AbstRaven_Bot::GetWorld
	mov	ecx, eax
	call	?GetAllBots@Raven_Game@@QBEABV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ; Raven_Game::GetAllBots
	mov	DWORD PTR _bots$[ebp], eax

; 124  :   std::list<AbstRaven_Bot*>::const_iterator curBot;

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 125  :   for (curBot = bots.begin(); curBot!=bots.end(); ++curBot)

	lea	ecx, DWORD PTR $T143415[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bots$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv215[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv215[ebp]
	push	eax
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143415[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN9@UpdateVisi
$LN8@UpdateVisi:
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
$LN9@UpdateVisi:
	lea	ecx, DWORD PTR $T143417[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bots$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv217[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv217[ebp]
	push	eax
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	mov	BYTE PTR $T143416[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143417[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T143416[ebp]
	test	ecx, ecx
	je	$LN7@UpdateVisi

; 126  :   {
; 127  :     //make sure the bot being examined is not this bot
; 128  :     if (m_pOwner != *curBot)

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	je	$LN1@UpdateVisi

; 129  :     {
; 130  :       //make sure it is part of the memory map
; 131  :       MakeNewRecordIfNotAlreadyPresent(*curBot);

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeNewRecordIfNotAlreadyPresent@Raven_SensoryMemory@@AAEXPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::MakeNewRecordIfNotAlreadyPresent

; 132  : 
; 133  :       //get a reference to this bot's data
; 134  :       MemoryRecord& info = m_MemoryMap[*curBot];

	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[]
	mov	DWORD PTR _info$133828[ebp], eax

; 135  : 
; 136  :       //test if there is LOS between bots 
; 137  :       if (m_pOwner->GetWorld()->isLOSOkay(m_pOwner->Pos(), (*curBot)->Pos()))

	lea	eax, DWORD PTR $T143418[ebp]
	push	eax
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	lea	ecx, DWORD PTR $T143419[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetWorld@AbstRaven_Bot@@QAEQAVRaven_Game@@XZ ; AbstRaven_Bot::GetWorld
	mov	ecx, eax
	call	?isLOSOkay@Raven_Game@@QBE_NUVector2D@@0@Z ; Raven_Game::isLOSOkay
	movzx	edx, al
	test	edx, edx
	je	$LN5@UpdateVisi

; 138  :       {
; 139  :         info.bShootable = true;

	mov	eax, DWORD PTR _info$133828[ebp]
	mov	BYTE PTR [eax+41], 1

; 140  : 
; 141  :               //test if the bot is within FOV
; 142  :         if (isSecondInFOVOfFirst(m_pOwner->Pos(),
; 143  :                                  m_pOwner->Facing(),
; 144  :                                  (*curBot)->Pos(),
; 145  :                                   m_pOwner->FieldOfView()))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FieldOfView@AbstRaven_Bot@@QBENXZ	; AbstRaven_Bot::FieldOfView
	sub	esp, 8
	fstp	QWORD PTR [esp]
	lea	edx, DWORD PTR $T143420[ebp]
	push	edx
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	lea	ecx, DWORD PTR $T143421[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Facing@AbstRaven_Bot@@QBE?AUVector2D@@XZ ; AbstRaven_Bot::Facing
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	lea	ecx, DWORD PTR $T143422[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	call	?isSecondInFOVOfFirst@@YA_NUVector2D@@00N@Z ; isSecondInFOVOfFirst
	add	esp, 56					; 00000038H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@UpdateVisi

; 146  :         {
; 147  :           info.fTimeLastSensed     = Clock->GetCurrentTime();

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	mov	edx, DWORD PTR _info$133828[ebp]
	fstp	QWORD PTR [edx]

; 148  :           info.vLastSensedPosition = (*curBot)->Pos();

	lea	eax, DWORD PTR $T143423[ebp]
	push	eax
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos
	mov	ecx, DWORD PTR _info$133828[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax

; 149  :           info.fTimeLastVisible    = Clock->GetCurrentTime();

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	mov	ecx, DWORD PTR _info$133828[ebp]
	fstp	QWORD PTR [ecx+16]

; 150  : 
; 151  :           if (info.bWithinFOV == false)

	mov	edx, DWORD PTR _info$133828[ebp]
	movzx	eax, BYTE PTR [edx+40]
	test	eax, eax
	jne	SHORT $LN3@UpdateVisi

; 152  :           {
; 153  :             info.bWithinFOV           = true;

	mov	ecx, DWORD PTR _info$133828[ebp]
	mov	BYTE PTR [ecx+40], 1

; 154  :             info.fTimeBecameVisible    = info.fTimeLastSensed;

	mov	edx, DWORD PTR _info$133828[ebp]
	mov	eax, DWORD PTR _info$133828[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR [edx+8]
$LN3@UpdateVisi:

; 155  :           
; 156  :           }
; 157  :         }
; 158  : 
; 159  :         else

	jmp	SHORT $LN2@UpdateVisi
$LN4@UpdateVisi:

; 160  :         {
; 161  :           info.bWithinFOV = false;         

	mov	ecx, DWORD PTR _info$133828[ebp]
	mov	BYTE PTR [ecx+40], 0
$LN2@UpdateVisi:

; 162  :         }
; 163  :       }
; 164  : 
; 165  :       else

	jmp	SHORT $LN1@UpdateVisi
$LN5@UpdateVisi:

; 166  :       {
; 167  :         info.bShootable = false;

	mov	edx, DWORD PTR _info$133828[ebp]
	mov	BYTE PTR [edx+41], 0

; 168  :         info.bWithinFOV = false;

	mov	eax, DWORD PTR _info$133828[ebp]
	mov	BYTE PTR [eax+40], 0
$LN1@UpdateVisi:

; 169  :       }
; 170  :     }
; 171  :   }//next bot

	jmp	$LN8@UpdateVisi
$LN7@UpdateVisi:

; 172  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curBot$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@UpdateVisi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 184				; 000000b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@UpdateVisi:
	DD	1
	DD	$LN17@UpdateVisi
$LN17@UpdateVisi:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN15@UpdateVisi
$LN15@UpdateVisi:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateVision@Raven_SensoryMemory@@QAEXXZ$0:
	lea	ecx, DWORD PTR _curBot$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?UpdateVision@Raven_SensoryMemory@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T143415[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?UpdateVision@Raven_SensoryMemory@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T143417[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?UpdateVision@Raven_SensoryMemory@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateVision@Raven_SensoryMemory@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateVision@Raven_SensoryMemory@@QAEXXZ ENDP		; Raven_SensoryMemory::UpdateVision
PUBLIC	__real@4000000000000000
PUBLIC	?Dot@Vector2D@@QBENABU1@@Z			; Vector2D::Dot
PUBLIC	?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z		; Vec2DNormalize
PUBLIC	??G@YA?AUVector2D@@ABU0@0@Z			; operator-
EXTRN	_cos:PROC
;	COMDAT __real@4000000000000000
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\2d\vector2d.h
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?isSecondInFOVOfFirst@@YA_NUVector2D@@00N@Z
_TEXT	SEGMENT
tv77 = -52						; size = 4
tv128 = -48						; size = 8
$T143435 = -40						; size = 16
_toTarget$ = -20					; size = 16
_posFirst$ = 8						; size = 16
_facingFirst$ = 24					; size = 16
_posSecond$ = 40					; size = 16
_fov$ = 56						; size = 8
?isSecondInFOVOfFirst@@YA_NUVector2D@@00N@Z PROC	; isSecondInFOVOfFirst, COMDAT

; 424  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 425  :   Vector2D toTarget = Vec2DNormalize(posSecond - posFirst);

	lea	eax, DWORD PTR _posFirst$[ebp]
	push	eax
	lea	ecx, DWORD PTR _posSecond$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T143435[ebp]
	push	edx
	call	??G@YA?AUVector2D@@ABU0@0@Z		; operator-
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR _toTarget$[ebp]
	push	eax
	call	?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z	; Vec2DNormalize
	add	esp, 8

; 426  : 
; 427  :   return facingFirst.Dot(toTarget) >= cos(fov/2.0);

	lea	ecx, DWORD PTR _toTarget$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _facingFirst$[ebp]
	call	?Dot@Vector2D@@QBENABU1@@Z		; Vector2D::Dot
	fld	QWORD PTR _fov$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fstp	QWORD PTR tv128[ebp]
	call	_cos
	add	esp, 8
	fcomp	QWORD PTR tv128[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN3@isSecondIn
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@isSecondIn
$LN3@isSecondIn:
	mov	DWORD PTR tv77[ebp], 0
$LN4@isSecondIn:
	mov	al, BYTE PTR tv77[ebp]

; 428  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@isSecondIn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@isSecondIn:
	DD	1
	DD	$LN6@isSecondIn
$LN6@isSecondIn:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN5@isSecondIn
$LN5@isSecondIn:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
?isSecondInFOVOfFirst@@YA_NUVector2D@@00N@Z ENDP	; isSecondInFOVOfFirst
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Dot@Vector2D@@QBENABU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v2$ = 8						; size = 4
?Dot@Vector2D@@QBENABU1@@Z PROC				; Vector2D::Dot, COMDAT
; _this$ = ecx

; 148  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 149  :   return x*v2.x + y*v2.y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]
	fld	QWORD PTR [eax]
	fmul	QWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v2$[ebp]
	fld	QWORD PTR [edx+8]
	fmul	QWORD PTR [eax+8]
	faddp	ST(1), ST(0)

; 150  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Dot@Vector2D@@QBENABU1@@Z ENDP				; Vector2D::Dot
_TEXT	ENDS
PUBLIC	?epsilon@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::epsilon
PUBLIC	?Length@Vector2D@@QBENXZ			; Vector2D::Length
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z
_TEXT	SEGMENT
_vector_length$ = -32					; size = 8
_vec$ = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z PROC		; Vec2DNormalize, COMDAT

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 259  :   Vector2D vec = v;

	mov	eax, DWORD PTR _v$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _vec$[ebp]
	fld	QWORD PTR [eax+8]
	fstp	QWORD PTR _vec$[ebp+8]

; 260  : 
; 261  :   double vector_length = vec.Length();

	lea	ecx, DWORD PTR _vec$[ebp]
	call	?Length@Vector2D@@QBENXZ		; Vector2D::Length
	fstp	QWORD PTR _vector_length$[ebp]

; 262  : 
; 263  :   if (vector_length > std::numeric_limits<double>::epsilon())

	call	?epsilon@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::epsilon
	fcomp	QWORD PTR _vector_length$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN1@Vec2DNorma

; 264  :   {
; 265  :     vec.x /= vector_length;

	fld	QWORD PTR _vec$[ebp]
	fdiv	QWORD PTR _vector_length$[ebp]
	fstp	QWORD PTR _vec$[ebp]

; 266  :     vec.y /= vector_length;

	fld	QWORD PTR _vec$[ebp+8]
	fdiv	QWORD PTR _vector_length$[ebp]
	fstp	QWORD PTR _vec$[ebp+8]
$LN1@Vec2DNorma:

; 267  :   }
; 268  : 
; 269  :   return vec;

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	fld	QWORD PTR _vec$[ebp]
	fstp	QWORD PTR [ecx]
	fld	QWORD PTR _vec$[ebp+8]
	fstp	QWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 270  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Vec2DNorma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@Vec2DNorma:
	DD	1
	DD	$LN5@Vec2DNorma
$LN5@Vec2DNorma:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN4@Vec2DNorma
$LN4@Vec2DNorma:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z ENDP		; Vec2DNormalize
_TEXT	ENDS
PUBLIC	__real@3cb0000000000000
;	COMDAT __real@3cb0000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@3cb0000000000000 DQ 03cb0000000000000r	; 2.22045e-016
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?epsilon@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?epsilon@?$numeric_limits@N@std@@SANXZ PROC		; std::numeric_limits<double>::epsilon, COMDAT

; 1246 : 		{	// return smallest effective increment from 1.0

	push	ebp
	mov	ebp, esp

; 1247 : 		return (DBL_EPSILON);

	fld	QWORD PTR __real@3cb0000000000000

; 1248 : 		}

	pop	ebp
	ret	0
?epsilon@?$numeric_limits@N@std@@SANXZ ENDP		; std::numeric_limits<double>::epsilon
_TEXT	ENDS
EXTRN	_sqrt:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\2d\vector2d.h
;	COMDAT ?Length@Vector2D@@QBENXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Length@Vector2D@@QBENXZ PROC				; Vector2D::Length, COMDAT
; _this$ = ecx

; 128  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 129  :   return sqrt(x * x + y * y);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax]
	fmul	QWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [edx+8]
	fmul	QWORD PTR [eax+8]
	faddp	ST(1), ST(0)
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8

; 130  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Vector2D@@QBENXZ ENDP				; Vector2D::Length
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??G@YA?AUVector2D@@ABU0@0@Z
_TEXT	SEGMENT
_result$ = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
_lhs$ = 12						; size = 4
_rhs$ = 16						; size = 4
??G@YA?AUVector2D@@ABU0@0@Z PROC			; operator-, COMDAT

; 349  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 350  :   Vector2D result(lhs);

	mov	eax, DWORD PTR _lhs$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _result$[ebp]
	fld	QWORD PTR [eax+8]
	fstp	QWORD PTR _result$[ebp+8]

; 351  :   result.x -= rhs.x;

	mov	ecx, DWORD PTR _rhs$[ebp]
	fld	QWORD PTR _result$[ebp]
	fsub	QWORD PTR [ecx]
	fstp	QWORD PTR _result$[ebp]

; 352  :   result.y -= rhs.y;

	mov	edx, DWORD PTR _rhs$[ebp]
	fld	QWORD PTR _result$[ebp+8]
	fsub	QWORD PTR [edx+8]
	fstp	QWORD PTR _result$[ebp+8]

; 353  :   
; 354  :   return result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fld	QWORD PTR _result$[ebp]
	fstp	QWORD PTR [eax]
	fld	QWORD PTR _result$[ebp+8]
	fstp	QWORD PTR [eax+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 355  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@operator@2:
	DD	1
	DD	$LN4@operator@2
$LN4@operator@2:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@operator@2
$LN3@operator@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??G@YA?AUVector2D@@ABU0@0@Z ENDP			; operator-
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\abstraven_bot.h
_TEXT	ENDS
;	COMDAT ?Facing@AbstRaven_Bot@@QBE?AUVector2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Facing@AbstRaven_Bot@@QBE?AUVector2D@@XZ PROC		; AbstRaven_Bot::Facing, COMDAT
; _this$ = ecx

; 161  :   Vector2D      Facing()const{return m_vFacing;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Facing@AbstRaven_Bot@@QBE?AUVector2D@@XZ ENDP		; AbstRaven_Bot::Facing
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?FieldOfView@AbstRaven_Bot@@QBENXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FieldOfView@AbstRaven_Bot@@QBENXZ PROC			; AbstRaven_Bot::FieldOfView, COMDAT
; _this$ = ecx

; 162  :   double        FieldOfView()const{return m_dFieldOfView;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+240]
	mov	esp, ebp
	pop	ebp
	ret	0
?FieldOfView@AbstRaven_Bot@@QBENXZ ENDP			; AbstRaven_Bot::FieldOfView
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_game.h
_TEXT	ENDS
;	COMDAT ?GetAllBots@Raven_Game@@QBEABV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAllBots@Raven_Game@@QBEABV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ PROC ; Raven_Game::GetAllBots, COMDAT
; _this$ = ecx

; 167  :   const std::list<AbstRaven_Bot*>&             GetAllBots()const{return m_Bots;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAllBots@Raven_Game@@QBEABV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ENDP ; Raven_Game::GetAllBots
_TEXT	ENDS
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator=
_TEXT	ENDS
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
PUBLIC	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::push_back
PUBLIC	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
PUBLIC	??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ; Raven_SensoryMemory::GetListOfRecentlySensedOpponents
xdata$x	SEGMENT
__unwindtable$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$2
__ehfuncinfo$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv163 = -96						; size = 4
tv76 = -92						; size = 4
$T143490 = -88						; size = 4
$T143485 = -84						; size = 12
$T143484 = -69						; size = 1
_curRecord$ = -64					; size = 12
_CurrentTime$ = -48					; size = 8
_opponents$ = -36					; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ PROC ; Raven_SensoryMemory::GetListOfRecentlySensedOpponents
; _this$ = ecx

; 181  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143490[ebp], 0

; 182  :   //this will store all the opponents the bot can remember
; 183  :   std::list<AbstRaven_Bot*> opponents;

	lea	ecx, DWORD PTR _opponents$[ebp]
	call	??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 184  : 
; 185  :   double CurrentTime = Clock->GetCurrentTime();

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	fstp	QWORD PTR _CurrentTime$[ebp]

; 186  : 
; 187  :   MemoryMap::const_iterator curRecord = m_MemoryMap.begin();

	lea	eax, DWORD PTR _curRecord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jmp	SHORT $LN4@GetListOfR
$LN3@GetListOfR:

; 188  :   for (curRecord; curRecord!=m_MemoryMap.end(); ++curRecord)

	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
$LN4@GetListOfR:
	lea	ecx, DWORD PTR $T143485[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv76[ebp], eax
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv163[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv163[ebp]
	push	eax
	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143484[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T143485[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T143484[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetListOfR

; 189  :   {
; 190  :     //if this bot has been updated in the memory recently, add to list
; 191  :     if ( (CurrentTime - curRecord->second.fTimeLastSensed) <= m_dMemorySpan)

	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	fld	QWORD PTR _CurrentTime$[ebp]
	fsub	QWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	fcomp	QWORD PTR [edx+24]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN1@GetListOfR

; 192  :     {
; 193  :       opponents.push_back(curRecord->first);

	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	push	eax
	lea	ecx, DWORD PTR _opponents$[ebp]
	call	?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::push_back
$LN1@GetListOfR:

; 194  :     }
; 195  :   }

	jmp	SHORT $LN3@GetListOfR
$LN2@GetListOfR:

; 196  : 
; 197  :   return opponents;

	lea	eax, DWORD PTR _opponents$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	ecx, DWORD PTR $T143490[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143490[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _opponents$[ebp]
	call	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 198  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@GetListOfR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN16@GetListOfR:
	DD	2
	DD	$LN15@GetListOfR
$LN15@GetListOfR:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN12@GetListOfR
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN13@GetListOfR
$LN13@GetListOfR:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN12@GetListOfR:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _opponents$[ebp]
	jmp	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$1:
	lea	ecx, DWORD PTR _curRecord$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$2:
	lea	ecx, DWORD PTR $T143485[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ$3:
	mov	eax, DWORD PTR $T143490[ebp]
	and	eax, 1
	je	$LN11@GetListOfR
	and	DWORD PTR $T143490[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
$LN11@GetListOfR:
	ret	0
__ehhandler$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ENDP ; Raven_SensoryMemory::GetListOfRecentlySensedOpponents
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
PUBLIC	?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::isOpponentShootable
xdata$x	SEGMENT
__unwindtable$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv135 = -64						; size = 4
tv70 = -60						; size = 4
$T143504 = -54						; size = 1
$T143503 = -53						; size = 1
$T143502 = -52						; size = 12
$T143501 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::isOpponentShootable
; _this$ = ecx

; 206  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 207  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 208  :  
; 209  :   if (it != m_MemoryMap.end())

	lea	edx, DWORD PTR $T143502[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143501[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143502[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T143501[ebp]
	test	edx, edx
	je	SHORT $LN1@isOpponent

; 210  :   {
; 211  :     return it->second.bShootable;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	mov	al, BYTE PTR [eax+49]
	mov	BYTE PTR $T143503[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T143503[ebp]
	jmp	SHORT $LN2@isOpponent
$LN1@isOpponent:

; 212  :   }
; 213  : 
; 214  :   return false;

	mov	BYTE PTR $T143504[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T143504[ebp]
$LN2@isOpponent:

; 215  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@isOpponent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@isOpponent:
	DD	1
	DD	$LN8@isOpponent
$LN8@isOpponent:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@isOpponent
$LN6@isOpponent:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143502[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?isOpponentShootable@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::isOpponentShootable
PUBLIC	?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::isOpponentWithinFOV
xdata$x	SEGMENT
__unwindtable$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv135 = -64						; size = 4
tv70 = -60						; size = 4
$T143518 = -54						; size = 1
$T143517 = -53						; size = 1
$T143516 = -52						; size = 12
$T143515 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::isOpponentWithinFOV
; _this$ = ecx

; 222  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 223  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 224  :  
; 225  :   if (it != m_MemoryMap.end())

	lea	edx, DWORD PTR $T143516[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143515[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143516[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T143515[ebp]
	test	edx, edx
	je	SHORT $LN1@isOpponent@2

; 226  :   {
; 227  :     return it->second.bWithinFOV;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	mov	al, BYTE PTR [eax+48]
	mov	BYTE PTR $T143517[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T143517[ebp]
	jmp	SHORT $LN2@isOpponent@2
$LN1@isOpponent@2:

; 228  :   }
; 229  : 
; 230  :   return false;

	mov	BYTE PTR $T143518[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T143518[ebp]
$LN2@isOpponent@2:

; 231  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@isOpponent@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@isOpponent@2:
	DD	1
	DD	$LN8@isOpponent@2
$LN8@isOpponent@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@isOpponent@2
$LN6@isOpponent@2:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143516[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?isOpponentWithinFOV@Raven_SensoryMemory@@QBE_NPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::isOpponentWithinFOV
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::GetLastRecordedPositionOfOpponent
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv140 = -72						; size = 4
tv70 = -68						; size = 4
$T143531 = -64						; size = 12
$T143530 = -52						; size = 12
$T143529 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_pOpponent$ = 12					; size = 4
?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::GetLastRecordedPositionOfOpponent
; _this$ = ecx

; 238  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 239  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 240  :  
; 241  :   if (it != m_MemoryMap.end())

	lea	edx, DWORD PTR $T143530[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143529[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143530[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T143529[ebp]
	test	edx, edx
	je	SHORT $LN1@GetLastRec

; 242  :   {
; 243  :     return it->second.vLastSensedPosition;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	add	eax, 32					; 00000020H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@GetLastRec
$LN1@GetLastRec:

; 244  :   }
; 245  : 
; 246  :   throw std::runtime_error("< Raven_SensoryMemory::GetLastRecordedPositionOfOpponent>: Attempting to get position of unrecorded bot");

	push	OFFSET $SG134077
	lea	ecx, DWORD PTR $T143531[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T143531[ebp]
	push	ecx
	call	__CxxThrowException@8

; 247  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN3@GetLastRec:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetLastRec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@GetLastRec:
	DD	1
	DD	$LN8@GetLastRec
$LN8@GetLastRec:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@GetLastRec
$LN6@GetLastRec:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143530[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLastRecordedPositionOfOpponent@Raven_SensoryMemory@@QBE?AUVector2D@@PAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::GetLastRecordedPositionOfOpponent
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx

; 170  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@

; 171  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
PUBLIC	?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::GetTimeOpponentHasBeenVisible
xdata$x	SEGMENT
__unwindtable$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv188 = -92						; size = 8
tv135 = -84						; size = 4
tv160 = -80						; size = 4
tv70 = -76						; size = 4
$T143561 = -72						; size = 4
$T143559 = -68						; size = 8
$T143558 = -60						; size = 8
$T143555 = -52						; size = 12
$T143554 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::GetTimeOpponentHasBeenVisible
; _this$ = ecx

; 254  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143561[ebp], 0

; 255  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 256  :  
; 257  :   if (it != m_MemoryMap.end() && it->second.bWithinFOV)

	lea	edx, DWORD PTR $T143555[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv160[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T143561[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143561[ebp], ecx
	mov	edx, DWORD PTR tv160[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@GetTimeOpp
	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	je	SHORT $LN4@GetTimeOpp
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN5@GetTimeOpp
$LN4@GetTimeOpp:
	mov	DWORD PTR tv135[ebp], 0
$LN5@GetTimeOpp:
	mov	dl, BYTE PTR tv135[ebp]
	mov	BYTE PTR $T143554[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T143561[ebp]
	and	eax, 1
	je	SHORT $LN9@GetTimeOpp
	and	DWORD PTR $T143561[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143555[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN9@GetTimeOpp:
	movzx	ecx, BYTE PTR $T143554[ebp]
	test	ecx, ecx
	je	SHORT $LN1@GetTimeOpp

; 258  :   {
; 259  :     return Clock->GetCurrentTime() - it->second.fTimeBecameVisible;

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	lea	ecx, DWORD PTR _it$[ebp]
	fstp	QWORD PTR tv188[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	fld	QWORD PTR tv188[ebp]
	fsub	QWORD PTR [eax+16]
	fstp	QWORD PTR $T143558[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	fld	QWORD PTR $T143558[ebp]
	jmp	SHORT $LN2@GetTimeOpp
$LN1@GetTimeOpp:

; 260  :   }
; 261  : 
; 262  :   return 0;

	fldz
	fstp	QWORD PTR $T143559[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	fld	QWORD PTR $T143559[ebp]
$LN2@GetTimeOpp:

; 263  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GetTimeOpp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@GetTimeOpp:
	DD	1
	DD	$LN12@GetTimeOpp
$LN12@GetTimeOpp:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN10@GetTimeOpp
$LN10@GetTimeOpp:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$1:
	mov	eax, DWORD PTR $T143561[ebp]
	and	eax, 1
	je	$LN8@GetTimeOpp
	and	DWORD PTR $T143561[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143555[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN8@GetTimeOpp:
	ret	0
__ehhandler$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTimeOpponentHasBeenVisible@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::GetTimeOpponentHasBeenVisible
PUBLIC	?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::GetDamage
xdata$x	SEGMENT
__unwindtable$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv135 = -68						; size = 4
tv70 = -64						; size = 4
$T143576 = -60						; size = 4
$T143575 = -56						; size = 4
$T143574 = -52						; size = 12
$T143573 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::GetDamage
; _this$ = ecx

; 266  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 267  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 268  :  
; 269  :   if (it != m_MemoryMap.end())

	lea	edx, DWORD PTR $T143574[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143573[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143574[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T143573[ebp]
	test	edx, edx
	je	SHORT $LN1@GetDamage

; 270  :   {
; 271  :     return it->second.iRecentDamage;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	mov	eax, DWORD PTR [eax+52]
	mov	DWORD PTR $T143575[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T143575[ebp]
	jmp	SHORT $LN2@GetDamage
$LN1@GetDamage:

; 272  :   }
; 273  : 
; 274  :   return 0;

	mov	DWORD PTR $T143576[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T143576[ebp]
$LN2@GetDamage:

; 275  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetDamage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@GetDamage:
	DD	1
	DD	$LN8@GetDamage
$LN8@GetDamage:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@GetDamage
$LN6@GetDamage:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143574[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDamage@Raven_SensoryMemory@@QBEHPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::GetDamage
PUBLIC	?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::GetTimeOpponentHasBeenOutOfView
xdata$x	SEGMENT
__unwindtable$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv160 = -84						; size = 8
tv139 = -76						; size = 4
tv70 = -72						; size = 4
$T143590 = -68						; size = 8
$T143589 = -60						; size = 8
$T143588 = -52						; size = 12
$T143587 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::GetTimeOpponentHasBeenOutOfView
; _this$ = ecx

; 283  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 284  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 285  :  
; 286  :   if (it != m_MemoryMap.end())

	lea	edx, DWORD PTR $T143588[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv139[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv139[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143587[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143588[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T143587[ebp]
	test	edx, edx
	je	SHORT $LN1@GetTimeOpp@2

; 287  :   {
; 288  :     return Clock->GetCurrentTime() - it->second.fTimeLastVisible;

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	lea	ecx, DWORD PTR _it$[ebp]
	fstp	QWORD PTR tv160[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	fld	QWORD PTR tv160[ebp]
	fsub	QWORD PTR [eax+24]
	fstp	QWORD PTR $T143589[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	fld	QWORD PTR $T143589[ebp]
	jmp	SHORT $LN2@GetTimeOpp@2
$LN1@GetTimeOpp@2:

; 289  :   }
; 290  : 
; 291  :   return MaxDouble;

	fld	QWORD PTR _MaxDouble
	fstp	QWORD PTR $T143590[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	fld	QWORD PTR $T143590[ebp]
$LN2@GetTimeOpp@2:

; 292  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetTimeOpp@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@GetTimeOpp@2:
	DD	1
	DD	$LN8@GetTimeOpp@2
$LN8@GetTimeOpp@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@GetTimeOpp@2
$LN6@GetTimeOpp@2:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$1:
	lea	ecx, DWORD PTR $T143588[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTimeOpponentHasBeenOutOfView@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::GetTimeOpponentHasBeenOutOfView
PUBLIC	?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z ; Raven_SensoryMemory::GetTimeSinceLastSensed
xdata$x	SEGMENT
__unwindtable$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$1
__ehfuncinfo$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv188 = -92						; size = 8
tv135 = -84						; size = 4
tv160 = -80						; size = 4
tv70 = -76						; size = 4
$T143608 = -72						; size = 4
$T143606 = -68						; size = 8
$T143605 = -60						; size = 8
$T143602 = -52						; size = 12
$T143601 = -37						; size = 1
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOpponent$ = 8						; size = 4
?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z PROC ; Raven_SensoryMemory::GetTimeSinceLastSensed
; _this$ = ecx

; 299  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143608[ebp], 0

; 300  :   MemoryMap::const_iterator it = m_MemoryMap.find(pOpponent);

	lea	eax, DWORD PTR _pOpponent$[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 301  :  
; 302  :   if (it != m_MemoryMap.end() && it->second.bWithinFOV)

	lea	edx, DWORD PTR $T143602[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv160[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T143608[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143608[ebp], ecx
	mov	edx, DWORD PTR tv160[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@GetTimeSin
	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	je	SHORT $LN4@GetTimeSin
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN5@GetTimeSin
$LN4@GetTimeSin:
	mov	DWORD PTR tv135[ebp], 0
$LN5@GetTimeSin:
	mov	dl, BYTE PTR tv135[ebp]
	mov	BYTE PTR $T143601[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T143608[ebp]
	and	eax, 1
	je	SHORT $LN9@GetTimeSin
	and	DWORD PTR $T143608[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143602[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN9@GetTimeSin:
	movzx	ecx, BYTE PTR $T143601[ebp]
	test	ecx, ecx
	je	SHORT $LN1@GetTimeSin

; 303  :   {
; 304  :     return Clock->GetCurrentTime() - it->second.fTimeLastSensed;

	call	?Instance@CrudeTimer@@SAPAV1@XZ		; CrudeTimer::Instance
	mov	ecx, eax
	call	?GetTickCount@CrudeTimer@@QAENXZ	; CrudeTimer::GetTickCount
	lea	ecx, DWORD PTR _it$[ebp]
	fstp	QWORD PTR tv188[ebp]
	call	??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
	fld	QWORD PTR tv188[ebp]
	fsub	QWORD PTR [eax+8]
	fstp	QWORD PTR $T143605[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	fld	QWORD PTR $T143605[ebp]
	jmp	SHORT $LN2@GetTimeSin
$LN1@GetTimeSin:

; 305  :   }
; 306  : 
; 307  :   return 0;

	fldz
	fstp	QWORD PTR $T143606[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	fld	QWORD PTR $T143606[ebp]
$LN2@GetTimeSin:

; 308  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GetTimeSin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@GetTimeSin:
	DD	1
	DD	$LN12@GetTimeSin
$LN12@GetTimeSin:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN10@GetTimeSin
$LN10@GetTimeSin:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z$1:
	mov	eax, DWORD PTR $T143608[ebp]
	and	eax, 1
	je	$LN8@GetTimeSin
	and	DWORD PTR $T143608[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143602[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN8@GetTimeSin:
	ret	0
__ehhandler$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTimeSinceLastSensed@Raven_SensoryMemory@@QBENPAVAbstRaven_Bot@@@Z ENDP ; Raven_SensoryMemory::GetTimeSinceLastSensed
PUBLIC	?Line@Cgdi@@QAEXNNNN@Z				; Cgdi::Line
PUBLIC	?BRadius@BaseGameEntity@@QBENXZ			; BaseGameEntity::BRadius
PUBLIC	?OrangePen@Cgdi@@QAEXXZ				; Cgdi::OrangePen
PUBLIC	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
PUBLIC	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
PUBLIC	?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ ; Raven_SensoryMemory::RenderBoxesAroundRecentlySensed
EXTRN	?Instance@Cgdi@@SAPAV1@XZ:PROC			; Cgdi::Instance
xdata$x	SEGMENT
__unwindtable$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$3
__ehfuncinfo$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv192 = -136						; size = 4
tv65 = -132						; size = 4
tv190 = -128						; size = 4
tv69 = -124						; size = 4
$T143622 = -120						; size = 12
$T143621 = -105						; size = 1
$T143620 = -104						; size = 12
_b$134183 = -92						; size = 8
_p$134181 = -80						; size = 16
_it$ = -56						; size = 12
_opponents$ = -36					; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ PROC ; Raven_SensoryMemory::RenderBoxesAroundRecentlySensed
; _this$ = ecx

; 315  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 316  :   std::list<AbstRaven_Bot*> opponents = GetListOfRecentlySensedOpponents();

	lea	eax, DWORD PTR _opponents$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetListOfRecentlySensedOpponents@Raven_SensoryMemory@@QBE?AV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@XZ ; Raven_SensoryMemory::GetListOfRecentlySensedOpponents
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 317  :   std::list<AbstRaven_Bot*>::const_iterator it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 318  :   for (it = opponents.begin(); it != opponents.end(); ++it)

	lea	ecx, DWORD PTR $T143620[ebp]
	push	ecx
	lea	ecx, DWORD PTR _opponents$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv190[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv190[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T143620[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN3@RenderBoxe
$LN2@RenderBoxe:
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
$LN3@RenderBoxe:
	lea	ecx, DWORD PTR $T143622[ebp]
	push	ecx
	lea	ecx, DWORD PTR _opponents$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv192[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv192[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	mov	BYTE PTR $T143621[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T143622[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T143621[ebp]
	test	ecx, ecx
	je	$LN1@RenderBoxe

; 319  :   {
; 320  :     gdi->OrangePen();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?OrangePen@Cgdi@@QAEXXZ			; Cgdi::OrangePen

; 321  :     Vector2D p = (*it)->Pos();

	lea	edx, DWORD PTR _p$134181[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?Pos@BaseGameEntity@@QBE?AUVector2D@@XZ	; BaseGameEntity::Pos

; 322  :     double   b = (*it)->BRadius();

	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	call	?BRadius@BaseGameEntity@@QBENXZ		; BaseGameEntity::BRadius
	fstp	QWORD PTR _b$134183[ebp]

; 323  :       
; 324  :     gdi->Line(p.x-b, p.y-b, p.x+b, p.y-b);

	fld	QWORD PTR _p$134181[ebp+8]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp+8]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?Line@Cgdi@@QAEXNNNN@Z			; Cgdi::Line

; 325  :     gdi->Line(p.x+b, p.y-b, p.x+b, p.y+b);

	fld	QWORD PTR _p$134181[ebp+8]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp+8]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?Line@Cgdi@@QAEXNNNN@Z			; Cgdi::Line

; 326  :     gdi->Line(p.x+b, p.y+b, p.x-b, p.y+b);

	fld	QWORD PTR _p$134181[ebp+8]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp+8]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?Line@Cgdi@@QAEXNNNN@Z			; Cgdi::Line

; 327  :     gdi->Line(p.x-b, p.y+b, p.x-b, p.y-b);

	fld	QWORD PTR _p$134181[ebp+8]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp+8]
	fadd	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	QWORD PTR _p$134181[ebp]
	fsub	QWORD PTR _b$134183[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?Line@Cgdi@@QAEXNNNN@Z			; Cgdi::Line

; 328  :   }

	jmp	$LN2@RenderBoxe
$LN1@RenderBoxe:

; 329  : 
; 330  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _opponents$[ebp]
	call	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@RenderBoxe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@RenderBoxe:
	DD	3
	DD	$LN14@RenderBoxe
$LN14@RenderBoxe:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN10@RenderBoxe
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN11@RenderBoxe
	DD	-80					; ffffffb0H
	DD	16					; 00000010H
	DD	$LN12@RenderBoxe
$LN12@RenderBoxe:
	DB	112					; 00000070H
	DB	0
$LN11@RenderBoxe:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN10@RenderBoxe:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$0:
	lea	ecx, DWORD PTR _opponents$[ebp]
	jmp	??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$1:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$2:
	lea	ecx, DWORD PTR $T143620[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ$3:
	lea	ecx, DWORD PTR $T143622[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RenderBoxesAroundRecentlySensed@Raven_SensoryMemory@@QBEXXZ ENDP ; Raven_SensoryMemory::RenderBoxesAroundRecentlySensed
EXTRN	__imp__SelectObject@8:PROC
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\cgdi.h
;	COMDAT ?OrangePen@Cgdi@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OrangePen@Cgdi@@QAEXXZ PROC				; Cgdi::OrangePen, COMDAT
; _this$ = ecx

; 144  :   void OrangePen() {if(m_hdc){SelectObject(m_hdc, m_OrangePen);}}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@OrangePen
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@OrangePen:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OrangePen@Cgdi@@QAEXXZ ENDP				; Cgdi::OrangePen
_TEXT	ENDS
EXTRN	__imp__LineTo@12:PROC
EXTRN	__imp__MoveToEx@16:PROC
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Line@Cgdi@@QAEXNNNN@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 8
_b$ = 16						; size = 8
_x$ = 24						; size = 8
_y$ = 32						; size = 8
?Line@Cgdi@@QAEXNNNN@Z PROC				; Cgdi::Line, COMDAT
; _this$ = ecx

; 256  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 257  :     MoveToEx(m_hdc, (int)a, (int)b, NULL);

	mov	esi, esp
	push	0
	fld	QWORD PTR _b$[ebp]
	call	__ftol2_sse
	push	eax
	fld	QWORD PTR _a$[ebp]
	call	__ftol2_sse
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__MoveToEx@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 258  :     LineTo(m_hdc, (int)x, (int)y);

	fld	QWORD PTR _y$[ebp]
	call	__ftol2_sse
	mov	esi, esp
	push	eax
	fld	QWORD PTR _x$[ebp]
	call	__ftol2_sse
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	call	DWORD PTR __imp__LineTo@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 259  :   }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?Line@Cgdi@@QAEXNNNN@Z ENDP				; Cgdi::Line
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\game\basegameentity.h
_TEXT	ENDS
;	COMDAT ?BRadius@BaseGameEntity@@QBENXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BRadius@BaseGameEntity@@QBENXZ PROC			; BaseGameEntity::BRadius, COMDAT
; _this$ = ecx

; 92   :   double       BRadius()const{return m_dBoundingRadius;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?BRadius@BaseGameEntity@@QBENXZ ENDP			; BaseGameEntity::BRadius
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::~_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*
PUBLIC	?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ	; Raven_SensoryMemory::isUnderAttack
xdata$x	SEGMENT
__unwindtable$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ$1
__ehfuncinfo$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\raven\raven_sensorymemory.cpp
xdata$x	ENDS
_TEXT	SEGMENT
tv132 = -64						; size = 4
tv70 = -60						; size = 4
$T143650 = -54						; size = 1
$T143649 = -53						; size = 1
$T143648 = -52						; size = 12
$T143647 = -37						; size = 1
_curRecord$ = -32					; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ PROC	; Raven_SensoryMemory::isUnderAttack
; _this$ = ecx

; 333  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 334  :   MemoryMap::const_iterator curRecord = m_MemoryMap.begin();

	lea	eax, DWORD PTR _curRecord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN4@isUnderAtt
$LN3@isUnderAtt:

; 335  :   for (curRecord; curRecord!=m_MemoryMap.end(); ++curRecord)

	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
$LN4@isUnderAtt:
	lea	ecx, DWORD PTR $T143648[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv70[ebp], eax
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv132[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv132[ebp]
	push	eax
	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
	mov	BYTE PTR $T143647[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143648[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T143647[ebp]
	test	ecx, ecx
	je	SHORT $LN2@isUnderAtt

; 336  :   {
; 337  :     //if this bot has hit us, return true
; 338  :     if ((*curRecord).second.iRecentDamage > 0)

	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*
	cmp	DWORD PTR [eax+52], 0
	jle	SHORT $LN1@isUnderAtt

; 339  : 		return true;

	mov	BYTE PTR $T143649[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T143649[ebp]
	jmp	SHORT $LN5@isUnderAtt
$LN1@isUnderAtt:

; 340  :   }

	jmp	SHORT $LN3@isUnderAtt
$LN2@isUnderAtt:

; 341  :   return false;

	mov	BYTE PTR $T143650[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curRecord$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T143650[ebp]
$LN5@isUnderAtt:

; 342  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@isUnderAtt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@isUnderAtt:
	DD	1
	DD	$LN11@isUnderAtt
$LN11@isUnderAtt:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN9@isUnderAtt
$LN9@isUnderAtt:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ$0:
	lea	ecx, DWORD PTR _curRecord$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ$1:
	lea	ecx, DWORD PTR $T143648[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?isUnderAttack@Raven_SensoryMemory@@QBE_NXZ ENDP	; Raven_SensoryMemory::isUnderAttack
PUBLIC	??0?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T143662 = -6						; size = 1
$T143661 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ PROC ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T143661[ebp]
	call	??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	push	eax
	lea	eax, DWORD PTR $T143662[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >

; 107  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*
PUBLIC	??4?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator=
PUBLIC	??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::insert<std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	??0?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord>
PUBLIC	??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ; std::less<AbstRaven_Bot *>::operator()
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z$3
__ehfuncinfo$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv205 = -204						; size = 4
tv157 = -200						; size = 4
tv203 = -196						; size = 4
tv146 = -192						; size = 4
tv198 = -188						; size = 4
tv69 = -184						; size = 4
$T143676 = -180						; size = 4
$T143674 = -176						; size = 4
$T143673 = -172						; size = 12
$T143672 = -160						; size = 4
$T143671 = -156						; size = 48
$T143670 = -108						; size = 56
$T143667 = -52						; size = 12
$T143666 = -37						; size = 1
__Where$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z PROC ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[], COMDAT
; _this$ = ecx

; 210  : 		{	// find element matching _Keyval or insert with default mapped

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143676[ebp], 0

; 211  : 		iterator _Where = this->lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 212  : 		if (_Where == this->end()
; 213  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

	lea	edx, DWORD PTR $T143667[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv198[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T143676[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143676[ebp], ecx
	mov	edx, DWORD PTR tv198[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@operator@3
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ; std::less<AbstRaven_Bot *>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@operator@3
	mov	DWORD PTR tv146[ebp], 0
	jmp	SHORT $LN5@operator@3
$LN4@operator@3:
	mov	DWORD PTR tv146[ebp], 1
$LN5@operator@3:
	mov	al, BYTE PTR tv146[ebp]
	mov	BYTE PTR $T143666[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T143676[ebp]
	and	ecx, 1
	je	SHORT $LN9@operator@3
	and	DWORD PTR $T143676[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143667[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN9@operator@3:
	movzx	edx, BYTE PTR $T143666[ebp]
	test	edx, edx
	je	SHORT $LN1@operator@3

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

	lea	ecx, DWORD PTR $T143671[ebp]
	call	??0MemoryRecord@@QAE@XZ			; MemoryRecord::MemoryRecord
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T143670[ebp]
	call	??0?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord>
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T143672[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv203[ebp], eax
	lea	eax, DWORD PTR $T143673[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::insert<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv205[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv205[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??4?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143673[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN1@operator@3:

; 216  : 		return ((*_Where).second);

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*
	add	eax, 8
	mov	DWORD PTR $T143674[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T143674[ebp]

; 217  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@operator@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN15@operator@3:
	DD	1
	DD	$LN14@operator@3
$LN14@operator@3:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN12@operator@3
$LN12@operator@3:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z$1:
	mov	eax, DWORD PTR $T143676[ebp]
	and	eax, 1
	je	$LN8@operator@3
	and	DWORD PTR $T143676[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143667[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN8@operator@3:
	ret	0
__unwindfunclet$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z$3:
	lea	ecx, DWORD PTR $T143673[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-200]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??A?$map@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@@std@@QAEAAVMemoryRecord@@ABQAVAbstRaven_Bot@@@Z ENDP ; std::map<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> > >::operator[]
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143694 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin, COMDAT
; _this$ = ecx

; 811  : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143694[ebp], 0

; 812  : 		return (const_iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	edx, DWORD PTR $T143694[ebp]
	or	edx, 1
	mov	DWORD PTR $T143694[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 813  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143699 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143699[ebp], 0

; 817  : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	eax, DWORD PTR $T143699[ebp]
	or	eax, 1
	mov	DWORD PTR $T143699[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 818  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143704 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end, COMDAT
; _this$ = ecx

; 821  : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143704[ebp], 0

; 822  : 		return (const_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	eax, DWORD PTR $T143704[ebp]
	or	eax, 1
	mov	DWORD PTR $T143704[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 823  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr
PUBLIC	??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ ; `string'
PUBLIC	??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
;	COMDAT ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
CONST	SEGMENT
??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv199 = -44						; size = 4
tv187 = -40						; size = 4
$T143714 = -36						; size = 4
__Pnode$ = -32						; size = 4
__Fixnodeparent$ = -28					; size = 4
__Fixnode$ = -24					; size = 4
__Erasednode$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143714[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN40@erase
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN41@erase
$LN40@erase:

; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");

	push	1198					; 000004aeH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN41@erase:

; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax

; 1200 : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++

; 1201 : 		_Orphan_ptr(*this, _Erasednode);

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr

; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))
; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");
; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return
; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;

	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase
$LN39@erase:

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1218 : 		else

	jmp	SHORT $LN38@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
$LN38@erase:

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax

; 1227 : 			if (!this->_Isnil(_Fixnode))

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase
$LN33@erase:

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1234 : 			else

	jmp	SHORT $LN32@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN45@erase
$LN44@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv187[ebp], eax
$LN45@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN46@erase
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv199[ebp], edx
	jmp	SHORT $LN47@erase
$LN46@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv199[ebp], eax
$LN47@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase:

; 1247 : 			}
; 1248 : 		else

	jmp	$LN27@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx

; 1257 : 			else

	jmp	$LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx

; 1261 : 				if (!this->_Isnil(_Fixnode))

	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase
$LN23@erase:

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1275 : 			else

	jmp	SHORT $LN22@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

	jmp	SHORT $LN18@erase
$LN17@erase:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1297 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

	jmp	$LN12@erase
$LN13@erase:

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1307 : 						_Fixnode = _Fixnodeparent;

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax

; 1308 : 						}
; 1309 : 					else

	jmp	$LN12@erase
$LN11@erase:

; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1315 : 							this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1316 : 							_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1323 : 						_Lrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

	jmp	$LN16@erase
$LN12@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else

	jmp	$LN8@erase
$LN15@erase:

; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1334 : 						_Rrotate(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx

; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

	jmp	$LN8@erase
$LN6@erase:

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1344 : 						_Fixnode = _Fixnodeparent;

	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx

; 1345 : 						}
; 1346 : 					else

	jmp	$LN8@erase
$LN4@erase:

; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1351 : 							this->_Color(_Pnode) = this->_Red;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1352 : 							_Lrotate(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1359 : 						_Rrotate(_Fixnodeparent);

	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate

; 1360 : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase
$LN8@erase:

; 1361 : 						}
; 1362 : 					}

	jmp	$LN17@erase
$LN16@erase:

; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 8

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

	push	1
	mov	eax, DWORD PTR __Erasednode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jbe	SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	ecx, DWORD PTR $T143714[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143714[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1376 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T143714[ebp]
	and	eax, 1
	je	$LN50@erase
	and	DWORD PTR $T143714[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN50@erase:
	ret	0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 174  : 		{	// get owning container

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		return (_Myproxy == 0 ? 0 : _Myproxy->_Mycont);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv66[ebp]

; 176  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$3
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv170 = -108						; size = 4
tv185 = -104						; size = 4
tv152 = -100						; size = 4
tv165 = -96						; size = 4
tv183 = -92						; size = 4
tv160 = -88						; size = 4
tv65 = -84						; size = 4
$T143735 = -80						; size = 4
$T143732 = -76						; size = 12
$T143731 = -64						; size = 12
$T143729 = -52						; size = 12
$T143728 = -40						; size = 4
__Where$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143735[ebp], 0

; 1424 : 		iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

	lea	edx, DWORD PTR $T143729[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv160[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T143735[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143735[ebp], ecx
	mov	edx, DWORD PTR tv160[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	push	1427					; 00000593H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@find
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T143732[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv165[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T143735[ebp]
	or	ecx, 2
	mov	DWORD PTR $T143735[ebp], ecx
	mov	edx, DWORD PTR tv165[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN4@find
$LN3@find:
	lea	eax, DWORD PTR $T143731[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv185[ebp], eax
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T143735[ebp]
	or	edx, 4
	mov	DWORD PTR $T143735[ebp], edx
	mov	eax, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv152[ebp], eax
$LN4@find:
	mov	ecx, DWORD PTR tv152[ebp]
	mov	DWORD PTR $T143728[ebp], ecx
	mov	edx, DWORD PTR $T143728[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T143735[ebp]
	or	eax, 8
	mov	DWORD PTR $T143735[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T143735[ebp]
	and	ecx, 4
	je	SHORT $LN14@find
	and	DWORD PTR $T143735[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T143731[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN14@find:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T143735[ebp]
	and	edx, 2
	je	SHORT $LN15@find
	and	DWORD PTR $T143735[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T143732[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN15@find:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T143735[ebp]
	and	eax, 1
	je	SHORT $LN16@find
	and	DWORD PTR $T143735[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143729[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN16@find:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1429 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@find
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN20@find:
	DD	1
	DD	$LN19@find
$LN19@find:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN17@find
$LN17@find:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$1:
	mov	eax, DWORD PTR $T143735[ebp]
	and	eax, 1
	je	$LN7@find
	and	DWORD PTR $T143735[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143729[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN7@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$2:
	mov	eax, DWORD PTR $T143735[ebp]
	and	eax, 2
	je	$LN9@find
	and	DWORD PTR $T143735[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T143732[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN9@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$3:
	mov	eax, DWORD PTR $T143735[ebp]
	and	eax, 4
	je	$LN11@find
	and	DWORD PTR $T143735[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T143731[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN11@find:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$4:
	mov	eax, DWORD PTR $T143735[ebp]
	and	eax, 8
	je	$LN13@find
	and	DWORD PTR $T143735[ebp], -9		; fffffff7H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN13@find:
	ret	0
__ehhandler$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$3
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv162 = -108						; size = 4
tv177 = -104						; size = 4
tv144 = -100						; size = 4
tv157 = -96						; size = 4
tv175 = -92						; size = 4
tv152 = -88						; size = 4
tv65 = -84						; size = 4
$T143765 = -80						; size = 4
$T143762 = -76						; size = 12
$T143761 = -64						; size = 12
$T143759 = -52						; size = 12
$T143758 = -40						; size = 4
__Where$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find, COMDAT
; _this$ = ecx

; 1432 : 		{	// find an element in nonmutable sequence that matches _Keyval

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143765[ebp], 0

; 1433 : 		const_iterator _Where = lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1434 : 		return (_Where == end()
; 1435 : 			|| _DEBUG_LT_PRED(this->comp,
; 1436 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1437 : 					? end() : _Where);

	lea	edx, DWORD PTR $T143759[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv152[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T143765[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143765[ebp], ecx
	mov	edx, DWORD PTR tv152[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find@2
	push	1436					; 0000059cH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@find@2
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T143762[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv175[ebp], eax
	mov	eax, DWORD PTR tv175[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T143765[ebp]
	or	ecx, 2
	mov	DWORD PTR $T143765[ebp], ecx
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv144[ebp], edx
	jmp	SHORT $LN4@find@2
$LN3@find@2:
	lea	eax, DWORD PTR $T143761[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv177[ebp], eax
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR tv162[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T143765[ebp]
	or	edx, 4
	mov	DWORD PTR $T143765[ebp], edx
	mov	eax, DWORD PTR tv162[ebp]
	mov	DWORD PTR tv144[ebp], eax
$LN4@find@2:
	mov	ecx, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T143758[ebp], ecx
	mov	edx, DWORD PTR $T143758[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T143765[ebp]
	or	eax, 8
	mov	DWORD PTR $T143765[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T143765[ebp]
	and	ecx, 4
	je	SHORT $LN14@find@2
	and	DWORD PTR $T143765[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T143761[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN14@find@2:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T143765[ebp]
	and	edx, 2
	je	SHORT $LN15@find@2
	and	DWORD PTR $T143765[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T143762[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN15@find@2:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T143765[ebp]
	and	eax, 1
	je	SHORT $LN16@find@2
	and	DWORD PTR $T143765[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143759[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN16@find@2:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1438 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@find@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN20@find@2:
	DD	1
	DD	$LN19@find@2
$LN19@find@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN17@find@2
$LN17@find@2:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$1:
	mov	eax, DWORD PTR $T143765[ebp]
	and	eax, 1
	je	$LN7@find@2
	and	DWORD PTR $T143765[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T143759[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN7@find@2:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$2:
	mov	eax, DWORD PTR $T143765[ebp]
	and	eax, 2
	je	$LN9@find@2
	and	DWORD PTR $T143765[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T143762[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN9@find@2:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$3:
	mov	eax, DWORD PTR $T143765[ebp]
	and	eax, 4
	je	$LN11@find@2
	and	DWORD PTR $T143765[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T143761[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN11@find@2:
	ret	0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$4:
	mov	eax, DWORD PTR $T143765[ebp]
	and	eax, 8
	je	$LN13@find@2
	and	DWORD PTR $T143765[ebp], -9		; fffffff7H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN13@find@2:
	ret	0
__ehhandler$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?find@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::find
PUBLIC	??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ	; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T143788 = -8						; size = 4
_this$ = -4						; size = 4
??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 607  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T143788[ebp], esp
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >

; 608  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
_TEXT	ENDS
PUBLIC	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv
PUBLIC	??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T143792 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 689  : 		{	// construct list by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 13					; 0000000dH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T143792[ebp], esp
	push	eax
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 690  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv

; 691  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 769  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 770  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy

; 771  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
PUBLIC	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143812 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin, COMDAT
; _this$ = ecx

; 781  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143812[ebp], 0

; 782  : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	ecx, DWORD PTR $T143812[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143812[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 783  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
_TEXT	ENDS
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143817 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin, COMDAT
; _this$ = ecx

; 786  : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143817[ebp], 0

; 787  : 		return (const_iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	ecx, DWORD PTR $T143817[ebp]
	or	ecx, 1
	mov	DWORD PTR $T143817[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 788  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143822 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end, COMDAT
; _this$ = ecx

; 791  : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143822[ebp], 0

; 792  : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	eax, DWORD PTR $T143822[ebp]
	or	eax, 1
	mov	DWORD PTR $T143822[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 793  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T143827 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end, COMDAT
; _this$ = ecx

; 796  : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143827[ebp], 0

; 797  : 		return (const_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	eax, DWORD PTR $T143827[ebp]
	or	eax, 1
	mov	DWORD PTR $T143827[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 798  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
_TEXT	ENDS
PUBLIC	?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert
PUBLIC	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv93 = -44						; size = 4
tv90 = -40						; size = 4
tv94 = -36						; size = 4
$T143832 = -32						; size = 12
$T143831 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::push_back, COMDAT
; _this$ = ecx

; 926  : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 927  : 		_Insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T143832[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv94[ebp], eax
	mov	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv90[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T143831[ebp], esp
	mov	eax, DWORD PTR tv90[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T143832[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ

; 928  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR $T143832[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXABQAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::push_back
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CAG@DJJCCLEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@ ; `string'
EXTRN	__invalid_parameter:PROC
EXTRN	__CrtDbgReportW:PROC
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CAG@DJJCCLEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CAG@DJJCCLEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b'
	DB	00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, '0', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
CONST	SEGMENT
??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 230  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@4
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN2@operator@4
$LN1@operator@4:

; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");

	push	236					; 000000ecH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 237  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@4
	xor	ecx, ecx
	jne	SHORT $LN6@operator@4
$LN5@operator@4:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	237					; 000000edH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@4
	int	3
$LN6@operator@4:
	push	0
	push	237					; 000000edH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAG@DJJCCLEC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@4:

; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4

; 247  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++
PUBLIC	??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
;	COMDAT ??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b'
	DB	00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, '0', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@5
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN2@operator@5
$LN1@operator@5:

; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");

	push	256					; 00000100H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 257  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	ecx, ecx
	je	SHORT $LN5@operator@5
	xor	edx, edx
	jne	SHORT $LN6@operator@5
$LN5@operator@5:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@5
	int	3
$LN6@operator@5:
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAI@NCJMBGMP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@5:

; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++

; 266  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 267  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b'
	DB	00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, '0', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator@6
$LN1@operator@6:

; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");

	push	321					; 00000141H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator@6
	xor	ecx, ecx
	jne	SHORT $LN6@operator@6
$LN5@operator@6:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	322					; 00000142H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@6
	int	3
$LN6@operator@6:
	push	0
	push	322					; 00000142H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAI@HCGBPPAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@6:

; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al

; 331  : 		}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 335  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 336  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator*
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->, COMDAT
; _this$ = ecx

; 53   : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 		return (&**this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator*

; 55   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPBU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator->
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx

; 179  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>

; 180  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
PUBLIC	??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
;	COMDAT ??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
CONST	SEGMENT
??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*, COMDAT
; _this$ = ecx

; 201  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 202  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 203  : 		if (this->_Getcont() == 0
; 204  : 			|| this->_Ptr == 0
; 205  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@7
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator@7
$LN1@operator@7:

; 206  : 			{	// report error
; 207  : 			_DEBUG_ERROR("list iterator not dereferencable");

	push	207					; 000000cfH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 208  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@7
	xor	ecx, ecx
	jne	SHORT $LN6@operator@7
$LN5@operator@7:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	208					; 000000d0H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@7
	int	3
$LN6@operator@7:
	push	0
	push	208					; 000000d0H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAC@LPCGLNFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@7:

; 209  : 			}
; 210  : 
; 211  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 212  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 213  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 214  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 215  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 216  : 
; 217  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
	add	esp, 4

; 218  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
_TEXT	ENDS
PUBLIC	??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++, COMDAT
; _this$ = ecx

; 221  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 222  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 223  : 		if (this->_Getcont() == 0
; 224  : 			|| this->_Ptr == 0
; 225  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@8
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator@8
$LN1@operator@8:

; 226  : 			{	// report error
; 227  : 			_DEBUG_ERROR("list iterator not incrementable");

	push	227					; 000000e3H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 228  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@8
	xor	ecx, ecx
	jne	SHORT $LN6@operator@8
$LN5@operator@8:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	228					; 000000e4H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@8
	int	3
$LN6@operator@8:
	push	0
	push	228					; 000000e4H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@JICJIFBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@8:

; 229  : 			}
; 230  : 
; 231  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 232  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 233  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 234  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 235  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 236  : 
; 237  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax

; 238  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 239  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=, COMDAT
; _this$ = ecx

; 299  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 301  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
_TEXT	ENDS
PUBLIC	??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator=
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAEAAU01@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::operator=
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
_TEXT	SEGMENT
$T143892 = -8						; size = 4
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T143892[ebp], esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >

; 699  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
$T143897 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143897[ebp], 0

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	edx, DWORD PTR $T143897[ebp]
	or	edx, 1
	mov	DWORD PTR $T143897[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1451 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
$T143902 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1454 : 		{	// find leftmost node not less than _Keyval in nonmutable tree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T143902[ebp], 0

; 1455 : 		return (const_iterator(_Lbound(_Keyval), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	edx, DWORD PTR $T143902[ebp]
	or	edx, 1
	mov	DWORD PTR $T143902[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1456 : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::lower_bound
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1758 : 		{	// return leftmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1759 : 		return (this->_Left(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4

; 1760 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1775 : 		else

	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:

; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1780 : 		}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1783 : 		{	// return rightmost node in nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1784 : 		return (this->_Right(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4

; 1785 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1788 : 		{	// return root of nonmutable tree

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4

; 1790 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1805 : 		else

	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:

; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1810 : 		}

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 1848 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1849 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1850 : 		const_iterator **_Pnext = (const_iterator **)_Cont._Getpfirst();

	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1851 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 1852 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr

; 1853 : 				if ((*_Pnext)->_Ptr == this->_Myhead
; 1854 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:

; 1855 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1856 : 				else

	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:

; 1857 : 					{	// orphan the iterator
; 1858 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1859 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:

; 1860 : 					}

	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:

; 1861 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEXAAV12@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 96   : 		{	// get address of iterator chain

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getpfirst
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR tv66[ebp], edx
$LN4@Getpfirst:
	mov	eax, DWORD PTR tv66[ebp]

; 98   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 169  : 		{	// disown owning container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 171  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 179  : 		{	// get address of remaining iterator chain

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 		return (&_Mynextiter);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 181  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

	push	ebp
	mov	ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 72					; 00000048H

; 608  : 		}

	pop	ebp
	ret	0
?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

	push	ebp
	mov	ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 73					; 00000049H

; 613  : 		}

	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

	push	ebp
	mov	ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4

; 618  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

	push	ebp
	mov	ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

	pop	ebp
	ret	0
?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

	push	ebp
	mov	ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 628  : 		}

	pop	ebp
	ret	0
?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

	push	ebp
	mov	ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 633  : 		}

	pop	ebp
	ret	0
?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H

; 638  : 		}

	pop	ebp
	ret	0
?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Max:

; 642  : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max

; 643  : 			_Pnode = _Right(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:

; 644  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 645  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

	push	ebp
	mov	ebp, esp
$LN2@Min:

; 649  : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min

; 650  : 			_Pnode = _Left(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:

; 651  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 652  : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
_TEXT	ENDS
;	COMDAT ??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z PROC ; std::less<AbstRaven_Bot *>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	sbb	eax, eax
	neg	eax

; 126  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ENDP ; std::less<AbstRaven_Bot *>::operator()
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice
PUBLIC	?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty
PUBLIC	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__ehfuncinfo$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$2
	DD	05H
	DD	FLAT:__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
tv192 = -108						; size = 4
tv188 = -104						; size = 4
tv197 = -100						; size = 4
tv186 = -96						; size = 4
tv196 = -92						; size = 4
tv183 = -88						; size = 4
tv195 = -84						; size = 4
tv181 = -80						; size = 4
tv194 = -76						; size = 4
tv178 = -72						; size = 4
tv193 = -68						; size = 4
$T143965 = -64						; size = 12
$T143964 = -52						; size = 4
$T143963 = -48						; size = 12
$T143962 = -36						; size = 4
$T143961 = -32						; size = 12
$T143960 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv, COMDAT
; _this$ = ecx

; 700  : 		{	// assign by moving _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 701  : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN3@Assign_rv

; 702  : 			{	// clear this and steal from _Right
; 703  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear

; 704  : 			if (!_Right.empty())

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@Assign_rv

; 705  : 				_Splice(begin(), _Right, _Right.begin(), _Right.end(),
; 706  : 					_Right._Mysize);

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T143961[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T143960[ebp], esp
	mov	eax, DWORD PTR tv178[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR $T143963[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv183[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T143962[ebp], esp
	mov	edx, DWORD PTR tv183[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv196[ebp], eax
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv186[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T143965[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv197[ebp], eax
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T143964[ebp], esp
	mov	edx, DWORD PTR tv188[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T143965[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T143963[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T143961[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN3@Assign_rv:

; 707  : 			}
; 708  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$0:
	lea	ecx, DWORD PTR $T143961[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$1:
	mov	ecx, DWORD PTR $T143960[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$2:
	lea	ecx, DWORD PTR $T143963[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$3:
	mov	ecx, DWORD PTR $T143962[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z$4:
	lea	ecx, DWORD PTR $T143965[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Assign_rv@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Assign_rv
PUBLIC	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize
PUBLIC	?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode
PUBLIC	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
PUBLIC	??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ ; `string'
;	COMDAT ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
CONST	SEGMENT
??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
__Newnode$ = -24					; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Val$ = 20						; size = 4
?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert, COMDAT
; _this$ = ecx

; 967  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 968  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 969  : 		if (_Where._Getcont() != this)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN1@Insert

; 970  : 			_DEBUG_ERROR("list insert iterator outside range");

	push	970					; 000003caH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Insert:

; 971  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 972  : 
; 973  : 		_Nodeptr _Pnode = _Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 974  : 		_Nodeptr _Newnode =
; 975  : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode), _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 976  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize

; 977  : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 978  : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 979  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy, COMDAT
; _this$ = ecx

; 1496 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1497 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear

; 1498 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
PUBLIC	??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
$T143991 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 493  : 		{	// construct base, and allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T143991[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 494  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 495  : 		this->_Myhead = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 496  : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx

; 497  : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 498  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 501  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 502  : 		this->_Alnod.deallocate(this->_Myhead, 1);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 503  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
__ehhandler$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode, COMDAT

; 560  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 561  : 		return ((_Nodepref)(*_Pnode)._Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 562  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval, COMDAT

; 570  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 571  : 		return ((reference)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 572  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ PROC	; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@XZ ENDP	; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z PROC ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >

; 379  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 395  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 396  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*

; 397  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBEAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>

; 214  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator*, COMDAT
; _this$ = ecx

; 48   : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 49   : 		return (_Mytree::_Myval(_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4

; 50   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator*
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$137052 = -8					; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@operator@9
	jmp	$LN5@operator@9
$LN6@operator@9:

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@operator@9

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 64   : 		else

	jmp	SHORT $LN5@operator@9
$LN2@operator@9:

; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$137052[ebp], ecx
	mov	edx, DWORD PTR __Pnode$137052[ebp]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@operator@9
	mov	ecx, DWORD PTR __Pnode$137052[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@operator@9

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$137052[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN2@operator@9
$LN1@operator@9:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$137052[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN5@operator@9:

; 71   : 			}
; 72   : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 73   : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator++
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 121  : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 122  : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 123  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx

; 184  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>

; 185  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==, COMDAT
; _this$ = ecx

; 281  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 282  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 283  : 		if (this->_Getcont() == 0
; 284  : 			|| this->_Getcont() != _Right._Getcont())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@10
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	SHORT $LN2@operator@10
$LN1@operator@10:

; 285  : 			{	// report error
; 286  : 			_DEBUG_ERROR("list iterators incompatible");

	push	286					; 0000011eH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 287  : 			_SCL_SECURE_INVALID_ARGUMENT;

	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator@10
	xor	ecx, ecx
	jne	SHORT $LN6@operator@10
$LN5@operator@10:
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	0
	push	287					; 0000011fH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@10
	int	3
$LN6@operator@10:
	push	0
	push	287					; 0000011fH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@DINEGMNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@10:

; 288  : 			}
; 289  : 
; 290  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 291  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 292  : 			&& this->_Getcont() == _Right._Getcont());
; 293  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 294  : 
; 295  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+8]
	sete	al

; 296  : 		}

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 36   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 37   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>
PUBLIC	??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ; std::move<MemoryRecord &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z PROC ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ; std::move<MemoryRecord &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>

; 234  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ENDP ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
_TEXT	ENDS
;	COMDAT ??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT
; _this$ = ecx

; 342  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >

; 343  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,AbstRaven_Bot *,int,AbstRaven_Bot * const *,AbstRaven_Bot * const &,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 111  : 		{	// construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 112  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
__Wherenode$ = -12					; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1724 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1725 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1726 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:

; 1727 : 
; 1728 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound

; 1729 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

	push	1729					; 000006c1H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Lbound

; 1730 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1731 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 1732 : 				{	// _Pnode not less than _Keyval, remember it
; 1733 : 				_Wherenode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1734 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN1@Lbound:

; 1735 : 				}

	jmp	SHORT $LN4@Lbound
$LN3@Lbound:

; 1736 : 
; 1737 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 1738 : 		}

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
__Wherenode$ = -12					; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1742 : 		_Nodeptr _Pnode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound@2:

; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound@2

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

	push	1746					; 000006d2H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Lbound@2

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1748 : 			else

	jmp	SHORT $LN1@Lbound@2
$LN2@Lbound@2:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN1@Lbound@2:

; 1752 : 				}

	jmp	SHORT $LN4@Lbound@2
$LN3@Lbound@2:

; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 1755 : 		}

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@ABQAVAbstRaven_Bot@@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocate
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
_TEXT	SEGMENT
$T144056 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T144056[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 543  : 		this->_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], ecx

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 550  : 		this->_Isnil(this->_Myhead) = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 551  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
__ehhandler$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::~_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 498  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 499  : 		typename allocator_type::template rebind<_Container_proxy>::other
; 500  : 			_Alproxy(_Alnod);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>

; 501  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 502  : 		_Dest_val(_Alproxy, this->_Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8

; 503  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 504  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 505  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Tree_nod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Tree_nod:
	DD	1
	DD	$LN6@Tree_nod
$LN6@Tree_nod:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@Tree_nod
$LN4@Tree_nod:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
__ehhandler$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::~_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$15171 = -20					; size = 4
__Lock$15170 = -12					; size = 4
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 206  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 207  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 208  : 	if (_Myproxy != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_all

; 209  : 		{	// proxy allocated, drain it
; 210  : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$15170[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 211  : 
; 212  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$15171[ebp], edx

; 213  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$15171[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$15171[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$15171[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@Orphan_all

; 214  : 			(*_Pnext)->_Myproxy = 0;

	mov	edx, DWORD PTR __Pnext$15171[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 215  : 		_Myproxy->_Myfirstiter = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0

; 216  : 		}

	lea	ecx, DWORD PTR __Lock$15170[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Orphan_all:

; 217  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 218  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty, COMDAT
; _this$ = ecx

; 886  : 		{	// test if sequence is empty

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		return (this->_Mysize == 0);

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], 0
	sete	cl
	mov	al, cl

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE_NXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::empty
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
PUBLIC	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnode$ = -12						; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear, COMDAT
; _this$ = ecx

; 1096 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1097 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1098 : 		this->_Orphan_ptr(*this, 0);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr

; 1099 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1100 : 
; 1101 : 		_Nodeptr _Pnext;
; 1102 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax

; 1103 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1104 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx

; 1105 : 		this->_Mysize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1106 : 
; 1107 : 		for (; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN3@clear:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN4@clear

; 1108 : 			{	// delete an element
; 1109 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], ecx

; 1110 : 
; 1111 : 			_Dest_val(this->_Alnod, _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 8

; 1112 : 			this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 1113 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1114 : 		}

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
PUBLIC	??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>
PUBLIC	?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same
PUBLIC	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
PUBLIC	??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>
PUBLIC	??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ ; `string'
;	COMDAT ??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
CONST	SEGMENT
??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 's', 00H, 'p', 00H
	DB	'l', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$11
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
_TEXT	SEGMENT
tv288 = -168						; size = 4
tv291 = -164						; size = 4
tv287 = -160						; size = 4
tv205 = -156						; size = 4
tv215 = -152						; size = 4
tv284 = -148						; size = 4
tv280 = -144						; size = 4
tv276 = -140						; size = 4
tv130 = -136						; size = 4
tv273 = -132						; size = 4
tv139 = -128						; size = 4
$T144097 = -124						; size = 12
$T144096 = -112						; size = 4
$T144095 = -108						; size = 4
$T144094 = -104						; size = 12
$T144093 = -92						; size = 4
$T144092 = -88						; size = 4
$T144091 = -84						; size = 4
$T144090 = -80						; size = 4
__Next$137746 = -72					; size = 12
__Iter$137740 = -52					; size = 12
__Next$137736 = -32					; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Right$ = 20						; size = 4
__First$ = 24						; size = 12
__Last$ = 36						; size = 12
__Count$ = 48						; size = 4
?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice, COMDAT
; _this$ = ecx

; 1435 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-168]
	mov	ecx, 39					; 00000027H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1436 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1437 : 		if (_Where._Getcont() != this)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN9@Splice

; 1438 : 			_DEBUG_ERROR("list splice iterator outside range");

	push	1438					; 0000059eH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@NPGGHPOJ@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAs?$AAp?$AAl?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN9@Splice:

; 1439 : 		if (this->_Alval == _Right._Alval)

	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 13					; 0000000dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	push	ecx
	call	??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN8@Splice

; 1440 : 			{	// same allocator, just relink
; 1441 : 			if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN7@Splice

; 1442 : 				for (const_iterator _Next = _First; _Next != _Last; )

	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$137736[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN6@Splice:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$137736[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Splice

; 1443 : 					{	// transfer ownership
; 1444 : 					const_iterator _Iter = _Next++;

	push	0
	lea	ecx, DWORD PTR __Iter$137740[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$137736[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 1445 : 					_Orphan_ptr(_Right, _Iter._Ptr);

	mov	edx, DWORD PTR __Iter$137740[ebp+8]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr

; 1446 : 					_Iter._Adopt(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Iter$137740[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 1447 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR __Iter$137740[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN6@Splice
$LN5@Splice:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __Next$137736[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN7@Splice:

; 1448 : 			_Splice_same(_Where, _Right, _First, _Last, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144090[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv139[ebp], eax
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR tv273[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144091[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv276[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144092[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv280[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same

; 1449 : 			}
; 1450 : 
; 1451 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1452 : 		if (this->_Alval == _Right._Alval)
; 1453 : 			_Splice_same(_Where, _Right, _First, _Last, _Count);
; 1454 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1455 : 
; 1456 : 		else

	jmp	$LN4@Splice
$LN8@Splice:

; 1457 : 			{	// different allocator, copy nodes then erase source
; 1458 : 			for (const_iterator _Next = _First; _Next != _Last; ++_Next)

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$137746[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	jmp	SHORT $LN3@Splice
$LN2@Splice:
	lea	ecx, DWORD PTR __Next$137746[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
$LN3@Splice:
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$137746[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Splice

; 1459 : 				insert(_Where, (_Ty &&)*_Next);

	lea	ecx, DWORD PTR __Next$137746[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBEABQAVAbstRaven_Bot@@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator*
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144093[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv284[ebp], eax
	lea	ecx, DWORD PTR $T144094[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>
	mov	DWORD PTR tv215[ebp], eax
	lea	ecx, DWORD PTR $T144094[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@Splice
$LN1@Splice:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR __Next$137746[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ

; 1460 : 			_Right.erase(_First, _Last);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144095[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv205[ebp], eax
	mov	eax, DWORD PTR tv205[ebp]
	mov	DWORD PTR tv287[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144096[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv291[ebp], eax
	lea	eax, DWORD PTR $T144097[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
	mov	DWORD PTR tv288[ebp], eax
	lea	ecx, DWORD PTR $T144097[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN4@Splice:

; 1461 : 			}
; 1462 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@Splice
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 168				; 000000a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
	npad	1
$LN31@Splice:
	DD	3
	DD	$LN30@Splice
$LN30@Splice:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN26@Splice
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN27@Splice
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN28@Splice
$LN28@Splice:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN27@Splice:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN26@Splice:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$3:
	lea	ecx, DWORD PTR __Next$137736[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$4:
	lea	ecx, DWORD PTR __Iter$137740[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$5:
	mov	ecx, DWORD PTR $T144090[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$6:
	mov	ecx, DWORD PTR $T144091[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$8:
	lea	ecx, DWORD PTR __Next$137746[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$11:
	mov	ecx, DWORD PTR $T144095[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Splice@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize, COMDAT
; _this$ = ecx

; 1519 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1520 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+8]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1521 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1522 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize:

; 1523 : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@ABQAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@ABQAV2@@Z ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot * const &>
PUBLIC	??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::addressof<AbstRaven_Bot *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z$0
__unwindtable$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z$2
__ehfuncinfo$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv134 = -40						; size = 4
tv133 = -36						; size = 4
tv132 = -32						; size = 4
tv131 = -28						; size = 4
__Pnode$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode, COMDAT
; _this$ = ecx

; 507  : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 508  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 509  : 
; 510  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 511  : 		this->_Nextnode(_Pnode) = _Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR tv131[ebp]
	mov	edx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [ecx], edx

; 512  : 		this->_Prevnode(_Pnode) = _Prev;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR tv132[ebp]
	mov	edx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [ecx], edx

; 513  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Pnode)), _Val);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	push	ecx
	call	??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::addressof<AbstRaven_Bot *>
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	push	ecx
	call	??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@ABQAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@ABQAV2@@Z ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot * const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode
__catch$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z$0:

; 514  : 		_CATCH_ALL
; 515  : 		this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 516  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 517  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z$1
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z$1:

; 518  : 
; 519  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:

; 520  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@0ABQAVAbstRaven_Bot@@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode, COMDAT

; 565  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 566  : 		return ((_Nodepref)(*_Pnode)._Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 567  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
_TEXT	ENDS
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
PUBLIC	??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
$T144144 = -36						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z PROC ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 444  : 		{	// construct allocators and proxy from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??0?$allocator@PAVAbstRaven_Bot@@@std@@QAE@ABV01@@Z ; std::allocator<AbstRaven_Bot *>::allocator<AbstRaven_Bot *>

; 445  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 446  : 			_Alproxy(_Alnod);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>

; 447  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 448  : 		_Cons_val(_Alproxy, this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T144144[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 449  : 		this->_Myproxy->_Mycont = this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx

; 450  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@List_nod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@List_nod:
	DD	1
	DD	$LN6@List_nod
$LN6@List_nod:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@List_nod
$LN4@List_nod:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@V?$allocator@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 65   : 		{	// construct from pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 66   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 77   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 78   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 91   : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 93   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >, COMDAT
; _this$ = ecx

; 453  : 		{	// destroy proxy

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 454  : 		typename _Alloc::template rebind<_Container_proxy>::other
; 455  : 			_Alproxy(_Alnod);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>

; 456  : 		this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 457  : 		_Dest_val(_Alproxy, this->_Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
	add	esp, 8

; 458  : 		_Alproxy.deallocate(this->_Myproxy, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate

; 459  : 		this->_Myproxy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 460  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@List_nod@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@List_nod@2:
	DD	1
	DD	$LN6@List_nod@2
$LN6@List_nod@2:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@List_nod@2
$LN4@List_nod@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
__ehhandler$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::~_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 44   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 45   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 41   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 42   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PAVAbstRaven_Bot@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 92   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 94   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z PROC ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>, COMDAT
; _this$ = ecx

; 150  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ; std::move<MemoryRecord &>
	add	esp, 4
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 8
	mov	ecx, 12					; 0000000cH
	mov	esi, eax
	rep movsd

; 151  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@ABQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ENDP ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 182  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 183  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ PROC ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::~_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base12@std@@QAE@XZ	; std::_Container_base12::~_Container_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ ENDP ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::~_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<AbstRaven_Bot * const,MemoryRecord>,int,std::pair<AbstRaven_Bot * const,MemoryRecord> const *,std::pair<AbstRaven_Bot * const,MemoryRecord> const &,std::_Iterator_base12>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node><std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	??0?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@U?$less@PAVAbstRaven_Bot@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
_TEXT	SEGMENT
$T144211 = -36						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >, COMDAT
; _this$ = ecx

; 489  : 		{	// construct traits from _Parg, allocators and proxy from _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@U?$less@PAVAbstRaven_Bot@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$?0U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node><std::pair<AbstRaven_Bot * const,MemoryRecord> >
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 17					; 00000011H
	call	??0?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >

; 490  : 		typename allocator_type::template rebind<_Container_proxy>::other
; 491  : 			_Alproxy(_Alnod);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>

; 492  : 		this->_Myproxy = _Alproxy.allocate(1);

	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 493  : 		_Cons_val(_Alproxy, this->_Myproxy, _Container_proxy());

	lea	ecx, DWORD PTR $T144211[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH

; 494  : 		this->_Myproxy->_Mycont = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx

; 495  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Tree_nod@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@Tree_nod@2:
	DD	1
	DD	$LN6@Tree_nod@2
$LN6@Tree_nod@2:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN4@Tree_nod@2
$LN4@Tree_nod@2:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@XZ
__ehhandler$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@PAVAbstRaven_Bot@@@1@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
	add	esp, 8

; 188  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ ; std::allocator<AbstRaven_Bot *>::max_size
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
;	COMDAT ?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size, COMDAT
; _this$ = ecx

; 881  : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 882  : 		return (this->_Alval.max_size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ ; std::allocator<AbstRaven_Bot *>::max_size

; 883  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEIXZ ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::max_size
_TEXT	ENDS
PUBLIC	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
PUBLIC	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$6
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv212 = -108						; size = 4
tv211 = -104						; size = 4
tv209 = -100						; size = 4
tv207 = -96						; size = 4
tv206 = -92						; size = 4
tv94 = -88						; size = 4
tv194 = -84						; size = 4
tv218 = -80						; size = 4
tv189 = -76						; size = 4
tv216 = -72						; size = 4
$T144238 = -68						; size = 4
$T144235 = -64						; size = 4
$T144234 = -60						; size = 12
$T144233 = -48						; size = 4
$T144230 = -44						; size = 12
$T144229 = -32						; size = 12
$T144228 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase, COMDAT
; _this$ = ecx

; 1081 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144238[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1082 : 		if (_First == begin() && _Last == end())

	lea	eax, DWORD PTR $T144229[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::begin
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR tv189[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T144238[ebp]
	or	edx, 1
	mov	DWORD PTR $T144238[ebp], edx
	mov	eax, DWORD PTR tv189[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase@2
	lea	edx, DWORD PTR $T144230[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	DWORD PTR tv218[ebp], eax
	mov	eax, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv194[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T144238[ebp]
	or	ecx, 2
	mov	DWORD PTR $T144238[ebp], ecx
	mov	edx, DWORD PTR tv194[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase@2
	mov	DWORD PTR tv94[ebp], 1
	jmp	SHORT $LN8@erase@2
$LN7@erase@2:
	mov	DWORD PTR tv94[ebp], 0
$LN8@erase@2:
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR $T144228[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T144238[ebp]
	and	edx, 2
	je	SHORT $LN15@erase@2
	and	DWORD PTR $T144238[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T144230[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN15@erase@2:
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T144238[ebp]
	and	eax, 1
	je	SHORT $LN16@erase@2
	and	DWORD PTR $T144238[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T144229[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN16@erase@2:
	movzx	ecx, BYTE PTR $T144228[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase@2

; 1083 : 			{	// erase all and return fresh iterator
; 1084 : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXXZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::clear

; 1085 : 			return (end());

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@XZ ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::end
	mov	eax, DWORD PTR $T144238[ebp]
	or	eax, 4
	mov	DWORD PTR $T144238[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@erase@2

; 1086 : 			}
; 1087 : 		else

	jmp	$LN3@erase@2
$LN2@erase@2:

; 1088 : 			{	// erase subrange
; 1089 : 			while (_First != _Last)

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@2

; 1090 : 				_First = erase(_First);

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144233[ebp], esp
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv206[ebp], eax
	lea	ecx, DWORD PTR $T144234[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
	mov	DWORD PTR tv207[ebp], eax
	mov	edx, DWORD PTR tv207[ebp]
	mov	DWORD PTR tv209[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv209[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??4?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144234[ebp]
	call	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase@2
$LN1@erase@2:

; 1091 : 			return (_Make_iter(_Last));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144235[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv211[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
	mov	DWORD PTR tv212[ebp], eax
	mov	ecx, DWORD PTR $T144238[ebp]
	or	ecx, 4
	mov	DWORD PTR $T144238[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@2
$LN3@erase@2:

; 1092 : 			}
; 1093 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN5@erase@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$2:
	mov	eax, DWORD PTR $T144238[ebp]
	and	eax, 1
	je	$LN12@erase@2
	and	DWORD PTR $T144238[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T144229[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN12@erase@2:
	ret	0
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$3:
	mov	eax, DWORD PTR $T144238[ebp]
	and	eax, 2
	je	$LN14@erase@2
	and	DWORD PTR $T144238[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T144230[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN14@erase@2:
	ret	0
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$4:
	mov	eax, DWORD PTR $T144238[ebp]
	and	eax, 4
	je	$LN18@erase@2
	and	DWORD PTR $T144238[ebp], -5		; fffffffbH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN18@erase@2:
	ret	0
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z$6:
	lea	ecx, DWORD PTR $T144234[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@0@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2
__ehfuncinfo$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Right$ = 20						; size = 4
__First$ = 24						; size = 12
__Last$ = 36						; size = 12
__Count$ = 48						; size = 4
?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same, COMDAT
; _this$ = ecx

; 1467 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1468 : 		if (this != &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN1@Splice_sam

; 1469 : 			{	// splicing from another list, adjust counts
; 1470 : 			_Incsize(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize

; 1471 : 			_Right._Mysize -= _Count;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@Splice_sam:

; 1472 : 			}
; 1473 : 		this->_Nextnode(this->_Prevnode(_First._Mynode())) =
; 1474 : 			_Last._Mynode();

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1475 : 		this->_Nextnode(this->_Prevnode(_Last._Mynode())) =
; 1476 : 			_Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1477 : 		this->_Nextnode(this->_Prevnode(_Where._Mynode())) =
; 1478 : 			_First._Mynode();

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi

; 1479 : 
; 1480 : 		_Nodeptr _Pnode = this->_Prevnode(_Where._Mynode());

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1481 : 		this->_Prevnode(_Where._Mynode()) =
; 1482 : 			this->_Prevnode(_Last._Mynode());

	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1483 : 		this->_Prevnode(_Last._Mynode()) =
; 1484 : 			this->_Prevnode(_First._Mynode());

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1485 : 		this->_Prevnode(_First._Mynode()) = _Pnode;

	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1486 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	44					; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z$2:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Splice_same@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@AAV12@00I@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Splice_same
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 1527 : 		{	// orphan iterators with specified node pointers

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1528 : 		_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1529 : 		const_iterator **_Pnext = (const_iterator **)_Cont._Getpfirst();

	mov	ecx, DWORD PTR __Cont$[ebp]
	call	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
	mov	DWORD PTR __Pnext$[ebp], eax

; 1530 : 		if (_Pnext != 0)

	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr@2
$LN5@Orphan_ptr@2:

; 1531 : 			while (*_Pnext != 0)

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr@2

; 1532 : 				if ((*_Pnext)->_Ptr == this->_Myhead
; 1533 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN2@Orphan_ptr@2
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr@2
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr@2
$LN2@Orphan_ptr@2:

; 1534 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax

; 1535 : 				else

	jmp	SHORT $LN1@Orphan_ptr@2
$LN3@Orphan_ptr@2:

; 1536 : 					{	// orphan the iterator
; 1537 : 					(*_Pnext)->_Clrcont();

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont

; 1538 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr@2:

; 1539 : 					}

	jmp	SHORT $LN5@Orphan_ptr@2
$LN6@Orphan_ptr@2:

; 1540 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Orphan_ptr@2:
	DD	1
	DD	$LN12@Orphan_ptr@2
$LN12@Orphan_ptr@2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ptr@2
$LN10@Orphan_ptr@2:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
__ehhandler$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T144283 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++, COMDAT
; _this$ = ecx

; 242  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144283[ebp], 0

; 243  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 244  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++

; 245  : 		return (_Tmp);

	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T144283[ebp]
	or	edx, 1
	mov	DWORD PTR $T144283[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 246  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator@11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator@11:
	DD	1
	DD	$LN8@operator@11
$LN8@operator@11:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator@11
$LN6@operator@11:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z$1:
	mov	eax, DWORD PTR $T144283[ebp]
	and	eax, 1
	je	$LN5@operator@11
	and	DWORD PTR $T144283[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN5@operator@11:
	ret	0
__ehhandler$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@U?$less@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@U?$less@PAVAbstRaven_Bot@@@1@@Z PROC ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12

; 41   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@QAE@U?$less@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T144301 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter, COMDAT
; _this$ = ecx

; 801  : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144301[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 802  : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PBV?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::_List_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
	mov	edx, DWORD PTR $T144301[ebp]
	or	edx, 1
	mov	DWORD PTR $T144301[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 803  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1:
	mov	eax, DWORD PTR $T144301[ebp]
	and	eax, 1
	je	$LN5@Make_iter
	and	DWORD PTR $T144301[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN5@Make_iter:
	ret	0
__ehhandler$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
PUBLIC	??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@ ; `string'
;	COMDAT ??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@
CONST	SEGMENT
??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1
__ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv200 = -56						; size = 4
tv199 = -52						; size = 4
tv197 = -48						; size = 4
tv206 = -44						; size = 4
$T144317 = -40						; size = 4
$T144312 = -36						; size = 4
$T144311 = -32						; size = 12
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase, COMDAT
; _this$ = ecx

; 1054 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144317[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1055 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1056 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN2@erase@3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@erase@3
$LN2@erase@3:

; 1057 : 			_DEBUG_ERROR("list erase iterator outside range");

	push	1057					; 00000421H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN3@erase@3:

; 1058 : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	push	0
	lea	edx, DWORD PTR $T144311[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator++
	mov	DWORD PTR tv206[ebp], eax
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR tv197[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv197[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T144311[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ

; 1059 : 		_Orphan_ptr(*this, _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBEXAAV12@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Orphan_ptr

; 1060 : 
; 1061 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1062 : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 1063 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1064 : 
; 1065 : 		if (_Pnode != this->_Myhead)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	$LN1@erase@3

; 1066 : 			{	// not list head, safe to erase
; 1067 : 			this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1068 : 				this->_Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1069 : 			this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1070 : 				this->_Prevnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1071 : 
; 1072 : 			_Dest_val(this->_Alnod, _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 8

; 1073 : 			this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 1074 : 
; 1075 : 			--this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@3:

; 1076 : 			}
; 1077 : 		return (_Make_iter(_Where));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144312[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv199[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
	mov	DWORD PTR tv200[ebp], eax
	mov	ecx, DWORD PTR $T144317[ebp]
	or	ecx, 1
	mov	DWORD PTR $T144317[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1078 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$1:
	lea	ecx, DWORD PTR $T144311[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z$3:
	mov	eax, DWORD PTR $T144317[ebp]
	and	eax, 1
	je	$LN10@erase@3
	and	DWORD PTR $T144317[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN10@erase@3:
	ret	0
__ehhandler$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ PROC ; std::allocator<AbstRaven_Bot *>::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH

; 219  : 		return (0 < _Count ? _Count : 1);

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]

; 220  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAVAbstRaven_Bot@@@std@@QBEIXZ ENDP ; std::allocator<AbstRaven_Bot *>::max_size
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
PUBLIC	??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode<std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$0
__ehfuncinfo$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
_TEXT	SEGMENT
tv66 = -32						; size = 4
tv128 = -28						; size = 4
$T144335 = -24						; size = 4
$T144331 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::insert<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT
; _this$ = ecx

; 760  : 		typename _STD tr1::enable_if<!_STD tr1::is_same<const_iterator,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144335[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 761  : 			typename _STD tr1::remove_reference<_Valty>::type>::value,
; 762  : 				iterator>::type
; 763  : 		insert(const_iterator _Where,
; 764  : 			_Valty&& _Val)
; 765  : 		{	// try to insert node with value _Val using _Where as a hint
; 766  : 		return (_Insert(_Where,
; 767  : 			this->_Buynode(_STD forward<_Valty>(_Val))));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144331[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv128[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR $T144335[ebp]
	or	ecx, 1
	mov	DWORD PTR $T144335[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 768  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$2:
	mov	eax, DWORD PTR $T144335[ebp]
	and	eax, 1
	je	$LN6@insert
	and	DWORD PTR $T144335[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN6@insert:
	ret	0
__ehhandler$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$insert@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::insert<std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$ = -5						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 102  : 	_Ty _Tmp = _Move(_Left);

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR __Tmp$[ebp], cl

; 103  : 	_Left = _Move(_Right);

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 104  : 	_Right = _Move(_Tmp);

	lea	eax, DWORD PTR __Tmp$[ebp]
	push	eax
	call	??$_Move@AAD@std@@YA$$QADAAD@Z		; std::_Move<char &>
	add	esp, 4
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl

; 105  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@swap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@swap:
	DD	1
	DD	$LN4@swap
$LN4@swap:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@swap
$LN3@swap:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z PROC ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 110  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 112  : 	}

	pop	ebp
	ret	0
??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
_TEXT	ENDS
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>, COMDAT

; 661  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp

; 662  : 	if (!_Pred(_Left, _Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ; std::less<AbstRaven_Bot *>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@Debug_lt_p

; 663  : 		return (false);

	xor	al, al
	jmp	SHORT $LN4@Debug_lt_p
	jmp	SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:

; 664  : 	else if (_Pred(_Right, _Left))

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ; std::less<AbstRaven_Bot *>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Debug_lt_p

; 665  : 		_DEBUG_ERROR2("invalid operator<", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_lt_p:

; 666  : 	return (true);

	mov	al, 1
$LN4@Debug_lt_p:

; 667  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z PROC ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@V?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YA$$QAV?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
_TEXT	ENDS
;	COMDAT ??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z PROC ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

	push	ebp
	mov	ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[ebp]

; 69   : 		}

	pop	ebp
	ret	0
??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ENDP ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z PROC ; std::move<MemoryRecord &>, COMDAT

; 86   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

	pop	ebp
	ret	0
??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ENDP ; std::move<MemoryRecord &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>, COMDAT

; 673  : 	{	// test if _Pred(_Left, _Right) and _Pred is strict weak ordering

	push	ebp
	mov	ebp, esp

; 674  : 	if (!_Pred(_Left, _Right))

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ; std::less<AbstRaven_Bot *>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@Debug_lt_p@2

; 675  : 		return (false);

	xor	al, al
	jmp	SHORT $LN4@Debug_lt_p@2
	jmp	SHORT $LN2@Debug_lt_p@2
$LN3@Debug_lt_p@2:

; 676  : 	else if (_Pred(_Right, _Left))

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@PAVAbstRaven_Bot@@@std@@QBE_NABQAVAbstRaven_Bot@@0@Z ; std::less<AbstRaven_Bot *>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Debug_lt_p@2

; 677  : 		_DEBUG_ERROR2("invalid operator<", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_lt_p@2:

; 678  : 	return (true);

	mov	al, 1
$LN4@Debug_lt_p@2:

; 679  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT

; 286  : 	{	// destroy using allocator

	push	ebp
	mov	ebp, esp

; 287  : 	_Alval.destroy(_Pdest);

	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy

; 288  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@0@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>,std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z PROC ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>, COMDAT

; 262  : 	{	// test for allocator equality

	push	ebp
	mov	ebp, esp

; 263  : 	return (true);

	mov	al, 1

; 264  : 	}

	pop	ebp
	ret	0
??$?8PAVAbstRaven_Bot@@PAV0@@std@@YA_NABV?$allocator@PAVAbstRaven_Bot@@@0@0@Z ENDP ; std::operator==<AbstRaven_Bot *,AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>
PUBLIC	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv66 = -32						; size = 4
tv89 = -28						; size = 4
$T144378 = -24						; size = 4
$T144374 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 733  : 		iterator insert(const_iterator _Where, _Valty&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144378[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 734  : 		{	// insert _Val at _Where
; 735  : 		return (emplace(_Where, _STD forward<_Valty>(_Val)));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144374[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR $T144378[ebp]
	or	ecx, 1
	mov	DWORD PTR $T144378[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 736  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$2:
	mov	eax, DWORD PTR $T144378[ebp]
	and	eax, 1
	je	$LN6@insert@2
	and	DWORD PTR $T144378[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN6@insert@2:
	ret	0
__ehhandler$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$insert@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::insert<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z PROC ; std::addressof<AbstRaven_Bot *>, COMDAT

; 110  : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 112  : 	}

	pop	ebp
	ret	0
??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ENDP ; std::addressof<AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@ABQAV3@@Z ; std::allocator<AbstRaven_Bot *>::construct
PUBLIC	??$forward@ABQAVAbstRaven_Bot@@@std@@YAABQAVAbstRaven_Bot@@ABQAV1@@Z ; std::forward<AbstRaven_Bot * const &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@ABQAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@ABQAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot * const &>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABQAVAbstRaven_Bot@@@std@@YAABQAVAbstRaven_Bot@@ABQAV1@@Z ; std::forward<AbstRaven_Bot * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@ABQAV3@@Z ; std::allocator<AbstRaven_Bot *>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@ABQAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot * const &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAVAbstRaven_Bot@@@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVAbstRaven_Bot@@@1@@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node><AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T144396 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T144396[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T144396[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T144405 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T144405[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T144405[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node><std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node><std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T144410 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 31   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 32   : 
; 33   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@3

; 34   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0

; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate@3
$LN4@Allocate@3:

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 53687091	; 03333333H
	ja	SHORT $LN1@Allocate@3
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 80					; 00000050H
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

	push	0
	lea	ecx, DWORD PTR $T144410[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T144410[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@3:

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@3:

; 40   : 	}

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Linsert
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::size
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
PUBLIC	??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@ ; `string'
;	COMDAT ??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, 's', 00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$9
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
tv791 = -220						; size = 4
tv696 = -216						; size = 4
tv666 = -212						; size = 4
tv781 = -208						; size = 4
tv589 = -204						; size = 4
tv767 = -200						; size = 4
tv458 = -196						; size = 4
tv762 = -192						; size = 4
tv408 = -188						; size = 4
tv378 = -184						; size = 4
tv752 = -180						; size = 4
tv301 = -176						; size = 4
tv738 = -172						; size = 4
tv170 = -168						; size = 4
tv733 = -164						; size = 4
tv82 = -160						; size = 4
$T144438 = -156						; size = 4
$T144434 = -152						; size = 16
$T144430 = -136						; size = 12
$T144429 = -121						; size = 1
$T144428 = -120						; size = 12
$T144427 = -105						; size = 1
$T144426 = -104						; size = 12
$T144425 = -89						; size = 1
$T144421 = -88						; size = 12
$T144420 = -73						; size = 1
$T144419 = -72						; size = 12
$T144418 = -57						; size = 1
$T144417 = -56						; size = 12
$T144416 = -42						; size = 1
__Leftish$ = -41					; size = 1
__Next$ = -36						; size = 12
__Val$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Node$ = 24						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1089 : 		{	// try to insert node at _Node using _Where as a hint

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144438[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1090 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1091 : 		if (_Where._Getcont() != this)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN32@Insert@2

; 1092 : 			_DEBUG_ERROR("map/set insert iterator outside range");

	push	1092					; 00000444H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@MHOKKPFH@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN32@Insert@2:

; 1093 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1094 : 
; 1095 : 		const value_type& _Val = this->_Myval(_Node);

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR __Val$[ebp], eax

; 1096 : 
; 1097 : 		const_iterator _Next;

	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1098 : 		bool _Leftish = false;	// assume nearest point is end of sequence

	mov	BYTE PTR __Leftish$[ebp], 0

; 1099 : 
; 1100 : 		if (size() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::size
	test	eax, eax
	jne	SHORT $LN31@Insert@2

; 1101 : 			return (_Insert(true, this->_Myhead, _Node));	// empty tree

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
	jmp	$LN30@Insert@2
$LN31@Insert@2:

; 1102 : 		else if (this->_Multi)

	xor	eax, eax
	je	$LN29@Insert@2

; 1103 : 			{	// insert even if duplicate
; 1104 : 			if (_Where == begin())

	lea	ecx, DWORD PTR $T144417[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	DWORD PTR tv82[ebp], eax
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv733[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv733[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	mov	BYTE PTR $T144416[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144417[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T144416[ebp]
	test	ecx, ecx
	je	$LN28@Insert@2

; 1105 : 				{	// insert at beginning if before first element
; 1106 : 				if (!_DEBUG_LT_PRED(this->comp,

	push	1107					; 00000453H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN27@Insert@2

; 1107 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1108 : 					return (_Insert(true, _Where._Mynode(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN27@Insert@2:

; 1109 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
	jmp	$LN26@Insert@2
$LN28@Insert@2:

; 1110 : 				}
; 1111 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T144419[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv170[ebp], eax
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv738[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv738[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	mov	BYTE PTR $T144418[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144419[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T144418[ebp]
	test	eax, eax
	je	$LN25@Insert@2

; 1112 : 				{	// insert at end if after last element
; 1113 : 				if (!_DEBUG_LT_PRED(this->comp,

	push	1114					; 0000045aH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN24@Insert@2

; 1114 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1115 : 					return (_Insert(false, _Rmost(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN24@Insert@2:

; 1116 : 				}
; 1117 : 			else if (!_DEBUG_LT_PRED(this->comp,

	jmp	$LN26@Insert@2
$LN25@Insert@2:

; 1118 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1119 : 				&& !_DEBUG_LT_PRED(this->comp,

	push	1118					; 0000045eH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN22@Insert@2
	push	1121					; 00000461H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, eax
	call	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
	mov	ecx, eax
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	$LN22@Insert@2

; 1120 : 					this->_Kfn(_Val),
; 1121 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1122 : 				{	// insert before _Where
; 1123 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN21@Insert@2

; 1124 : 					return (_Insert(false, _Next._Mynode(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2

; 1125 : 				else

	jmp	SHORT $LN20@Insert@2
$LN21@Insert@2:

; 1126 : 					return (_Insert(true, _Where._Mynode(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN20@Insert@2:

; 1127 : 				}
; 1128 : 			else if (!_DEBUG_LT_PRED(this->comp,

	jmp	$LN26@Insert@2
$LN22@Insert@2:

; 1129 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1130 : 				&& (++(_Next = _Where) == end()
; 1131 : 					|| !_DEBUG_LT_PRED(this->comp,

	push	1129					; 00000469H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	jne	$LN36@Insert@2
	lea	ecx, DWORD PTR $T144421[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv301[ebp], eax
	mov	edx, DWORD PTR tv301[ebp]
	mov	DWORD PTR tv752[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 2
	mov	DWORD PTR $T144438[ebp], eax
	mov	ecx, DWORD PTR tv752[ebp]
	push	ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, eax
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
	mov	ecx, eax
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN35@Insert@2
	push	1132					; 0000046cH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN36@Insert@2
$LN35@Insert@2:
	mov	DWORD PTR tv378[ebp], 1
	jmp	SHORT $LN37@Insert@2
$LN36@Insert@2:
	mov	DWORD PTR tv378[ebp], 0
$LN37@Insert@2:
	mov	dl, BYTE PTR tv378[ebp]
	mov	BYTE PTR $T144420[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T144438[ebp]
	and	eax, 2
	je	SHORT $LN49@Insert@2
	and	DWORD PTR $T144438[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T144421[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN49@Insert@2:
	movzx	ecx, BYTE PTR $T144420[ebp]
	test	ecx, ecx
	je	$LN18@Insert@2

; 1132 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1133 : 				{	// insert after _Where
; 1134 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN17@Insert@2

; 1135 : 					return (_Insert(false, _Where._Mynode(), _Node));

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2

; 1136 : 				else

	jmp	SHORT $LN16@Insert@2
$LN17@Insert@2:

; 1137 : 					return (_Insert(true, _Next._Mynode(), _Node));

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN16@Insert@2:

; 1138 : 				}
; 1139 : 			else

	jmp	SHORT $LN26@Insert@2
$LN18@Insert@2:

; 1140 : 				_Leftish = true;	// nearest point is beginning of sequence

	mov	BYTE PTR __Leftish$[ebp], 1
$LN26@Insert@2:

; 1141 : 			}
; 1142 : 		else

	jmp	$LN30@Insert@2
$LN29@Insert@2:

; 1143 : 			{	// insert only if unique
; 1144 : 			if (_Where == begin())

	lea	ecx, DWORD PTR $T144426[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	DWORD PTR tv408[ebp], eax
	mov	edx, DWORD PTR tv408[ebp]
	mov	DWORD PTR tv762[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv762[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	mov	BYTE PTR $T144425[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144426[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T144425[ebp]
	test	ecx, ecx
	je	$LN13@Insert@2

; 1145 : 				{	// insert at beginning if before first element
; 1146 : 				if (_DEBUG_LT_PRED(this->comp,

	push	1147					; 0000047bH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@Insert@2

; 1147 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1148 : 					return (_Insert(true, _Where._Mynode(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN12@Insert@2:

; 1149 : 				}

	jmp	$LN30@Insert@2
$LN13@Insert@2:

; 1150 : 			else if (_Where == end())

	lea	eax, DWORD PTR $T144428[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv458[ebp], eax
	mov	ecx, DWORD PTR tv458[ebp]
	mov	DWORD PTR tv767[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv767[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	mov	BYTE PTR $T144427[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144428[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T144427[ebp]
	test	eax, eax
	je	$LN10@Insert@2

; 1151 : 				{	// insert at end if after last element
; 1152 : 				if (_DEBUG_LT_PRED(this->comp,

	push	1153					; 00000481H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@Insert@2

; 1153 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1154 : 					return (_Insert(false, _Rmost(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN9@Insert@2:

; 1155 : 				}
; 1156 : 			else if (_DEBUG_LT_PRED(this->comp,

	jmp	$LN30@Insert@2
$LN10@Insert@2:

; 1157 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1158 : 				&& _DEBUG_LT_PRED(this->comp,

	push	1157					; 00000485H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@Insert@2
	push	1160					; 00000488H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, eax
	call	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
	mov	ecx, eax
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	je	$LN7@Insert@2

; 1159 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1160 : 					this->_Kfn(_Val)))
; 1161 : 				{	// insert before _Where
; 1162 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@Insert@2

; 1163 : 					return (_Insert(false, _Next._Mynode(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2

; 1164 : 				else

	jmp	SHORT $LN5@Insert@2
$LN6@Insert@2:

; 1165 : 					return (_Insert(true, _Where._Mynode(), _Node));

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	edx, DWORD PTR $T144438[ebp]
	or	edx, 1
	mov	DWORD PTR $T144438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2
$LN5@Insert@2:

; 1166 : 				}
; 1167 : 			else if (_DEBUG_LT_PRED(this->comp,

	jmp	$LN30@Insert@2
$LN7@Insert@2:

; 1168 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1169 : 				&& (++(_Next = _Where) == end()
; 1170 : 					|| _DEBUG_LT_PRED(this->comp,

	push	1168					; 00000490H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	test	eax, eax
	je	$LN39@Insert@2
	lea	ecx, DWORD PTR $T144430[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::end
	mov	DWORD PTR tv589[ebp], eax
	mov	edx, DWORD PTR tv589[ebp]
	mov	DWORD PTR tv781[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 4
	mov	DWORD PTR $T144438[ebp], eax
	mov	ecx, DWORD PTR tv781[ebp]
	push	ecx
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??4?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, eax
	call	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator++
	mov	ecx, eax
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN38@Insert@2
	push	1171					; 00000493H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@Insert@2
$LN38@Insert@2:
	mov	DWORD PTR tv666[ebp], 1
	jmp	SHORT $LN40@Insert@2
$LN39@Insert@2:
	mov	DWORD PTR tv666[ebp], 0
$LN40@Insert@2:
	mov	dl, BYTE PTR tv666[ebp]
	mov	BYTE PTR $T144429[ebp], dl
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T144438[ebp]
	and	eax, 4
	je	SHORT $LN54@Insert@2
	and	DWORD PTR $T144438[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T144430[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN54@Insert@2:
	movzx	ecx, BYTE PTR $T144429[ebp]
	test	ecx, ecx
	je	$LN30@Insert@2

; 1171 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1172 : 				{	// insert after _Where
; 1173 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN2@Insert@2

; 1174 : 					return (_Insert(false, _Where._Mynode(), _Node));

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@Insert@2

; 1175 : 				else

	jmp	SHORT $LN30@Insert@2
$LN2@Insert@2:

; 1176 : 					return (_Insert(true, _Next._Mynode(), _Node));

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN33@Insert@2
$LN30@Insert@2:

; 1177 : 				}
; 1178 : 			}
; 1179 : 
; 1180 : 		return (_Linsert(_Node, _Leftish).first);	// try usual insert

	movzx	ecx, BYTE PTR __Leftish$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Node$[ebp]
	push	edx
	lea	eax, DWORD PTR $T144434[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Linsert
	mov	DWORD PTR tv696[ebp], eax
	mov	ecx, DWORD PTR tv696[ebp]
	mov	DWORD PTR tv791[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv791[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T144438[ebp]
	or	eax, 1
	mov	DWORD PTR $T144438[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144434[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN33@Insert@2:

; 1181 : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN59@Insert@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN59@Insert@2:
	DD	1
	DD	$LN58@Insert@2
$LN58@Insert@2:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN56@Insert@2
$LN56@Insert@2:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$1:
	lea	ecx, DWORD PTR __Next$[ebp]
	jmp	??1?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$2:
	mov	eax, DWORD PTR $T144438[ebp]
	and	eax, 1
	je	$LN44@Insert@2
	and	DWORD PTR $T144438[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN44@Insert@2:
	ret	0
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$3:
	lea	ecx, DWORD PTR $T144417[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$4:
	lea	ecx, DWORD PTR $T144419[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$5:
	mov	eax, DWORD PTR $T144438[ebp]
	and	eax, 2
	je	$LN48@Insert@2
	and	DWORD PTR $T144438[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T144421[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN48@Insert@2:
	ret	0
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$6:
	lea	ecx, DWORD PTR $T144426[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$7:
	lea	ecx, DWORD PTR $T144428[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$8:
	mov	eax, DWORD PTR $T144438[ebp]
	and	eax, 4
	je	$LN53@Insert@2
	and	DWORD PTR $T144438[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T144430[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN53@Insert@2:
	ret	0
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z$9:
	lea	ecx, DWORD PTR $T144434[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T144463 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144463[ebp], 0

; 807  : 		return (iterator(_Lmost(), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	edx, DWORD PTR $T144463[ebp]
	or	edx, 1
	mov	DWORD PTR $T144463[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 808  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z PROC ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@Z ENDP ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::destroy
_TEXT	ENDS
PUBLIC	??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z ; std::_Construct<AbstRaven_Bot *,AbstRaven_Bot * const &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@ABQAV3@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@ABQAV3@@Z PROC ; std::allocator<AbstRaven_Bot *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 197  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z ; std::_Construct<AbstRaven_Bot *,AbstRaven_Bot * const &>
	add	esp, 8

; 198  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@ABQAV3@@Z ENDP ; std::allocator<AbstRaven_Bot *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T144474 = -24						; size = 4
$T144473 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T144474[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T144474[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T144474[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T144474[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T144473[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144474[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 56   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 57   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 58   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 61   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 62   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 		_Destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
	add	esp, 4

; 214  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::~_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::~_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::~_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::size, COMDAT
; _this$ = ecx

; 868  : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 869  : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 870  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::size
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
tv283 = -160						; size = 4
tv196 = -156						; size = 4
tv279 = -152						; size = 4
tv289 = -148						; size = 4
tv277 = -144						; size = 4
tv167 = -140						; size = 4
tv270 = -136						; size = 4
tv288 = -132						; size = 4
tv151 = -128						; size = 4
$T144513 = -124						; size = 4
$T144510 = -117						; size = 1
$T144509 = -116						; size = 12
$T144508 = -101						; size = 1
$T144507 = -100						; size = 12
$T144506 = -85						; size = 1
$T144505 = -84						; size = 12
$T144504 = -69						; size = 1
$T144503 = -68						; size = 12
$T144502 = -53						; size = 1
__Where$140257 = -48					; size = 12
__Addleft$ = -29					; size = 1
__Wherenode$ = -28					; size = 4
__Trynode$ = -24					; size = 4
__Val$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 148				; 00000094H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 37					; 00000025H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144513[ebp], 0

; 945  : 		const value_type& _Val = this->_Myval(_Node);

	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR __Val$[ebp], eax

; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], ecx

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 949  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	BYTE PTR __Addleft$[ebp], 1
$LN12@Linsert:

; 950  : 		while (!this->_Isnil(_Trynode))

	mov	ecx, DWORD PTR __Trynode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN11@Linsert

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;

	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], eax

; 953  : 			if (_Leftish)

	movzx	ecx, BYTE PTR __Leftish$[ebp]
	test	ecx, ecx
	je	SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

	push	956					; 000003bcH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR __Addleft$[ebp], al

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

	jmp	SHORT $LN9@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

	push	960					; 000003c0H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Trynode$[ebp]
	push	ecx
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@ABQAVAbstRaven_Bot@@AAPAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	mov	BYTE PTR __Addleft$[ebp], al
$LN9@Linsert:

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN15@Linsert
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv151[ebp], ecx
	jmp	SHORT $LN16@Linsert
$LN15@Linsert:
	mov	edx, DWORD PTR __Trynode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv151[ebp], eax
$LN16@Linsert:
	mov	ecx, DWORD PTR tv151[ebp]
	mov	DWORD PTR __Trynode$[ebp], ecx

; 963  : 			}

	jmp	$LN12@Linsert
$LN11@Linsert:

; 964  : 
; 965  : 		if (this->_Multi)

	xor	edx, edx
	je	SHORT $LN8@Linsert

; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

	mov	BYTE PTR $T144502[ebp], 1
	lea	eax, DWORD PTR $T144502[ebp]
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T144503[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	DWORD PTR tv288[ebp], eax
	mov	edx, DWORD PTR tv288[ebp]
	mov	DWORD PTR tv270[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv270[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
	mov	ecx, DWORD PTR $T144513[ebp]
	or	ecx, 1
	mov	DWORD PTR $T144513[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T144503[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN13@Linsert

; 967  : 		else

	jmp	$LN13@Linsert
$LN8@Linsert:

; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 970  : 			if (!_Addleft)

	movzx	ecx, BYTE PTR __Addleft$[ebp]
	test	ecx, ecx
	jne	SHORT $LN6@Linsert
	jmp	$LN5@Linsert
$LN6@Linsert:

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

	lea	edx, DWORD PTR $T144505[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::begin
	mov	DWORD PTR tv167[ebp], eax
	mov	eax, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv277[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv277[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator==
	mov	BYTE PTR $T144504[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144505[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T144504[ebp]
	test	edx, edx
	je	SHORT $LN4@Linsert

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

	mov	BYTE PTR $T144506[ebp], 1
	lea	eax, DWORD PTR $T144506[ebp]
	push	eax
	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T144507[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	DWORD PTR tv289[ebp], eax
	mov	ecx, DWORD PTR tv289[ebp]
	mov	DWORD PTR tv279[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv279[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
	mov	eax, DWORD PTR $T144513[ebp]
	or	eax, 1
	mov	DWORD PTR $T144513[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144507[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN13@Linsert

; 974  : 			else

	jmp	SHORT $LN5@Linsert
$LN4@Linsert:

; 975  : 				--_Where;	// need to test if insert before is okay

	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
$LN5@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

	push	979					; 000003d3H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$_Kfn@QAVAbstRaven_Bot@@VMemoryRecord@@@?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@SAABQAVAbstRaven_Bot@@ABU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ; std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0>::_Kfn<AbstRaven_Bot * const,MemoryRecord>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Mynode
	push	eax
	call	?_Key@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	push	eax
	call	??$_Debug_lt_pred@U?$less@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YA_NU?$less@PAVAbstRaven_Bot@@@0@AAPAVAbstRaven_Bot@@ABQAV2@PB_WI@Z ; std::_Debug_lt_pred<std::less<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Linsert

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

	mov	BYTE PTR $T144508[ebp], 1
	lea	edx, DWORD PTR $T144508[ebp]
	push	edx
	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Addleft$[ebp]
	push	edx
	lea	eax, DWORD PTR $T144509[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
	mov	DWORD PTR tv196[ebp], eax
	mov	ecx, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv283[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
	mov	eax, DWORD PTR $T144513[ebp]
	or	eax, 1
	mov	DWORD PTR $T144513[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T144509[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN13@Linsert

; 981  : 			else

	jmp	SHORT $LN1@Linsert
$LN2@Linsert:

; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

	mov	ecx, DWORD PTR __Node$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 8

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

	push	1
	mov	eax, DWORD PTR __Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

	mov	BYTE PTR $T144510[ebp], 0
	lea	ecx, DWORD PTR $T144510[ebp]
	push	ecx
	lea	edx, DWORD PTR __Where$140257[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>
	mov	eax, DWORD PTR $T144513[ebp]
	or	eax, 1
	mov	DWORD PTR $T144513[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN13@Linsert
$LN1@Linsert:

; 989  : 				}
; 990  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$140257[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
$LN13@Linsert:

; 991  : 		}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@Linsert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 160				; 000000a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN27@Linsert:
	DD	1
	DD	$LN26@Linsert
$LN26@Linsert:
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN24@Linsert
$LN24@Linsert:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$0:
	lea	ecx, DWORD PTR $T144503[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$1:
	mov	eax, DWORD PTR $T144513[ebp]
	and	eax, 1
	je	$LN19@Linsert
	and	DWORD PTR $T144513[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@XZ
$LN19@Linsert:
	ret	0
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$2:
	lea	ecx, DWORD PTR __Where$140257[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$3:
	lea	ecx, DWORD PTR $T144505[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$4:
	lea	ecx, DWORD PTR $T144507[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z$5:
	lea	ecx, DWORD PTR $T144509[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Linsert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Linsert
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::max_size
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
$T144531 = -12						; size = 4
__Pnode$140291 = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144531[ebp], 0

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+12]
	ja	SHORT $LN17@Insert@3

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 17					; 00000011H
	push	eax
	call	??$_Dest_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 8

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

	push	1
	mov	ecx, DWORD PTR __Newnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN17@Insert@3:

; 1640 : 			}
; 1641 : 		++this->_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1642 : 		_Newnode->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN16@Insert@3

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1647 : 			_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 1648 : 			_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert@3
$LN16@Insert@3:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert@3

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1653 : 			if (_Wherenode == _Lmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert@3

; 1654 : 				_Lmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert@3:

; 1655 : 			}
; 1656 : 		else

	jmp	SHORT $LN15@Insert@3
$LN14@Insert@3:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 1659 : 			if (_Wherenode == _Rmost())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert@3

; 1660 : 				_Rmost() = _Newnode;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert@3:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$140291[ebp], edx
$LN10@Insert@3:

; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

	mov	eax, DWORD PTR __Pnode$140291[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert@3

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

	mov	eax, DWORD PTR __Pnode$140291[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert@3

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert@3

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$140291[ebp], ecx

; 1677 : 					}
; 1678 : 				else

	jmp	$LN6@Insert@3
$LN7@Insert@3:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert@3

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$140291[ebp], eax

; 1683 : 						_Lrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate
$LN5@Insert@3:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate
$LN6@Insert@3:

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

	jmp	$LN4@Insert@3
$LN8@Insert@3:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert@3

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$140291[ebp], eax

; 1703 : 					}
; 1704 : 				else

	jmp	$LN4@Insert@3
$LN3@Insert@3:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert@3

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$140291[ebp], eax

; 1709 : 						_Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Rrotate
$LN1@Insert@3:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

	mov	edx, DWORD PTR __Pnode$140291[ebp]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$140291[ebp]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Lrotate
$LN4@Insert@3:

; 1716 : 					}
; 1717 : 				}

	jmp	$LN10@Insert@3
$LN9@Insert@3:

; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1

; 1720 : 		return (iterator(_Newnode, this));

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
	mov	ecx, DWORD PTR $T144531[ebp]
	or	ecx, 1
	mov	DWORD PTR $T144531[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert@3:

; 1721 : 		}

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Insert@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>

; 209  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator--
PUBLIC	??_C@_1CAI@CBKOKKAO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ ; `string'
;	COMDAT ??_C@_1CAI@CBKOKKAO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1CAI@CBKOKKAO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'T', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b'
	DB	00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'M', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, '0', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Ptrsav$ = -8						; size = 4
_this$ = -4						; size = 4
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN2@operator@12
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@operator@12
$LN2@operator@12:

; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	282					; 0000011aH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 283  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	ecx, ecx
	je	SHORT $LN6@operator@12
	xor	edx, edx
	jne	SHORT $LN7@operator@12
$LN6@operator@12:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	283					; 0000011bH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN7@operator@12
	int	3
$LN7@operator@12:
	push	0
	push	283					; 0000011bH
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAI@CBKOKKAO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN3@operator@12:

; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Ptrsav$[ebp], edx

; 287  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator--

; 288  : 		if (_Ptrsav == this->_Ptr)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptrsav$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@operator@12

; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");

	push	290					; 00000122H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@OKCGOALM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 291  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	edx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	edx, edx
	je	SHORT $LN8@operator@12
	xor	eax, eax
	jne	SHORT $LN9@operator@12
$LN8@operator@12:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN9@operator@12
	int	3
$LN9@operator@12:
	push	0
	push	291					; 00000123H
	push	OFFSET ??_C@_1IK@JNLFPKKF@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CAI@CBKOKKAO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN1@operator@12:

; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);
; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 306  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::max_size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::max_size, COMDAT
; _this$ = ecx

; 873  : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 874  : 		return (this->_Alval.max_size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 17					; 00000011H
	call	?max_size@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::max_size

; 875  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::max_size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 419  : 		--(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--

; 420  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 421  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >::operator--
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$140336 = -8					; size = 4
_this$ = -4						; size = 4
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@operator@13

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
	jmp	$LN7@operator@13
$LN8@operator@13:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@operator@13

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Max@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Max
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 89   : 		else

	jmp	SHORT $LN7@operator@13
$LN4@operator@13:

; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$140336[ebp], edx
	mov	eax, DWORD PTR __Pnode$140336[ebp]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@operator@13
	mov	edx, DWORD PTR __Pnode$140336[ebp]
	push	edx
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator@13

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$140336[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN4@operator@13
$LN3@operator@13:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@operator@13

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else

	jmp	SHORT $LN7@operator@13
$LN2@operator@13:

; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$140336[ebp]
	mov	DWORD PTR [edx+8], eax
$LN7@operator@13:

; 99   : 			}
; 100  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 101  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >,std::_Iterator_base12>::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AA_N@std@@YA$$QA_NAA_N@Z	; std::move<bool &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>

; 228  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
__Count$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::max_size, COMDAT
; _this$ = ecx

; 217  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

	mov	DWORD PTR __Count$[ebp], 76695844	; 04924924H

; 219  : 		return (0 < _Count ? _Count : 1);

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]

; 220  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::max_size
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z$0
__ehfuncinfo$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$move@AA_N@std@@YA$$QA_NAA_N@Z	; std::move<bool &>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [edx+12], al

; 146  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z PROC ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ENDP ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord>,std::pair<AbstRaven_Bot * const,MemoryRecord> >
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
_TEXT	SEGMENT
tv93 = -36						; size = 4
tv92 = -32						; size = 4
tv91 = -28						; size = 4
__Wherenode$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode
	mov	DWORD PTR __Wherenode$[ebp], eax

; 589  : 
; 590  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	mov	DWORD PTR tv91[ebp], eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Myval@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv92[ebp], eax
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	call	??$addressof@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::addressof<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 17					; 00000011H
	push	edx
	call	??$_Cons_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord>,std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode@2
__catch$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

	push	1
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::deallocate

; 595  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 596  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$1
	ret	0
$LN4@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z$1:

; 597  : 
; 598  : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode@2:

; 599  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@1@$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode<std::pair<AbstRaven_Bot * const,MemoryRecord> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

	pop	ebp
	ret	0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z PROC ; std::forward<AbstRaven_Bot *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ENDP ; std::forward<AbstRaven_Bot *>
_TEXT	ENDS
PUBLIC	??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--
PUBLIC	??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv141 = -40						; size = 4
tv140 = -36						; size = 4
tv138 = -32						; size = 4
$T144598 = -28						; size = 4
$T144593 = -24						; size = 4
$T144592 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 739  : 		iterator emplace(const_iterator _Where, _Valty&& _Val)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T144598[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 740  : 		{	// insert _Val at _Where
; 741  : 		_Insert_rv(_Where, _STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144592[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>

; 742  : 		return (_Make_iter(--_Where));

	lea	ecx, DWORD PTR __Where$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T144593[ebp], esp
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv140[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@2@@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Make_iter
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR $T144598[ebp]
	or	ecx, 1
	mov	DWORD PTR $T144598[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 743  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$3:
	mov	eax, DWORD PTR $T144598[ebp]
	and	eax, 1
	je	$LN7@emplace
	and	DWORD PTR $T144598[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
$LN7@emplace:
	ret	0
__ehhandler$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@V?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::emplace<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAVAbstRaven_Bot@@@std@@YAABQAVAbstRaven_Bot@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVAbstRaven_Bot@@@std@@YAABQAVAbstRaven_Bot@@ABQAV1@@Z PROC ; std::forward<AbstRaven_Bot * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@ABQAVAbstRaven_Bot@@@std@@YAABQAVAbstRaven_Bot@@ABQAV1@@Z ENDP ; std::forward<AbstRaven_Bot * const &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z PROC ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YAXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@@Z ENDP ; std::_Destroy<std::pair<AbstRaven_Bot * const,MemoryRecord> >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z$0
__ehfuncinfo$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T144613 = -24						; size = 4
$T144612 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z PROC ; std::_Construct<AbstRaven_Bot *,AbstRaven_Bot * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 47   : 	void _FARQ *_Vptr = _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax

; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T144613[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T144613[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABQAVAbstRaven_Bot@@@std@@YAABQAVAbstRaven_Bot@@ABQAV1@@Z ; std::forward<AbstRaven_Bot * const &>
	add	esp, 4
	mov	ecx, DWORD PTR $T144613[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T144613[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@Construct
$LN3@Construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Construct:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T144612[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 49   : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144613[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@PAVAbstRaven_Bot@@ABQAV1@@std@@YAXPAPAVAbstRaven_Bot@@ABQAV1@@Z ENDP ; std::_Construct<AbstRaven_Bot *,AbstRaven_Bot * const &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT

; 62   : 	{	// destroy object at _Ptr

	push	ebp
	mov	ebp, esp

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

	pop	ebp
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>

; 248  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

	pop	ebp
	ret	0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

	pop	ebp
	ret	0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
__Wherenode$ = -8					; size = 4
_this$ = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Parent@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 566  : 		this->_Isnil(_Wherenode) = false;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0

; 567  : 		return (_Wherenode);

	mov	eax, DWORD PTR __Wherenode$[ebp]

; 568  : 		}

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Buynode@?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
CONST	SEGMENT
??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'A', 00H, 'b', 00H, 's', 00H, 't', 00H, 'R', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'A', 00H, 'b', 00H
	DB	's', 00H, 't', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, ' ', 00H, '*', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--, COMDAT
; _this$ = ecx

; 249  : 		{	// predecrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 250  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 251  : 		if (this->_Getcont() == 0
; 252  : 			|| this->_Ptr == 0
; 253  : 			|| (this->_Ptr = _Mylist::_Prevnode(this->_Ptr))
; 254  : 				== ((_Mylist *)this->_Getcont())->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator@14
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator@14
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+8], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	SHORT $LN2@operator@14
$LN1@operator@14:

; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("list iterator not decrementable");

	push	256					; 00000100H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@JDNDELPC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH

; 257  : 			_SCL_SECURE_OUT_OF_RANGE;

	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator@14
	xor	ecx, ecx
	jne	SHORT $LN6@operator@14
$LN5@operator@14:
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	__CrtDbgReportW
	add	esp, 20					; 00000014H
	cmp	eax, 1
	jne	SHORT $LN6@operator@14
	int	3
$LN6@operator@14:
	push	0
	push	257					; 00000101H
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BAE@GLBLDJNL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
$LN2@operator@14:

; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);
; 263  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 264  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 265  : 
; 266  :  #else /* _ITERATOR_DEBUG_LEVEL */
; 267  : 		this->_Ptr = _Mylist::_Prevnode(this->_Ptr);
; 268  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 269  : 
; 270  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 271  : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> > >::operator--
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord>,std::pair<AbstRaven_Bot * const,MemoryRecord> >, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@0@PAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,std::pair<AbstRaven_Bot * const,MemoryRecord>,std::pair<AbstRaven_Bot * const,MemoryRecord> >
_TEXT	ENDS
PUBLIC	??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0
__ehfuncinfo$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
__Newnode$ = -24					; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
__Val$ = 20						; size = 4
??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z PROC ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 746  : 		void _Insert_rv(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 747  : 		_Valty&& _Val)
; 748  : 		{	// insert _Val at _Where
; 749  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 750  : 		if (_Where._Getcont() != this)

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN1@Insert_rv

; 751  : 			_DEBUG_ERROR("list insert iterator outside range");

	push	751					; 000002efH
	push	OFFSET ??_C@_1II@KCMIDAEO@?$AAc?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@BPNHNPIG@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN1@Insert_rv:

; 752  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 753  : 
; 754  : 		_Nodeptr _Pnode = _Where._Mynode();

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 755  : 		_Nodeptr _Newnode =
; 756  : 			this->_Buynode(_Pnode, this->_Prevnode(_Pnode),
; 757  : 				_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>
	mov	DWORD PTR __Newnode$[ebp], eax

; 758  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXI@Z ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Incsize

; 759  : 		this->_Prevnode(_Pnode) = _Newnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 760  : 		this->_Nextnode(this->_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx

; 761  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_rv@PAVAbstRaven_Bot@@@?$list@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@1@$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::list<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Insert_rv<AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z$0
__ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [edx+12], al

; 164  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@PAVAbstRaven_Bot@@VMemoryRecord@@U?$less@PAVAbstRaven_Bot@@@std@@V?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@4@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<AbstRaven_Bot *,MemoryRecord,std::less<AbstRaven_Bot *>,std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >,0> > > &,bool>
PUBLIC	??$?0QAVAbstRaven_Bot@@VMemoryRecord@@@?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QAU01@@Z ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord><AbstRaven_Bot * const,MemoryRecord>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T144667 = -24						; size = 4
$T144666 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	56					; 00000038H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T144667[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T144667[ebp], 0
	je	SHORT $LN3@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@YA$$QAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@0@AAU10@@Z ; std::forward<std::pair<AbstRaven_Bot * const,MemoryRecord> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T144667[ebp]
	call	??$?0QAVAbstRaven_Bot@@VMemoryRecord@@@?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QAU01@@Z ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord><AbstRaven_Bot * const,MemoryRecord>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@2
$LN3@construct@2:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@2:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T144666[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144667[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@@std@@QAEXPAU?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<AbstRaven_Bot * const,MemoryRecord> >::construct
PUBLIC	??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__catchsym$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$0
__unwindtable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$2
__ehfuncinfo$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
_TEXT	SEGMENT
tv137 = -44						; size = 4
tv136 = -40						; size = 4
tv135 = -36						; size = 4
tv134 = -32						; size = 4
tv133 = -28						; size = 4
__Pnode$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z PROC ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>, COMDAT
; _this$ = ecx

; 541  : 		_Nodeptr _Buynode(_Nodeptr _Next,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 542  : 		_Nodeptr _Prev, _Valty&& _Val)
; 543  : 		{	// allocate a node and set links and value
; 544  : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 545  : 
; 546  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 547  : 		this->_Nextnode(_Pnode) = _Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [ecx], edx

; 548  : 		this->_Prevnode(_Pnode) = _Prev;

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@PAU342@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	edx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [ecx], edx

; 549  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Pnode)),
; 550  : 			_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@SAAAPAVAbstRaven_Bot@@PAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@@Z ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Myval
	add	esp, 4
	mov	DWORD PTR tv136[ebp], eax
	mov	edx, DWORD PTR tv136[ebp]
	push	edx
	call	??$addressof@PAVAbstRaven_Bot@@@std@@YAPAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::addressof<AbstRaven_Bot *>
	add	esp, 4
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	push	eax
	mov	ecx, DWORD PTR tv137[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 13					; 0000000dH
	push	edx
	call	??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode@3
__catch$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$0:

; 551  : 		_CATCH_ALL
; 552  : 		this->_Alnod.deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@2@I@Z ; std::allocator<std::_List_nod<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Node>::deallocate

; 553  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 554  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$1
	ret	0
$LN4@Buynode@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z$1:

; 555  : 
; 556  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode@3:

; 557  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@PAVAbstRaven_Bot@@@?$_List_val@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@std@@QAEPAU_Node@?$_List_nod@PAVAbstRaven_Bot@@V?$allocator@PAVAbstRaven_Bot@@@std@@@1@PAU231@0$$QAPAVAbstRaven_Bot@@@Z ENDP ; std::_List_val<AbstRaven_Bot *,std::allocator<AbstRaven_Bot *> >::_Buynode<AbstRaven_Bot *>
PUBLIC	??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QBQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>
PUBLIC	??$forward@QAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z ; std::forward<AbstRaven_Bot * const>
PUBLIC	??$forward@VMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ; std::forward<MemoryRecord>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0QAVAbstRaven_Bot@@VMemoryRecord@@@?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0QAVAbstRaven_Bot@@VMemoryRecord@@@?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord><AbstRaven_Bot * const,MemoryRecord>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 8
	push	eax
	call	??$forward@VMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ; std::forward<MemoryRecord>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@QAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z ; std::forward<AbstRaven_Bot * const>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QBQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>

; 256  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0QAVAbstRaven_Bot@@VMemoryRecord@@@?$pair@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<AbstRaven_Bot * const,MemoryRecord>::pair<AbstRaven_Bot * const,MemoryRecord><AbstRaven_Bot * const,MemoryRecord>
_TEXT	ENDS
PUBLIC	??$move@ABQAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z ; std::move<AbstRaven_Bot * const &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QBQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QBQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z PROC ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$move@ABQAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z ; std::move<AbstRaven_Bot * const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$move@AAVMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ; std::move<MemoryRecord &>
	add	esp, 4
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 8
	mov	ecx, 12					; 0000000cH
	mov	esi, eax
	rep movsd

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Pair_base@QAVAbstRaven_Bot@@VMemoryRecord@@@std@@QAE@$$QBQAVAbstRaven_Bot@@$$QAVMemoryRecord@@@Z ENDP ; std::_Pair_base<AbstRaven_Bot * const,MemoryRecord>::_Pair_base<AbstRaven_Bot * const,MemoryRecord>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z ; std::allocator<AbstRaven_Bot *>::construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z PROC ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>, COMDAT

; 279  : 	{	// construct using allocator

	push	ebp
	mov	ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z ; std::allocator<AbstRaven_Bot *>::construct

; 281  : 	}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAbstRaven_Bot@@@std@@PAVAbstRaven_Bot@@PAV3@@std@@YAXAAV?$allocator@PAVAbstRaven_Bot@@@0@PAPAVAbstRaven_Bot@@$$QAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<AbstRaven_Bot *>,AbstRaven_Bot *,AbstRaven_Bot *>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$forward@QAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@QAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z PROC ; std::forward<AbstRaven_Bot * const>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@QAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z ENDP ; std::forward<AbstRaven_Bot * const>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$forward@VMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z PROC ; std::forward<MemoryRecord>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

	push	ebp
	mov	ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

	pop	ebp
	ret	0
??$forward@VMemoryRecord@@@std@@YA$$QAVMemoryRecord@@AAV1@@Z ENDP ; std::forward<MemoryRecord>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$move@ABQAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABQAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z PROC ; std::move<AbstRaven_Bot * const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

	pop	ebp
	ret	0
??$move@ABQAVAbstRaven_Bot@@@std@@YA$$QBQAVAbstRaven_Bot@@ABQAV1@@Z ENDP ; std::move<AbstRaven_Bot * const &>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z$0
__ehfuncinfo$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T144707 = -24						; size = 4
$T144706 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z PROC ; std::allocator<AbstRaven_Bot *>::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T144707[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T144707[ebp], 0
	je	SHORT $LN3@construct@3
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@PAVAbstRaven_Bot@@@std@@YA$$QAPAVAbstRaven_Bot@@AAPAV1@@Z ; std::forward<AbstRaven_Bot *>
	add	esp, 4
	mov	edx, DWORD PTR $T144707[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T144707[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct@3
$LN3@construct@3:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct@3:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T144706[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 203  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144707[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@PAVAbstRaven_Bot@@@std@@QAEXPAPAVAbstRaven_Bot@@$$QAPAV3@@Z ENDP ; std::allocator<AbstRaven_Bot *>::construct
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxInt@@YAXXZ
text$yc	SEGMENT
??__EMaxInt@@YAXXZ PROC					; `dynamic initializer for 'MaxInt'', COMDAT

; 23   : const int     MaxInt    = (std::numeric_limits<int>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR _MaxInt, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxInt@@YAXXZ ENDP					; `dynamic initializer for 'MaxInt''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
text$yc	ENDS
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 712  : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 713  : 		{	// return maximum value
; 714  : 		return (INT_MAX);

	mov	eax, 2147483647				; 7fffffffH

; 715  : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxDouble@@YAXXZ
text$yc	SEGMENT
??__EMaxDouble@@YAXXZ PROC				; `dynamic initializer for 'MaxDouble'', COMDAT

; 24   : const double  MaxDouble = (std::numeric_limits<double>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::max
	fstp	QWORD PTR _MaxDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxDouble@@YAXXZ ENDP				; `dynamic initializer for 'MaxDouble''
text$yc	ENDS
PUBLIC	__real@7fefffffffffffff
;	COMDAT __real@7fefffffffffffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?max@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::max, COMDAT

; 1233 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1234 : 		{	// return maximum value
; 1235 : 		return (DBL_MAX);

	fld	QWORD PTR __real@7fefffffffffffff

; 1236 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinDouble@@YAXXZ
text$yc	SEGMENT
??__EMinDouble@@YAXXZ PROC				; `dynamic initializer for 'MinDouble'', COMDAT

; 25   : const double  MinDouble = (std::numeric_limits<double>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::min
	fstp	QWORD PTR _MinDouble
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinDouble@@YAXXZ ENDP				; `dynamic initializer for 'MinDouble''
text$yc	ENDS
PUBLIC	__real@0010000000000000
;	COMDAT __real@0010000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@0010000000000000 DQ 00010000000000000r	; 2.22507e-308
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?min@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::min, COMDAT

; 1228 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1229 : 		{	// return minimum value
; 1230 : 		return (DBL_MIN);

	fld	QWORD PTR __real@0010000000000000

; 1231 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::min
_TEXT	ENDS
PUBLIC	?max@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::max
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMaxFloat@@YAXXZ
text$yc	SEGMENT
??__EMaxFloat@@YAXXZ PROC				; `dynamic initializer for 'MaxFloat'', COMDAT

; 26   : const float   MaxFloat  = (std::numeric_limits<float>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::max
	fstp	DWORD PTR _MaxFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxFloat@@YAXXZ ENDP				; `dynamic initializer for 'MaxFloat''
text$yc	ENDS
PUBLIC	__real@7f7fffff
;	COMDAT __real@7f7fffff
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?max@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?max@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::max, COMDAT

; 1166 : 	static _Ty (__CRTDECL max)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1167 : 		{	// return maximum value
; 1168 : 		return (FLT_MAX);

	fld	DWORD PTR __real@7f7fffff

; 1169 : 		}

	pop	ebp
	ret	0
?max@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::max
_TEXT	ENDS
PUBLIC	?min@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
;	COMDAT ??__EMinFloat@@YAXXZ
text$yc	SEGMENT
??__EMinFloat@@YAXXZ PROC				; `dynamic initializer for 'MinFloat'', COMDAT

; 27   : const float   MinFloat  = (std::numeric_limits<float>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::min
	fstp	DWORD PTR _MinFloat
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinFloat@@YAXXZ ENDP				; `dynamic initializer for 'MinFloat''
text$yc	ENDS
PUBLIC	__real@00800000
;	COMDAT __real@00800000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\limits
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-038
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?min@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?min@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::min, COMDAT

; 1161 : 	static _Ty (__CRTDECL min)() _THROW0()

	push	ebp
	mov	ebp, esp

; 1162 : 		{	// return minimum value
; 1163 : 		return (FLT_MIN);

	fld	DWORD PTR __real@00800000

; 1164 : 		}

	pop	ebp
	ret	0
?min@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::min
; Function compile flags: /Odtp /RTCsu
; File c:\users\teaja\documents\artificial-fun\labravenprojecttest\common\misc\utils.h
_TEXT	ENDS
;	COMDAT ??__ETwoPi@@YAXXZ
text$yc	SEGMENT
??__ETwoPi@@YAXXZ PROC					; `dynamic initializer for 'TwoPi'', COMDAT

; 30   : const double   TwoPi     = Pi * 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fadd	ST(0), ST(0)
	fstp	QWORD PTR _TwoPi
	pop	ebp
	ret	0
??__ETwoPi@@YAXXZ ENDP					; `dynamic initializer for 'TwoPi''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??__EHalfPi@@YAXXZ
text$yc	SEGMENT
??__EHalfPi@@YAXXZ PROC					; `dynamic initializer for 'HalfPi'', COMDAT

; 31   : const double   HalfPi    = Pi / 2;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4000000000000000
	fstp	QWORD PTR _HalfPi
	pop	ebp
	ret	0
??__EHalfPi@@YAXXZ ENDP					; `dynamic initializer for 'HalfPi''
text$yc	ENDS
PUBLIC	__real@4010000000000000
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??__EQuarterPi@@YAXXZ
text$yc	SEGMENT
??__EQuarterPi@@YAXXZ PROC				; `dynamic initializer for 'QuarterPi'', COMDAT

; 32   : const double   QuarterPi = Pi / 4;

	push	ebp
	mov	ebp, esp
	fld	QWORD PTR _Pi
	fdiv	QWORD PTR __real@4010000000000000
	fstp	QWORD PTR _QuarterPi
	pop	ebp
	ret	0
??__EQuarterPi@@YAXXZ ENDP				; `dynamic initializer for 'QuarterPi''
text$yc	ENDS
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1036 : 	__PURE_APPDOMAIN_GLOBAL locale::id num_get<_Elem, _InIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
text$yc	ENDS
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 71   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 72   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::codecvt<char,char,int>::id'', COMDAT

; 900  : 	__PURE_APPDOMAIN_GLOBAL locale::id codecvt<_Elem, _Byte, _Statype>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$codecvt@DDH@std@@2V0locale@2@A ; std::codecvt<char,char,int>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::codecvt<char,char,int>::id''
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocnum
text$yc	ENDS
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 228  : 	__PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$codecvt@DDH@std@@2V0locale@2@A		; std::codecvt<char,char,int>::id
_BSS	SEGMENT
_MinDouble DQ	01H DUP (?)
_MaxFloat DD	01H DUP (?)
_MinFloat DD	01H DUP (?)
_TwoPi	DQ	01H DUP (?)
_MaxInt	DD	01H DUP (?)
	ALIGN	8

_HalfPi	DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
_BSS	SEGMENT
_MaxDouble DQ	01H DUP (?)
_QuarterPi DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$codecvt@DDH@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDH@std@@2V0locale@2@A DD 01H DUP (?)	; std::codecvt<char,char,int>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_MaxInt$initializer$ DD FLAT:??__EMaxInt@@YAXXZ
_MaxDouble$initializer$ DD FLAT:??__EMaxDouble@@YAXXZ
_MinDouble$initializer$ DD FLAT:??__EMinDouble@@YAXXZ
_MaxFloat$initializer$ DD FLAT:??__EMaxFloat@@YAXXZ
_MinFloat$initializer$ DD FLAT:??__EMinFloat@@YAXXZ
_TwoPi$initializer$ DD FLAT:??__ETwoPi@@YAXXZ
_HalfPi$initializer$ DD FLAT:??__EHalfPi@@YAXXZ
_QuarterPi$initializer$ DD FLAT:??__EQuarterPi@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$codecvt@DDH@std@@2P6AXXZA DD FLAT:??__E?id@?$codecvt@DDH@std@@2V0locale@2@A@@YAXXZ ; std::codecvt<char,char,int>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
END
